{"version":3,"sources":["state/index.js","state/auth/actions.js","state/auth/reducers.js","state/product/reducers.js","state/product/actions.js","state/reducers.js","routes/base-styles.js","components/content.js","components/theme.js","components/button.js","components/header.js","state/auth/hooks/useLogin.js","views/login/containers/container.js","components/form/formGroup.js","components/form/input.js","components/form/error.js","views/login/containers/form.js","components/spinner.js","views/login/index.js","utils/departmentList.js","utils/services.js","state/registration/queries.js","state/registration/hooks/useDoctorRegistration.js","views/admin/addDoctor/index.js","state/appointment/queries.js","state/appointment/hooks/useBookAppointment.js","state/patientSearch/queries.js","state/patientSearch/hooks/useGetAllDoctorByDepartment.js","state/patientSearch/hooks/useGetAllDoctors.js","state/patientSearch/hooks/usePatientSearchbyId.js","views/patientDetails/index.js","utils/timeSlot.js","utils/constants.js","views/appointment/components/appointmentCardPrint.js","views/appointment/index.js","state/billing/queries.js","state/billing/hooks/useBillSearch.js","state/pharmacy/queries.js","state/pharmacy/hooks/useGetAllPharmacyMedicines.js","state/addMedicine/queries.js","state/addMedicine/hooks/useSearchTest.js","views/billing/components/addItemModal.js","views/billing/components/billPrint.js","views/billing/components/billSearch.js","views/billing/components/finalCharges.js","state/billing/hooks/useGenerateBill.js","views/billing/index.js","views/canteen/index.js","views/canteen/canteenStock/index.js","state/patientSearch/hooks/usePatientSearch.js","state/appointment/hooks/useGetAppointmentsByDoctorId.js","state/appointment/hooks/useGetAppointmentByPatientId.js","views/doctorAppointment/index.js","state/addMedicine/hooks/useAddMedicine.js","state/addMedicine/hooks/useSearchMedicine.js","views/medicine/addMedicine/index.js","state/addMedicine/hooks/useAddTest.js","views/medicine/addTest/index.js","views/package/index.js","state/patientSearch/hooks/usePatientSearchByName.js","views/patientSearch/index.js","views/pharmacy/index.js","state/prescription/queries.js","state/prescription/hooks/useSavePrescription.js","views/prescription/index.js","state/registration/hooks/useRegistration.js","views/registration/index.js","views/home/homescreen/index.js","state/pharmacy/hooks/useSavePharmacyMedicine.js","state/pharmacy/hooks/useGetMedicinedetail.js","views/pharmacy/addNewMedicine/index.js","views/pharmacy/addNewMedicine/utils.js","views/pharmacy/manageMedicine/index.js","state/pharmacy/hooks/UseGetAllPurchaseOrders.js","state/pharmacy/hooks/useDeletePurchaseOrder.js","views/pharmacy/purchaseOrderList/index.js","state/pharmacy/hooks/useGetAllSupplier.js","state/pharmacy/hooks/useSavePurchaseOrder.js","state/pharmacy/hooks/useGetPurchaseOrderDetails.js","views/pharmacy/newPurchaseOrder/index.js","views/pharmacy/indentPreparations/index.js","state/pharmacy/hooks/useAddSupplier.js","views/pharmacy/manageSupplier/index.js","views/pharmacy/indentPreparations/indentList/index.js","views/certificates/index.js","views/package/newPackage/index.js","views/inProgress/index.js","state/prescription/hooks/useGetPrescriptionByAppointmentId.js","views/prescription/printPrescription/index.js","views/prescription/viewPrescription/index.js","views/home/index.js","routes/index.js","registerServiceWorker.js","index.js","assets/images/logo.jpg"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","LOGIN","LOGOUT","INITIAL_STATE","logged","username","state","action","type","payload","list","auth","product","authReducer","productReducer","BaseStyles","createGlobalStyle","reset","Content","styled","div","colors","primary","secondary","default","gradient","bg","forms","labelColor","light","errorColor","danger","theme","Object","freeze","viewports","smartphone","tablet","desktop","Button","button","props","keys","find","p","upper","large","Nav","fixed","Right","nav","Title","h1","Header","dispatch","handleLogout","a","onClick","useProducts","useState","isLoading","setIsLoading","values","actions","password","Container","formGroup","Input","input","ErrorText","span","LoginForm","style","width","marginBottom","src","logo","initialValues","handleChange","handleBlur","handleSubmit","errors","genericError","name","id","placeholder","onChange","onBlur","error","background","color","BackDrop","Spinner","Loading","show","Login","location","history","from","pathname","useLogin","setLogin","useEffect","push","onSubmit","console","log","checkAdmin","notification","message","description","duration","departments","api","url","token","registration","body","axios","post","then","res","data","catch","err","doctorsRegistration","useDoctorRegistration","status","setStatus","response","Option","Select","layout","labelCol","wrapperCol","validateMessages","required","types","email","number","range","department","Item","map","key","speciality","qualification","AddDoctor","setRequest","onFinish","formData","form","user","experience","highestQualification","consulationCharge","designation","label","rules","min","max","offset","htmlType","bookAppointment","getAppointmentByDoctorId","doctorId","get","getAppointmentByPatientId","patientId","useBookAppointment","getPatientByName","patientName","getPatientById","useGetAllDoctorByDepartment","patients","setPatients","deptname","useGetAllDoctors","usePatientById","PatientDetails","prop","usePatientSearchbyId","patient","bordered","visitType","age","contactNum","text","timeSlot","date","startTime","endTime","interval","startDate","setHours","endDate","start","getTime","end","timeSlots","Date","hospitalDetails","address","contact","AppointmentCardPrint","appointmentDetails","this","marginTop","display","flexDirection","justifyContent","alignItems","margin","marginLeft","fontSize","fontWeight","height","padding","float","doctorName","dateAndTime","React","Component","Search","disabledDate","current","moment","endOf","Appointment","doctorsList","Map","queryParams","queryString","parse","search","selectedDepartment","setSelectedDepartment","selectedDate","setSelectedDate","componentRef","useRef","selectedDoctor","setSelectedDoctor","doctors","patientDetails","setPatientSearchById","doctorBydepartment","callDoctorByDepartment","setBookAppointment","handlePrint","useReactToPrint","content","length","doctor","set","MainButton","appointmentCard","size","concat","toDateString","title","extra","href","val","allowClear","enterButton","onSearch","className","fullscreen","onSelect","showSearch","defaultValue","optionFilterProp","filterOption","option","toLowerCase","indexOf","ref","rootURI","searchBillDetails","filterType","saveGenerateBill","useBillSearch","filter","savePharmacyMedicine","saveSupplier","savePurchaseOrder","deletePurchaseOrder","delete","getPharmacyMedicineDetail","medicineId","useGetPharmacyMedicines","medicines","setMedicineList","addMedicine","addTest","useTestSearch","AddItem","medicineMap","testMap","options","selected","setSelected","setMedicineSearch","tests","setTestSearch","test","testName","forEach","medicine","medicineName","amount","salePrice","obj","itemId","quantity","onItemAdded","dropdownClassName","dropdownMatchSelectWidth","BillPrint","itemList","billId","finalCharges","todaysDate","toLocaleTimeString","itemArray","item","gst","discount","total","border","cellpadding","cellspacing","colspan","totalAmount","totalDiscount","totalGST","BillSearch","filterValue","setfilterValue","Group","compact","FinalCharges","gutter","useSaveGenerateBill","responseObj","setResponseObj","EditableContext","EditableRow","index","Form","useForm","component","EditableCell","editable","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","focus","toggleEdit","setFieldsValue","save","e","validateFields","childNode","onPressEnter","paddingRight","Billing","components","row","cell","columns","sorter","compare","b","multiple","render","onConfirm","dataSource","calculateTotalCharges","setData","handleDelete","newData","findIndex","getFinalCharges","discountedAmount","splice","col","onCell","defaultbillDetails","createdAt","mockData","generateBillButton","billType","paymentStatus","paymentMode","totalCost","billDetailList","billItem","itemName","billMapId","cost","concessionPercentage","mrp","concessionType","setGenerateBillStatus","printButton","setPaymentMode","billResponse","setBillSearch","generateBillStatus","isModalVisible","setIsModalVisible","billDetails","setBillDetails","setFinalCharges","dataList","Number","parseInt","context","tempData","charges","onBillSearch","medicineList","medName","days","testList","testId","searchValue","searchFilter","tempDataList","visible","footer","onOk","onCancel","itemFormValue","Math","random","pagination","filters","rowClassName","onDiscountChange","discountValue","target","renderTitle","rel","renderItem","count","UserOutlined","Canteen","icon","PlusOutlined","OrderedListOutlined","Link","to","autoComplete","List","fields","add","remove","field","align","fieldKey","MinusCircleOutlined","block","shape","DownloadOutlined","defaultSortOrder","cat","onFilter","category","sortDirections","CanteenStock","forceUpdate","setName","items","setItems","onNameChange","event","addItem","dropdownRender","menu","flexWrap","flex","cursor","shouldUpdate","disabled","isFieldsTouched","getFieldsError","usePatientSearch","useGetAppointmentByDoctorId","useGetAppointmentByPatientId","PickerWithType","picker","DoctorAppointment","tags","tag","toUpperCase","appointmentId","setType","patientAppointments","setAppointmentByPatientId","setFilter","appointments","setAppointmentByDoctorId","appointment","time","appointmentDate","useAddMedicine","useMedicineSearch","AddMedicine","price","strength","medicineType","prefix","useAddTest","AddTest","useSearchTest","packageName","packageEndDate","Package","textAlign","usePatientByName","PatientSearch","setVisible","showPatient","setShowPatient","setPatientSearchbyId","patientDetailsByName","setPatientSearchbyName","phone","street","searches","columnsModal","dataModal","appointmentid","appointmentdate","centered","expandable","expandedRowRender","rowExpandable","Pharmacy","savePrescription","getPrescriptionByAppointmentId","useSavePrescription","Prescription","optionsTests","submitted","setSubmitted","medicineForm","vitalsForm","adviceForm","setSavePrescription","getFieldsValue","users","patientVitals","appointmentDto","weight","Bp","bp","temprature","temparature","advise","advice","prescribedMedsDtoList","prescribedTestingDtoList","numberOfDays","dosage","comment","comments","dateOfBooking","handleSearch","handleTestSearch","has","formActions","PrinterOutlined","inputValue","TextArea","useRegistration","recieptId","PhonePrefixSelector","noStyle","Registration","undefined","alternatecontact","country","visit","addonBefore","contentStyle","lineHeight","HomeScreen","autoplay","useSavePharmacyMedicine","useGetPharmacyMedicineDetail","medicineUnits","medicineDistributionUnit","AddNewMedicine","savedStatus","setSavedStatus","medicineDetail","setRequest1","mode","genericName","boxSize","details","unit","triggerValue","image","availability","expDate","expiryDate","medicineShelf","supplierPrice","suppliersPrice","tax","supplierName","rows","listType","UploadOutlined","ManageMedicines","useGetAllPharmacyMedicines","purchasePrice","sellingPrice","UseGetAllPurchaseOrder","useDeletePurchaseOrder","PurchaseOrder","purchaseOrderId","orderDate","storeName","deliveryDate","rol","productDetails","setDeletePurchaseOrder","purchaseOrders","setGetAllPurchaseOrder","order","supplier","store","useGetAllSuppliers","useSavePurchaseOrder","useGetPurchaseOrderDetails","NewPurchaseOrder","supplierOptions","purchaseDetailsForm","productListForm","suppliers","setSupplierSearch","setSavePurchaseOrder","orderDetail","setGetPurchaseOrderDetails","productName","purchaseCost","batchNumber","purchaseDetails","productList","productId","onSearchProduct","minWidth","IndentPreparation","useAddSupplier","ManageSupplier","phoneNumber","editSupplier","supplierId","IndentList","Certificates","setValue","NewPackage","InProgress","useGetPrescriptionByAppointmentId","PrintPrescription","medicineTable","testTable","class","dateOfResult","reportDesc","testDesc","temperature","diseaseDesc","medicinecolumns","testcolumns","ViewPrescription","medicineData","testData","prescriptionDetails","setPrescriptionDetails","Layout","Sider","Footer","SubMenu","Menu","Home","path","match","collapsed","setCollapsed","itemSelected","setItemSelected","trigger","collapsible","defaultSelectedKeys","MedicineBoxOutlined","VideoCameraOutlined","createElement","MenuUnfoldOutlined","MenuFoldOutlined","minHeight","overflow","Route","exact","PackageManagement","Root","AUTH_INITIAL_STATE","PRODUCT_INITIAL_STATE","reducers","Switch","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","controller","document","getElementById","URL","process","origin","addEventListener","fetch","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"iWAEaA,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC/CC,IAIQI,EAAgB,kBAAMC,qBAAWV,I,QCVjCW,EAAQ,aACRC,EAAS,kBCCTC,EAAgB,CAC3BC,QAAQ,EACRC,SAAU,IAGG,aAAoC,IAAnCC,EAAkC,uDAA1BH,EAAeI,EAAW,uCAChD,OAAQA,EAAOC,MACb,KAAKP,EACH,MAAO,CACLG,QAAQ,EACRC,SAAUE,EAAOE,SAErB,KAAKP,EACH,OAAO,eACFC,GAEP,QACE,OAAOG,ICjBAH,EAAgB,CAC3BO,KAAM,MAGO,aAAoC,IAAnCJ,EAAkC,uDAA1BH,EAAeI,EAAW,uCAChD,OAAQA,EAAOC,MACb,ICRyB,wBDSvB,OAAO,2BACFF,GADL,IAEEI,KAAMH,EAAOE,UAEjB,QACE,OAAOH,IEXE,aAAoBC,GAApB,IAAGI,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,MAAgC,CAC7CD,KAAME,EAAYF,EAAMJ,GACxBK,QAASE,EAAeF,EAASL,K,oOCFnC,IAOeQ,EAPIC,4BAAH,IACVC,K,+MCFN,IAQeC,EARCC,UAAOC,IAAV,K,wBCFPC,EAAS,CACbC,QAAS,UACTC,UAAW,UACXC,QAAS,OACTC,SACE,2EACFC,GAAI,sDASAC,EAAQ,CACZC,WAAYP,EAAOQ,MACnBC,WAAYT,EAAOU,QASNC,EANDC,OAAOC,OAAO,CAC1Bb,SACAM,QACAQ,UAdgB,CAChBC,WAAY,QACZC,OAAQ,QACRC,QAAS,Y,2UCTX,IAmBeC,EAnBApB,UAAOqB,OAAV,KAEI,SAAAC,GAAK,OACjBT,EAAMX,OAAOY,OAAOS,KAAKD,GAAOE,MAAK,SAAAC,GAAC,OAAIZ,EAAMX,OAAOuB,QACvDZ,EAAMX,OAAOC,WACG,SAAAmB,GAAK,OAAKA,EAAMI,MAAQ,YAAc,SAE/Cb,EAAMX,OAAOG,SAMb,SAAAiB,GAAK,OAAKA,EAAMK,MAAQ,OAAS,U,obCR5C,IAAMC,EAAM5B,UAAOC,IAAV,KAOK,SAAAqB,GAAK,OAAKA,EAAMO,MAAQ,QAAU,cAG1CC,EAAQ9B,UAAO+B,IAAV,KAKLC,EAAQhC,UAAOiC,GAAV,KA2BIC,EArBA,SAAAZ,GAAU,IAAD,EACO1C,IADP,mBACbY,EADa,KACbA,KAAQ2C,EADK,KAGhBC,EAAY,uCAAG,sBAAAC,EAAA,sEACbF,ETzBmB,CAC3B9C,KAAMN,ISuBe,2CAAH,qDAIlB,OACE,kBAAC6C,EAAD,KACE,kBAACI,EAAD,eACA,kBAACF,EAAD,KACGtC,EAAKP,QACJ,kBAAC,EAAD,CAAQqB,UAAQ,EAACgC,QAAS,kBAAMF,MAAhC,aCrBKG,EAhBK,WAAO,IAAD,EACK3D,IADL,mBACfY,EADe,KACfA,KAAQ2C,EADO,OAEUK,oBAAS,GAFnB,mBAEjBC,EAFiB,KAENC,EAFM,KAaxB,MAAO,CAAClD,EATM,uCAAG,6BAAA6C,EAAA,sDAASM,EAAT,EAASA,OAAT,EAAiBC,QAChCF,GAAa,GAEbA,GAAa,GACW,KAApBC,EAAOzD,UAAuC,KAApByD,EAAOE,UACnCV,GVVgB7C,EUUDqD,EAAOzD,SVVO,CACjCG,KAAMP,EACNQ,aUGiB,iCVLE,IAACA,IUKH,OAAH,sDASUmD,I,uMCf1B,IAQeK,EARG9C,UAAOC,IAAV,K,iLCAf,IAOe8C,EAPG/C,UAAOC,IAAV,K,6MCAf,IASe+C,EATDhD,UAAOiD,MAAV,K,6GCCX,IAKeC,GALGlD,UAAOmD,KAAV,IAEJtC,EAAML,MAAMG,Y,oBCuCRyC,GAnCG,SAAA9B,GAAK,OACrB,oCACE,yBAAK+B,MAAO,CAAEC,MAAO,QAASC,aAAc,QAAUC,IAAKC,OAC3D,kBAAC,IAAD,eAAQC,cAAe,CAAExE,SAAU,GAAI2D,SAAU,KAAUvB,IACxD,gBAAGqC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAYjB,EAA7B,EAA6BA,OAAQkB,EAArC,EAAqCA,aAAcC,EAAnD,EAAmDA,OAAnD,OACC,kBAAC,EAAD,KACGA,EAAOC,cAAgB,kBAAC,GAAD,KAAYD,EAAOC,cAC3C,kBAAC,EAAD,CACEC,KAAK,WACLC,GAAG,WACHC,YAAY,WACZC,SAAUR,EAAa,YACvBS,OAAQR,EAAW,YACnBS,MAAOP,EAAO5E,SACdR,MAAOiE,EAAOzD,WAEhB,kBAAC,EAAD,CACE+E,GAAG,WACHD,KAAK,WACL3E,KAAK,WACL6E,YAAY,WACZC,SAAUR,EAAa,YACvBS,OAAQR,EAAW,YACnBS,MAAOP,EAAOjB,SACdnE,MAAOiE,EAAOE,WAEhB,kBAAC,EAAD,CAAQ1C,SAAO,EAACwB,OAAK,EAACW,QAASuB,EAAcR,MAAO,CAAEiB,WAAY,UAAWC,MAAO,SAAWlF,KAAK,UAApG,e,suBC/BV,IAAMmF,GAAWxE,UAAOC,IAAV,MAURwE,GAAUzE,UAAOC,IAAV,KAEaY,EAAMX,OAAOC,SAkCxBuE,GAVC,SAAApD,GACd,OACEA,EAAMqD,MACJ,kBAACH,GAAD,KACE,kBAACC,GAAD,Q,UCAOG,GAnCD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACjBC,GAASF,EAAS1F,OAAS,CAAE4F,KAAM,CAAEC,SAAU,WAA/CD,KAD+B,EAEHE,IAFG,mBAEhCzF,EAFgC,KAE1B0F,EAF0B,KAEhBzC,EAFgB,KAavC,OATA0C,qBAAU,WACJ3F,EAAKP,QACP6F,EAAQM,KAAKL,KAEd,CAACvF,EAAMuF,EAAMD,IAMd,kBAAC,EAAD,KACE,kBAAC,GAAD,CAASH,KAAMlC,IACf,kBAAC,GAAD,CAAM4C,SAAU,SAAC1C,EAAQC,GACvB0C,QAAQC,IAAI,SAAU5C,GACtB2C,QAAQC,IAAI,UAAW3C,IAR7B,SAAoBD,GAClB,MAA2B,SAAnBA,EAAOzD,UAA0C,SAAnByD,EAAOE,SAQrC2C,CAAW7C,GAGb8C,KAAY,MAAU,CACpBC,QAAS,gCACTC,YACE,wDACFC,SAAU,IANZV,EAAS,CAAEvC,SAAQC,iB,0IC7BhBiD,I,OAAc,CAAC,+BACxB,aACA,cACA,mBACA,cACA,aACA,6CACA,aACA,2BACA,gBACA,qBACA,mBACA,mBACA,qBACA,mBACA,mBACA,kBACA,aACA,cACA,kBACA,4BACA,kBACA,oBACA,yBACA,YACA,kBACA,eACA,WACA,aACA,YACA,0BACA,wBACA,uBACA,WACA,gBACA,eACA,yCACA,kBACA,mBACA,mBACA,WACA,gBACA,wBACA,YACA,eACA,QACA,eACA,gBACA,cACA,Y,oBC3CWC,GANH,CACVC,IAAK,gEAELC,MAAO,ICAIC,GAAe,SAACC,GAC3B,OAAOC,KACJC,KADI,UACIN,GAAIC,IADR,yBACoCG,GACxCG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,MAIAC,GAAsB,SAACR,GAClC,OAAOC,KACJC,KADI,UACIN,GAAIC,IADR,yCACoDG,GACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,MCYEE,GAzBe,WAAO,IAAD,EACAnE,oBAAS,GADT,mBAC3BC,EAD2B,KAChBC,EADgB,OAENF,oBAAS,GAFH,mBAE3BoE,EAF2B,KAEnBC,EAFmB,KAsBlC,MAAO,CAACD,EAAQnE,EAlBH,uCAAG,WAAOyD,GAAP,eAAA7D,EAAA,6DACdK,GAAa,GADC,SAGSgE,GAAoBR,GAH7B,QAGRY,EAHQ,QAMY,YAApBA,EAASF,QACXC,GAAU,GAKZA,GAAU,GAGZnE,GAAa,GAfC,2CAAH,wDCFPqE,GAAWC,KAAXD,OAEFE,GAAS,CACXC,SAAU,CAAE/D,KAAM,GAClBgE,WAAY,CAAEhE,KAAM,IAGlBiE,GAAmB,CAErBC,SAAU,wBACVC,MAAO,CAEHC,MAAO,kCAEPC,OAAQ,sCAEZA,OAAQ,CAEJC,MAAO,+CAaTC,IARD,KAAKC,KACD,KAOU9B,GAAY+B,KAAI,SAAAF,GAAU,OAAI,kBAACX,GAAD,CAAQc,IAAKH,GAAaA,OACrEI,GJa2B,CAAC,YAC9B,oBACA,cACA,eACA,8BACA,gBACA,8BACA,kBACA,iBACA,4BACA,qBACA,eACA,uBACA,eACA,eACA,eACA,gCACA,cACA,+BACA,uCACA,mBACA,qBACA,gBACA,eACA,cACA,eACA,8BACA,qCACA,mCACA,aACA,kBACA,mCACA,yCACA,iBACA,cACA,iBACA,eACA,eACA,cACA,kBACA,eACA,gBACA,cACA,iBACA,4CACA,gCACA,6BACA,UACA,mBACA,YACA,mBACA,eACA,6BACA,gBACA,cACA,uBACA,eACA,gBACA,qBACA,iBACA,sBACA,aACA,kBACA,2BACA,gCI7EiCF,KAAI,SAAAE,GAAU,OAAI,kBAACf,GAAD,CAAQc,IAAKC,GAAaA,MAC3EC,GJ8EwB,CAAC,KAAM,KAAM,QI9ENH,KAAI,SAAAG,GAAa,OAAI,kBAAChB,GAAD,CAAQc,IAAKE,GAAgBA,MAOvF,IAmEeC,GAnEG,WAAO,IAAD,EACoBrB,KADpB,mBACbC,EADa,KACMqB,GADN,WAGpB9C,qBAAU,WACFyB,GACAnB,KAAY,QAAY,CACpBC,QAAS,UACTC,YAAa,8CACbC,SAAU,MAGnB,CAACgB,IAkBJ,OACI,kBAAC,KAAD,iBAAUK,GAAV,CAAkBjD,KAAK,gBAAgBkE,SAjB1B,SAAAC,GACb,IAAMC,EAAOD,EAASE,KAChBnC,EAAO,CACT,MAAS,UACT,WAAckC,EAAKpE,KACnB,WAAcoE,EAAKV,WACnB,WAAcU,EAAKE,WACnB,WAAcF,EAAKN,WACnB,qBAAwBM,EAAKG,qBAC7B,kBAAqBH,EAAKI,kBAC1B,YAAeJ,EAAKK,aAExBR,EAAW/B,IAKgDkB,iBAAkBA,KACzE,kBAAC,KAAKO,KAAN,CAAW3D,KAAM,CAAC,OAAQ,QAAS0E,MAAM,OAAOC,MAAO,CAAC,CAAEtB,UAAU,KAChE,kBAAC,KAAD,OAEJ,kBAAC,KAAKM,KAAN,CAAWe,MAAM,aAAa1E,KAAM,CAAC,OAAQ,eACzC,kBAAC,KAAD,KACK0D,KAGT,kBAAC,KAAKC,KAAN,CAAW3D,KAAM,CAAC,OAAQ,cAAe0E,MAAM,aAAaC,MAAO,CAAC,CAAEtJ,KAAM,SAAUuJ,IAAK,EAAGC,IAAK,MAC/F,kBAAC,KAAD,OAEJ,kBAAC,KAAKlB,KAAN,CAAWe,MAAM,iBAAiB1E,KAAM,CAAC,OAAQ,eAC7C,kBAAC,KAAD,KACK8D,KAGT,kBAAC,KAAKH,KAAN,CAAWe,MAAM,wBAAwB1E,KAAM,CAAC,OAAQ,yBACpD,kBAAC,KAAD,KACK+D,KAGT,kBAAC,KAAKJ,KAAN,CAAW3D,KAAM,CAAC,OAAQ,eAAgB0E,MAAM,eAC5C,kBAAC,KAAD,OAEJ,kBAAC,KAAKf,KAAN,CAAW3D,KAAM,CAAC,OAAQ,qBAAsB0E,MAAM,uBAAuBC,MAAO,CAAC,CAAEtJ,KAAM,SAAUuJ,IAAK,EAAGC,IAAK,OAChH,kBAAC,KAAD,OAEJ,kBAAC,KAAKlB,KAAN,CAAWR,WAAU,2BAAOF,GAAOE,YAAd,IAA0B2B,OAAQ,KACnD,kBAAC,KAAD,CAAQzJ,KAAK,UAAU0J,SAAS,UAAhC,a,mGCtGHC,GAAkB,SAAC9C,GAC9B,OAAOC,KACJC,KADI,UACIN,GAAIC,IADR,6CACwDG,GAC5DG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,MAIAwC,GAA2B,SAACC,GACvC,OAAO/C,KACJgD,IAAI,UAAGrD,GAAIC,IAAP,8FAAyGmD,GAC7G7C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,EAAIK,aAIJsC,GAA4B,SAACC,GACxC,OAAOlD,KACJgD,IAAI,UAAGrD,GAAIC,IAAP,0GAAqHsD,GACzHhD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,EAAIK,aCEFwC,GAzBY,WAAO,IAAD,EACG9G,oBAAS,GADZ,mBACxBC,EADwB,KACbC,EADa,OAEHF,oBAAS,GAFN,mBAExBoE,EAFwB,KAEhBC,EAFgB,KAsB/B,MAAO,CAACD,EAAQnE,EAlBH,uCAAG,WAAOyD,GAAP,eAAA7D,EAAA,6DACdK,GAAa,GADC,SAGSsG,GAAgB9C,GAHzB,QAGRY,EAHQ,QAMY,YAApBA,EAASF,QACXC,GAAU,GAKZA,GAAU,GAGZnE,GAAa,GAfC,2CAAH,wDCKF6G,GAAmB,SAACC,GAC/B,OAAOrD,KACJgD,IAAI,UAAGrD,GAAIC,IAAP,uCAAkDyD,GACtDnD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,EAAIK,aAIJ2C,GAAiB,SAACJ,GAC7B,OAAOlD,KACJgD,IAAI,UAAGrD,GAAIC,IAAP,mCAA8CsD,GAClDhD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,EAAIK,aCFF4C,GApBqB,WAAO,IAAD,EACNlH,oBAAS,GADH,mBACjCC,EADiC,KACtBC,EADsB,OAERF,mBAAS,IAFD,mBAEjCmH,EAFiC,KAEvBC,EAFuB,KAiBxC,MAAO,CAACD,EAAUlH,EAbL,uCAAG,WAAOoH,GAAP,eAAAxH,EAAA,6DACdK,GAAa,GADC,SDgCwBsB,EC7BW6F,ED8B5C1D,KACJgD,IAAI,UAAGrD,GAAIC,IAAP,6DAAwE/B,GAC5EqC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,EAAIK,YCrCC,OAGRA,EAHQ,OAKV8C,EADA9C,GAIU,IAEdpE,GAAa,GAVC,iCDgCuB,IAACsB,IChCxB,OAAH,wDCgBA8F,GApBU,WAAO,IAAD,EACKtH,oBAAS,GADd,mBACtBC,EADsB,KACXC,EADW,OAEGF,mBAAS,IAFZ,mBAEtBmH,EAFsB,KAEZC,EAFY,KAiB7B,MAAO,CAACD,EAAUlH,EAbL,uCAAG,4BAAAJ,EAAA,6DACdK,GAAa,GADC,SFwBTyD,KACJgD,IADI,UACGrD,GAAIC,IADP,kCAEJM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,EAAIK,YE5BC,OAGRA,EAHQ,OAKV8C,EADA9C,GAIU,IAEdpE,GAAa,GAVC,2CAAH,uDCeAqH,GApBQ,WAAO,IAAD,EACOvH,oBAAS,GADhB,mBACpBC,EADoB,KACTC,EADS,OAEKF,mBAAS,IAFd,mBAEpBmH,EAFoB,KAEVC,EAFU,KAiB3B,MAAO,CAACD,EAAUlH,EAbL,uCAAG,WAAO4G,GAAP,eAAAhH,EAAA,6DACdK,GAAa,GADC,SAGS+G,GAAeJ,GAHxB,OAGRvC,EAHQ,OAKV8C,EADA9C,GAIU,IAEdpE,GAAa,GAVC,2CAAH,wD,6BCqBAsH,GAxBQ,SAACC,GAAU,IAAD,EACYC,KADZ,mBACtBC,EADsB,KACFlC,GADE,WAS7B,OANA9C,qBAAU,WACe,MAAlB8E,EAAKZ,WACJpB,EAAWgC,EAAKZ,aAErB,CAACY,EAAKZ,YAGL,oCACI,kBAAC,KAAD,wBACA,kBAAC,KAAD,CAAce,UAAQ,GAClB,kBAAC,KAAazC,KAAd,CAAmBe,MAAM,QAAQyB,EAAQX,aACzC,kBAAC,KAAa7B,KAAd,CAAmBe,MAAM,cAAcyB,EAAQE,WAC/C,kBAAC,KAAa1C,KAAd,CAAmBe,MAAM,OAAOyB,EAAQG,KACxC,kBAAC,KAAa3C,KAAd,CAAmBe,MAAM,WAAWyB,EAAQI,YAC5C,kBAAC,KAAa5C,KAAd,CAAmBe,MAAM,SAASvF,KAAM,GACpC,kBAAC,KAAD,CAAOyD,OAAO,UAAU4D,KAAK,eCHlCC,GAnBE,SAACC,EAAMC,EAAWC,EAASC,GAExC,IAAIC,EAAYJ,EAChBI,EAAUC,SAASJ,GAEnB,IAAIK,EAAUN,EACdM,EAAQD,SAASH,GACjBtF,QAAQC,IAAIuF,GACZxF,QAAQC,IAAIyF,GAKZ,IAJA,IAAIC,EAAQH,EAAUI,UAClBC,EAAMH,EAAQE,UACdE,EAAY,GAETH,EAAQE,GACXC,EAAUhG,KAAK,CAAC,IAAIiG,KAAKJ,GAAQ,IAAII,KAAKJ,GAAoB,IAAXJ,KAEvD,OAAOO,G,wCCVIE,GANS,CACpBtH,KAAM,sBACNuH,QAAS,yEACTC,QAAS,cCEAC,GAAb,2KAEQ,IAAMC,EAAqBC,KAAKrK,MAAMoK,mBAEtC,OACI,oCACI,yBAAKzH,GAAG,UAAUZ,MAAO,CAAEuI,UAAW,OAAQC,QAAS,OAAQC,cAAe,SAAUC,eAAgB,SAAUC,WAAY,WAC1H,6BACI,yBAAK3I,MAAO,CAAEC,MAAO,QAAS2I,OAAQ,UAAYzI,IAAKC,OACvD,yBAAKJ,MAAO,CAAE6I,WAAY,OAAQC,SAAU,OAAQC,WAAY,SAC5D,2BAAId,GAAgBC,SACpB,uCAAaD,GAAgBE,WAGrC,yBAAKnI,MAAO,CAAEC,MAAO,OAAQ+I,OAAQ,MAAO/H,WAAY,OAAQ2H,OAAQ,cACxE,yBAAK5I,MAAO,CAAEuI,UAAW,SACtB,wBAAIvI,MAAO,CAAC+I,WAAY,OAAQD,SAAU,SAA1C,qBAEH,yBAAK9I,MAAO,CAAEuI,UAAW,OAAQtI,MAAO,OAAQgJ,QAAS,SACzD,yBAAKjJ,MAAO,CAAE8I,SAAU,OAAUI,MAAO,SACrC,2BAAG,4CAAH,IAAyBb,EAAmBlC,aAC5C,2BAAG,2CAAH,IAAwBkC,EAAmBc,YAC3C,2BAAG,6CAAH,IAA0Bd,EAAmBe,aAC7C,2BAAG,2CAAoBf,EAAmBhE,cAI9C,yBAAKrE,MAAO,CAAEuI,UAAW,OAAQtI,MAAO,OAAQgJ,QAAS,SACrD,yBAAKjJ,MAAO,CAAEkJ,MAAO,UAArB,6BA5BxB,GAA0CG,IAAMC,WCSxC5F,GAAWC,KAAXD,OACA6F,GAAW5J,KAAX4J,OAER,SAASC,GAAaC,GAElB,OAAOA,GAAWA,EAAUC,OAASC,MAAM,OAG/C,IAAMtF,GAAa7B,GAAY+B,KAAI,SAAAF,GAAU,OAAI,kBAAC,GAAD,CAAQG,IAAKH,GAAaA,MA6M5DuF,GA3MK,SAAC,GAA2B,IAExC7B,EAFevG,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzBoI,EAAc,GAEdxB,EAAqB,CACrBlC,YAAa,GACbgD,WAAY,GACZC,YAAa,GACb/E,WAAY,IAGVE,EAAM,IAAIuF,IACVC,EAAcC,KAAYC,MAAMzI,EAAS0I,QAXJ,EAYS/K,mBAAS,OAZlB,mBAYpCgL,EAZoC,KAYhBC,EAZgB,OAaHjL,mBAAS,IAAI6I,MAbV,mBAapCqC,EAboC,KAatBC,EAbsB,KAcrCC,EAAeC,mBAdsB,EAeCrL,mBAAS,IAfV,mBAepCsL,EAfoC,KAepBC,EAfoB,OAgBFjE,KAhBE,mBAgBpCkE,EAhBoC,KAgBhB/F,GAhBgB,aAiBgBiC,KAjBhB,mBAiBpC+D,EAjBoC,KAiBRC,GAjBQ,aAkBsBxE,KAlBtB,mBAkBpCyE,EAlBoC,KAkBJC,GAlBI,aAmBM9E,KAnBN,mBAmBpC1C,EAnBoC,KAmBhByH,GAnBgB,WAoBrCC,EAAcC,2BAAgB,CAChCC,QAAS,kBAAMZ,EAAad,WAEhC3H,qBAAU,WACqB,QAAvBqI,GACAvF,IAC6B,MAAzBmF,EAAY/D,UACZ6E,EAAqBd,EAAY/D,WAEjC6E,EAAqBD,EAAe5E,YAKxC+E,EAAuBZ,GAEvB5G,GACAnB,KAAY,QAAY,CACpBC,QAAS,UACTC,YAAa,uDAAyDyH,EAAY/D,UAAY,cAAgByE,EAC9GlI,SAAU,MAGnB,CAAC4H,EAAoB5G,IAEG,QAAvB4G,EACIW,EAAmBM,OAAS,IAC5BvB,EAAciB,EAAmBvG,KAAI,SAAA8G,GAEjC,OADA9G,EAAI+G,IAAID,EAAOxF,SAAUwF,GAClB,kBAAC,GAAD,CAAQ7G,IAAK6G,EAAOxF,UAAYwF,EAAOlC,gBAIlDwB,EAAQS,OAAS,IACjBvB,EAAcc,EAAQpG,KAAI,SAAA8G,GAEtB,OADA9G,EAAI+G,IAAID,EAAOxF,SAAUwF,GAClB,kBAAC,GAAD,CAAQ7G,IAAK6G,EAAOxF,UAAYwF,EAAOlC,gBAuC1D,IAAIoC,EAAa,GACbC,EAAkB,GACjBjI,GAGDtB,QAAQC,IAAI,UAAYuI,GACxBc,EAAa,kBAAC,KAAD,CAAQvP,KAAK,UAAUyP,KAAK,QAAQxM,QAAS,WACtDgD,QAAQC,IAAI0I,EAAe5E,WAC3BvE,EAAQM,KAAK,CAAEJ,SAAU,gBAAiBuI,OAAQ,cAAcwB,OAAOd,EAAe5E,WAAa,eAAiBzB,EAAIuB,IAAI2E,GAAgBtB,WAAa,YAAc5E,EAAIuB,IAAI2E,GAAgBtF,kBAAoB,2BAF1M,iBAIbkD,EAAqB,CACjBlC,YAAayE,EAAezE,YAC5BgD,WAAY5E,EAAIuB,IAAI2E,GAAgBtB,WACpCC,YAAaiB,EAAasB,eAC1BtH,WAAY8F,GAEhBqB,EAAmB,kBAAC,KAAD,CAAMI,MAAM,sBAAsBC,MAAO,uBAAGC,KAAK,IAAI7M,QAASgM,GAArB,SAA6CjL,MAAO,CAAEC,MAAO,MACrH,uDACA,2BAAI2K,EAAezE,aACnB,iCAAOkE,EAAasB,gBACpB,iCAAOxB,GACP,uCAAa5F,EAAIuB,IAAI2E,GAAgBtB,cAlBzCoC,EAAa,kBAAC,KAAD,CAAQvP,KAAK,UAAUyP,KAAK,QAAQ/F,SAAS,UAA7C,oBAsBjBqC,EAAYX,GAAS,IAAIY,KAAQ,EAAG,EAAG,IAAIzD,KAAI,SAAAwH,GAAG,OAAI,kBAAC,GAAD,CAAQvH,IAAKuH,GAAb,UAItD,OACI,oCACI,kBAACxC,GAAD,CACI1I,YAAY,uBACZmL,YAAU,EACVC,YAAY,SACZR,KAAK,QACLzL,MAAO,CAAEC,MAAO,OAChBiM,SAXY,SAAA7Q,GACpBwP,EAAqBxP,MAYjB,6BACA,kBAAC,GAAD,CAAgB2K,UAAW4E,EAAe5E,YAC1C,6BACA,kBAAC,KAAD,4BACA,kBAAC,KAAD,CAAMrF,KAAK,gBAAgBkE,SAlEnC,WACI,IAAMhC,EAAO,CACT,YAAe,YACf,OAAU,OACV,UAAa+H,EAAe5E,UAC5B,YAAe4E,EAAezE,YAC9B,SAAYsE,EACZ,gBAAmBJ,EAAaxC,UAChC,OAAU,EACV,OAAU,GACV,GAAM,UAEsB,MAA5B+C,EAAe5E,UACfgF,EAAmBnI,GAEnBT,KAAY,MAAU,CAClBC,QAAS,SACTC,YAAa,mCACbC,SAAU,MAiDV,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKzC,KAAM,GACP,yBAAKqM,UAAU,2BACX,kBAAC,KAAD,CAAUC,YAAY,EAAOC,SA/ErD,SAAsBhR,GAClBiP,EAAgB,IAAItC,KAAK3M,KA8EgDmO,aAAcA,OAG3E,kBAAC,KAAD,CAAK1J,KAAM,GACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,mBACtB,kBAAC,KAAD,CACI2L,YAAU,EACVC,aAAa,MACbzL,SA1F5B,SAAsBzF,GAClB+O,EAAsB/O,IA0FEwF,YAAY,oBAAoBb,MAAO,CAAEC,MAAO,KAChDuM,iBAAiB,WACjBC,aAAc,SAAC7M,EAAO8M,GAAR,OACVA,EAAOvR,SAASwR,cAAcC,QAAQhN,EAAM+M,gBAAkB,IAElE,kBAAC,GAAD,CAAQtR,MAAM,OAAd,OACCgJ,KAGT,6BAAM,6BAAM,6BACZ,kBAAC,KAAKC,KAAN,CAAW3D,KAAM,CAAC,OAAQ,cAAe2E,MAAO,CAAC,CAAEtB,UAAU,KACzD,kBAAC,KAAD,CACIlD,SAhG5B,SAA8BzF,GAE1BqP,EAAkBrP,IA+FMiR,YAAU,EACVzL,YAAY,gBAAgBb,MAAO,CAAEC,MAAO,KAC5CuM,iBAAiB,WACjBC,aAAc,SAAC7M,EAAO8M,GAAR,OACVA,EAAOvR,SAASwR,cAAcC,QAAQhN,EAAM+M,gBAAkB,IAEjE9C,IAIT,6BAAM,6BAAM,6BACZ,kBAAC,KAAKvF,KAAN,CAAW3D,KAAM,CAAC,OAAQ,aACtB,kBAAC,KAAD,CAAQE,YAAY,mBAAmBb,MAAO,CAAEC,MAAO,MAClD8H,KAUb,kBAAC,KAAD,CAAKjI,KAAM,GACP,yBAAKE,MAAO,CAAEwI,QAAS,SACnB,kBAAC,GAAD,CAAsBqE,IAAKtC,EAAclC,mBAAoBA,KAEhEmD,IAGT,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAK1L,KAAM,GAAI2F,OAAQ,IAClB8F,O,2DCzNnBuB,GAAO,UAAMrK,GAAIC,IAAV,wCACAqK,GAAoB,SAACnM,EAAIoM,GAClC,IAAItK,EAAM,GAQV,MAPmB,cAAfsK,EACAtK,EAAM,UAAGoK,GAAH,eAA0BlM,EAAK,YACf,WAAfoM,GAEe,cAAfA,KADPtK,EAAM,UAAGoK,GAAH,YAAuBlM,EAAK,eAI/BkC,KACFgD,IAAIpD,GACJM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,EAAIK,aAIVwJ,GAAmB,SAACpK,GAC7B,OAAOC,KACFC,KADE,UACMN,GAAIC,IADV,qCACkDG,GACpDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,MCHJ8J,GApBO,WAAO,IAAD,EACU/N,oBAAS,GADnB,mBACjBC,EADiB,KACNC,EADM,OAEQF,mBAAS,IAFjB,mBAEjBmH,EAFiB,KAEPC,EAFO,KAiBxB,MAAO,CAACD,EAAUlH,EAbL,uCAAG,WAAO4G,EAAWmH,GAAlB,eAAAnO,EAAA,6DACZK,GAAa,GADD,SAGW0N,GAAkB/G,EAAWmH,GAHxC,OAGN1J,EAHM,OAKR8C,EADA9C,GAIY,MAEhBpE,GAAa,GAVD,2CAAH,0D,UCJJ+N,GAAuB,SAACvK,GACjC,OAAOC,KACFC,KADE,UACMN,GAAIC,IADV,oDACiEG,GACnEG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,MAINiK,GAAe,SAACxK,GACzB,OAAOC,KACFC,KADE,UACMN,GAAIC,IADV,oCACiDG,GACnDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,MAINkK,GAAoB,SAACzK,GAC9B,OAAOC,KACFC,KADE,UACMN,GAAIC,IADV,iDAC8DG,GAChEG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,MAINmK,GAAsB,SAAC1K,GAChC,OAAOC,KACF0K,OADE,UACQ/K,GAAIC,IADZ,2CAC0DG,GAC5DG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,MAwCNqK,GAA4B,SAACC,GACtC,OAAO5K,KACFgD,IAAI,UAAGrD,GAAIC,IAAP,sDAAiEgL,GACrE1K,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,MCxDJuK,GApBiB,WAAO,IAAD,EACFxO,oBAAS,GADP,mBAC7BC,EAD6B,KAClBC,EADkB,OAECF,mBAAS,IAFV,mBAE7ByO,EAF6B,KAElBC,EAFkB,KAiBpC,MAAO,CAACD,EAAWxO,EAbN,uCAAG,4BAAAJ,EAAA,6DACdK,GAAa,GADC,SD2DPyD,KACFgD,IADE,UACKrD,GAAIC,IADT,wCAEFM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,KC/DD,OAGRK,EAHQ,OAKVoK,EADApK,GAIc,IAElBpE,GAAa,GAVC,2CAAH,uDCLFyO,GAAc,SAACjL,GAC1B,OAAOC,KACJC,KADI,UACIN,GAAIC,IADR,sBACiCG,GACrCG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,MAsBA2K,GAAU,SAAClL,GACtB,OAAOC,KACJC,KADI,UACIN,GAAIC,IADR,cACyBG,GAC7BG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,MCZE4K,GApBO,WAAO,IAAD,EACQ7O,oBAAS,GADjB,mBACnBC,EADmB,KACRC,EADQ,OAEMF,mBAAS,IAFf,mBAEnBmH,EAFmB,KAETC,EAFS,KAiB1B,MAAO,CAACD,EAAUlH,EAbL,uCAAG,4BAAAJ,EAAA,6DACdK,GAAa,GADC,SDeTyD,KACJgD,IADI,UACGrD,GAAIC,IADP,mBAEJM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,KCnBK,OAGRK,EAHQ,OAKV8C,EADA9C,GAIU,IAEdpE,GAAa,GAVC,2CAAH,uDCHPqE,GAAWC,KAAXD,OA6FOuK,GA3FC,SAAChQ,GACb,IAAMiQ,EAAc,IAAIpE,IAClBqE,EAAU,IAAIrE,IAChBsE,EAAU,GAHS,EAWSjP,mBAAS,YAXlB,mBAWhBkP,EAXgB,KAWNC,EAXM,OAY2BX,KAZ3B,mBAYhBC,EAZgB,KAYMW,GAZN,aAaoBP,KAbpB,mBAahBQ,EAbgB,KAaGC,GAbH,WA8DvB,OA/CA3M,qBAAU,WACNyM,MACD,IAEa,QAAZF,EACAD,EAAO,aAAOI,EAAMjK,KAAI,SAAAmK,GAEpB,OADAP,EAAQ7C,MACD,CAAEjQ,MAAOqT,EAAKC,SAAUtJ,MAAOqJ,EAAKC,cAE5B,YAAZN,EACHT,EAAUxC,OAAS,GAEnBwC,EAAUgB,SAAQ,SAAAC,GACdX,EAAY5C,IAAIuD,EAASC,aAAcD,GACvCT,EAAQrM,KAAK,CAAE1G,MAAOwT,EAASC,aAAczJ,MAAOwJ,EAASC,kBAGlD,gBAAZT,GACHT,EAAUxC,OAAS,GACnBwC,EAAUgB,SAAQ,SAAAC,GACdT,EAAQrM,KAAK,CAAE1G,MAAOwT,EAASC,aAAczJ,MAAOwJ,EAASC,kBA4BrE,kBAAC,KAAD,iBAxDW,CACXjL,SAAU,CAAE/D,KAAM,GAClBgE,WAAY,CAAEhE,KAAM,KAsDpB,CAAkBa,KAAK,gBAAgBkE,SAvB3C,SAAkBxJ,GACd,IAAI0T,EAAS,EACE,YAAZV,IACFU,EAASb,EAAYpI,IAAIzK,EAAM2J,KAAKrE,MAAMqO,WAI3C,IAAMC,EAAM,CACRC,OAAQ,GACRvO,KAAOtF,EAAM2J,KAAKrE,KAClBwO,SAAW9T,EAAM2J,KAAKmK,SACtBJ,OAAQA,GAEZ9Q,EAAMmR,YAAYH,MAWd,kBAAC,KAAK3K,KAAN,CAAW3D,KAAM,CAAC,OAAQ,QAAS0E,MAAM,YAAYC,MAAO,CAAC,CAAEtB,UAAU,KACrE,kBAAC,KAAD,CACIqL,kBAAkB,mCAClBC,yBAA0B,IAC1BtP,MAAO,CAAEC,MAAO,QAChBmO,QAASA,GAET,kBAAC,KAAM7E,OAAP,CAAckC,KAAK,UAAU5K,YAAY,gBAGjD,kBAAC,KAAKyD,KAAN,CAAW3D,KAAM,CAAC,OAAQ,YAAa0E,MAAM,WAAWC,MAAO,CAAC,CAAEtJ,KAAM,YACpE,kBAAC,KAAD,OAEJ,kBAAC,KAAKsI,KAAN,CAAW3D,KAAM,CAAC,OAAQ,YAAa0E,MAAM,aACzC,kBAAC,KAAD,CAAQgH,SAvBpB,SAA0BhR,GACtBiT,EAAYjT,GACC,QAATA,GACAoT,KAoBwClC,aAAa,WAAW1L,YAAY,aACpE,kBAAC,GAAD,CAAQxF,MAAM,YAAd,YACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,eAAd,iBAGR,kBAAC,KAAKiJ,KAAN,KACI,kBAAC,KAAD,CAAQtI,KAAK,UAAU0J,SAAS,UAAhC,eCtFH6J,I,OAAb,2KAEQ,IAAMC,EAAWlH,KAAKrK,MAAMuR,SACtBC,EAASnH,KAAKrK,MAAMwR,OACpBzJ,EAAYsC,KAAKrK,MAAM+H,UACvB4E,EAAiBtC,KAAKrK,MAAM2M,eAC5B8E,EAAepH,KAAKrK,MAAMyR,aAC1BC,GAAc,IAAI3H,MAAQ2D,eAAiB,GAAS,IAAI3D,MAAQ4H,qBAChEC,EAAYL,EAASjL,KAAI,SAAAuL,GAC3B,OACI,4BACI,4BAAKA,EAAKnP,MACV,4BAAKmP,EAAKX,UACV,4BAAKW,EAAKf,QACV,4BAAKe,EAAKC,KACV,4BAAKD,EAAKE,UACV,4BAAKF,EAAKG,WAItB,OACI,oCACI,yBAAKrP,GAAG,UAAUZ,MAAO,CAAEuI,UAAW,OAAQC,QAAS,OAAQC,cAAe,SAAUC,eAAgB,SAAUC,WAAY,WAC1H,6BACI,yBAAK3I,MAAO,CAAEC,MAAO,QAAS2I,OAAQ,UAAYzI,IAAKC,OACvD,yBAAKJ,MAAO,CAAE6I,WAAY,OAAQC,SAAU,OAAQC,WAAY,SAC5D,2BAAId,GAAgBC,SACpB,uCAAaD,GAAgBE,WAGrC,yBAAKnI,MAAO,CAAEC,MAAO,OAAQ+I,OAAQ,MAAO/H,WAAY,OAAQ2H,OAAQ,cACxE,2BAAOsH,OAAO,IAAIC,YAAY,IAAIC,YAAY,IAAInQ,MAAM,QACpD,4BACI,oCACA,4BAAK2K,EAAezE,aACpB,mCACA,4BAAKyE,EAAe3D,MAExB,4BACI,yCACA,4BAAKjB,GACL,sCACA,4BAAKyJ,IAET,4BACI,oCACA,4BAAKE,GACL,0CACA,4BAAK/E,EAAe5D,aAG5B,6BACA,2BAAOpG,GAAG,aACN,4BACI,yCACA,wCACA,sCACA,gDACA,2CACA,sCAEHiP,EACD,4BACI,wBAAIQ,QAAQ,MACZ,qCACA,4BAAKX,EAAaY,cAEtB,4BACI,wBAAID,QAAQ,MACZ,wCACA,4BAAKX,EAAaa,gBAEtB,4BACI,wBAAIF,QAAQ,MACZ,mCACA,4BAAKX,EAAac,YAG1B,yBAAKxQ,MAAO,CAAEuI,UAAW,OAAQtI,MAAO,OAAQgJ,QAAS,SACrD,kDACA,yBAAKjJ,MAAO,CAAEkJ,MAAO,UAArB,6BAhFxB,GAA+BG,IAAMC,YCH7B5F,GAAWC,KAAXD,OAmBO+M,GAjBI,SAACxS,GAChB,IAD0B,EAEYkB,mBADhB,aADI,mBAEnBuR,EAFmB,KAENC,EAFM,KAO1B,OACY,kBAAC,KAAMC,MAAP,CAAaC,SAAO,GAChB,kBAAC,KAAD,CAAQtE,aARF,YAQ+BF,SAAUsE,GAC3C,kBAAC,GAAD,CAAQtV,MAAM,aAAd,cACA,kBAAC,GAAD,CAAQA,MAAM,UAAd,WACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,eAEJ,kBAAC,KAAMkO,OAAP,CAAc2C,SAV9B,SAAkB7Q,GACd4C,EAAMiO,SAAS7Q,EAAOqV,IASwB1Q,MAAO,CAAEC,MAAO,OAASY,YAAY,gBCW5EiQ,IA3BInN,KAAXD,OAEa,SAACzF,GAIpB,OACE,kBAAC,KAAD,CAAM0C,KAAK,iBACT,kBAAC,KAAD,CAAKoQ,OAAQ,IACX,kBAAC,KAAD,CAAKjR,KAAM,EAAG0E,IAAK,GACjB,kBAAC,KAAKF,KAAN,CAAWe,MAAM,gBACf,0BAAM8G,UAAU,iBAAiBlO,EAAMyR,aAAaY,eAGxD,kBAAC,KAAD,CAAKxQ,KAAM,EAAG0E,IAAK,GACjB,kBAAC,KAAKF,KAAN,CAAWe,MAAM,qBACf,0BAAM8G,UAAU,iBAAiBlO,EAAMyR,aAAaa,iBAGxD,kBAAC,KAAD,CAAKzQ,KAAM,EAAG0E,IAAK,GACjB,kBAAC,KAAKF,KAAN,CAAWe,MAAM,aACf,0BAAM8G,UAAU,iBAAiBlO,EAAMyR,aAAac,gBCHjDQ,GAjBa,WAAO,IAAD,EACM7R,mBAAS,IADf,mBACzB8R,EADyB,KACZC,EADY,KAchC,MAAO,CAACD,EAXK,uCAAG,WAAOpO,GAAP,eAAA7D,EAAA,sEACSiO,GAAiBpK,GAD1B,QACRY,EADQ,QAGa,WAArBA,EAASA,UACXyN,EAAezN,GAGjByN,EAAe,MAPH,2CAAH,wDCUTC,IAHaxR,KAAX4J,OACW5F,KAAXD,OAEgB2F,IAAMtO,iBAExBqW,GAAc,SAAC,GAAwB,EAAtBC,MAAuB,IAAbpT,EAAY,2BAC5BqT,KAAKC,UAAbxM,EADoC,oBAE3C,OACE,kBAAC,KAAD,CAAMA,KAAMA,EAAMyM,WAAW,GAC3B,kBAACL,GAAgB/V,SAAjB,CAA0BC,MAAO0J,GAC/B,uBAAQ9G,MAMVwT,GAAe,SAAC,GAQf,IAPL7F,EAOI,EAPJA,MACA8F,EAMI,EANJA,SACAvW,EAKI,EALJA,SACAwW,EAII,EAJJA,UACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,WACGC,EACC,mFAC0B3S,oBAAS,GADnC,mBACG4S,EADH,KACYC,EADZ,KAEEC,EAAWzH,mBACXzF,EAAOvJ,qBAAW2V,IACxBrP,qBAAU,WACJiQ,GACFE,EAASxI,QAAQyI,UAElB,CAACH,IAEJ,IAAMI,EAAa,WACjBH,GAAYD,GACZhN,EAAKqN,eAAL,gBACGT,EAAYC,EAAOD,MAIlBU,EAAI,uCAAG,WAAOC,GAAP,eAAAtT,EAAA,+EAEY+F,EAAKwN,iBAFjB,OAEHjT,EAFG,OAGT6S,IACAN,EAAW,2BAAKD,GAAWtS,IAJlB,gDAMT2C,QAAQC,IAAI,eAAZ,MANS,yDAAH,sDAUNsQ,EAAYrX,EA+BhB,OA7BIuW,IACFc,EAAYT,EACV,kBAAC,KAAKzN,KAAN,CACEtE,MAAO,CACL4I,OAAQ,GAEVjI,KAAMgR,EACNrM,MAAO,CACL,CACEtB,UAAU,EACV3B,QAAQ,GAAD,OAAKuJ,EAAL,oBAIX,kBAAC,KAAD,CAAOiB,IAAKoF,EAAUQ,aAAcJ,EAAMtR,OAAQsR,KAGlD,yBACElG,UAAU,2BACVnM,MAAO,CACL0S,aAAc,IAEhBzT,QAASkT,GAERhX,IAKF,uBAAQ2W,EAAYU,IA2YdG,GAzYC,SAAC,GAA2B,IAAzBnR,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACrBmR,EAAa,CACjB/P,KAAM,CACJgQ,IAAKzB,GACL0B,KAAMrB,KAGNsB,EAAU,CACZ,CACEnH,MAAO,YACP+F,UAAW,QAEb,CACE/F,MAAO,WACP+F,UAAW,WACXD,SAAU,OACVzR,MAAO,OAET,CACE2L,MAAO,SACP+F,UAAW,SACXqB,OAAQ,CACNC,QAAS,SAACjU,EAAGkU,GAAJ,OAAUlU,EAAE+P,OAASmE,EAAEnE,QAChCoE,SAAU,IAGd,CACEvH,MAAO,iBACP+F,UAAW,MACXqB,OAAQ,CACNC,QAAS,SAACjU,EAAGkU,GAAJ,OAAUlU,EAAE+Q,IAAMmD,EAAEnD,KAC7BoD,SAAU,IAGd,CACEvH,MAAO,cACP+F,UAAW,WACXD,SAAU,OACVzR,MAAO,MACP+S,OAAQ,CACNC,QAAS,SAACjU,EAAGkU,GAAJ,OAAUlU,EAAEgR,SAAWkD,EAAElD,UAClCmD,SAAU,IAGd,CACEvH,MAAO,QACP+F,UAAW,QACXqB,OAAQ,CACNC,QAAS,SAACjU,EAAGkU,GAAJ,OAAUlU,EAAEiR,MAAQiD,EAAEjD,OAC/BkD,SAAU,IAGd,CACEvH,MAAO,SACPpH,IAAK,SACL4O,OAAQ,SAACjM,EAAMyK,GAAP,OACN,kBAAC,KAAD,CAAYhG,MAAM,kBAAkByH,UAAW,kBAuOrD,SAAsB7O,GACpB,IAAM8O,EAAapQ,EAAKiK,QAAO,SAAC2C,GAAD,OAAUA,EAAKtL,MAAQA,KACtD+O,GAAsBD,GACtBE,EAAQF,GA1OiDG,CAAa7B,EAAOpN,OACvE,yCAoBR,SAASqN,EAAWgB,GAClB,IAAMa,EAAO,aAAOxQ,GACdmO,EAAQqC,EAAQC,WAAU,SAAC7D,GAAD,OAAU+C,EAAIrO,MAAQsL,EAAKtL,OACrDsL,EAAO4D,EAAQrC,GACf3B,EAAekE,EAAgB,CAACf,IACtCA,EAAI5C,MAAQP,EAAamE,iBAAmBnE,EAAac,SACzDkD,EAAQI,OAAOzC,EAAO,EAAtB,2BAA8BvB,GAAS+C,IACvCW,EAAQE,GACRH,GAAsBG,GAxBxBX,EAAUA,EAAQxO,KAAI,SAACwP,GACrB,MAAoB,SAAhBA,EAAIrC,SACCqC,EAGF,2BACFA,GADL,IAEEC,OAAQ,SAACpC,GAAD,MAAa,CACnBA,SACAF,SAAUqC,EAAIrC,SACdC,UAAWoC,EAAIpC,UACf/F,MAAOmI,EAAInI,MACXiG,WAAYA,SAelB,IACMoC,EAAqB,CACzBxE,OAAQ,GACRyE,WAAY,IAAIlM,MAAQ2D,eAAiB,KAAO,IAAI3D,MAAQ4H,sBAQxDuE,EAAW,CAAC,CAChB3P,IAAK,IACL7D,KAAM,QACNwO,SAAU,EACVJ,OAAQ,IACRgB,IAAK,GACLC,SAAU,GACVC,MAAO,KACN,CACDzL,IAAK,IACL7D,KAAM,QACNwO,SAAU,EACVJ,OAAQ,IACRgB,IAAK,GACLC,SAAU,EACVC,MAAO,MAELmE,EAAqB,kBAAC,KAAD,CAAKjI,UAAU,aAAarM,KAAM,GACzD,kBAAC,KAAD,CAAQE,MAAO,CAAEC,MAAO,OAASjE,KAAK,UAAUiD,QAqMlD,WACE,IAAM4D,EAAO,CACX4M,OAAQ,KACR4E,SAAU,GACVH,UAAW,IAAIlM,KACfsM,cAAe,OACfC,YAAaA,EACbvO,UAAW+D,EAAY/D,UACvBwO,UAAW9E,EAAaY,YACxBmE,eAAgB,IAElBvR,EAAK0L,SAAQ,SAAAkB,GACX,IAAM4E,EAAW,CACf9T,GAAI,KACJ+T,SAAU7E,EAAKnP,KACfuO,OAAQ,KACR0F,UAAW,KACXC,KAAM/E,EAAKG,MACX6E,qBAAsBhF,EAAKE,SAC3B+E,IAAKjF,EAAKf,OACViG,eAAgB,YAElBnS,EAAK4R,eAAe1S,KAAK2S,MAG3BO,EAAsBpS,KA9NtB,kBAEEqS,EAAc,GAvHuB,EAwHL/V,mBAAS,aAxHJ,gCAyHHA,mBAAS,SAzHN,mBAyHlCoV,EAzHkC,KAyHrBY,EAzHqB,OA0HQjI,KA1HR,mBA0HlCkI,EA1HkC,KA0HTC,GA1HS,aA2HWrE,KA3HX,mBA2HlCsE,EA3HkC,KA2HdL,EA3Hc,OA4HCpO,KA5HD,mBA4HlCC,EA5HkC,KA4HblC,GA5Ha,aA6HGzF,oBAAS,GA7HZ,mBA6HlCoW,EA7HkC,KA6HlBC,EA7HkB,OA8HHrW,mBAAS8U,GA9HN,mBA8HlCwB,EA9HkC,KA8HrBC,EA9HqB,OA+HDvW,mBAjCZ,CAC1BmR,YAAa,EACbC,cAAe,EACfC,SAAU,IAjG6B,mBA+HlCd,EA/HkC,KA+HpBiG,EA/HoB,OAgIjBxW,mBAAS,IAhIQ,mBAgIlC+D,EAhIkC,KAgI5BsQ,EAhI4B,KAiInCjJ,EAAeC,mBACfS,EAAcC,2BAAgB,CAClCC,QAAS,kBAAMZ,EAAad,WAaxBM,EAAcC,KAAYC,MAAMzI,EAAS0I,QAyD/C,SAAS0J,EAAgBgC,GACvB,IAAMlG,EAAe,CACnBY,YAAa,EACbE,SAAU,EACVD,cAAe,EACfsD,iBAAkB,GAUpB,OAPA+B,EAAShH,SAAQ,SAAA1L,GACf,IAAM2Q,EAAmBgC,OAAOC,SAAS5S,EAAK6L,QAAY8G,OAAOC,SAAS5S,EAAK8M,UAAY,IAAO6F,OAAOC,SAAS5S,EAAK6L,QACvHW,EAAaY,aAAeuF,OAAOC,SAAS5S,EAAK6L,QACjDW,EAAaa,eAAiBsF,OAAOC,SAAS5S,EAAK8M,UACnDN,EAAamE,kBAAoBA,EACjCnE,EAAac,UAAYqF,OAAOC,SAAS5S,EAAK6M,QAEzCL,EAET,GAxEA5N,qBAAU,WAGR,GAFAyR,GAAsBY,GACtBX,EAAQW,GACmB,gBAAvBpK,EAAYgM,QAA2B,CACzC,IAAMC,EAAW,CACf,CACExR,IAAK,IACL7D,KAAM,eACNwO,SAAU,EACVJ,OAAQ,GACRgB,IAAK,EACLC,SAAU,EACVC,MAAO,KAEXuD,EAAQwC,GACRzC,GAAsByC,GACtBpR,EAAWmF,EAAY/D,gBAClB,GAA2B,eAAvB+D,EAAYgM,QAA0B,CAC/C,IAAMC,EAAW,CACf,CACExR,IAAK,IACL7D,KAAM,iBAAyBoJ,EAAYZ,WAAc,IACzDgG,SAAU,EACVJ,OAAQhF,EAAYkM,QACpBlG,IAAK,EACLC,SAAU,EACVC,MAAO4F,OAAO9L,EAAYkM,SAAW,IAEzCzC,EAAQwC,GACRzC,GAAsByC,GACtBpR,EAAWmF,EAAY/D,gBAEV,kBAAC,GAAD,CAAYkG,SAAUgK,KAIF,WAA/BZ,EAAmB7R,WACrBrB,KAAY,QAAY,CACtBC,QAAS,UACTC,YAAa,uCAAyCgT,EAAmB7F,OACzElN,SAAU,IAEZmT,EAAe,CACbjG,OAAQ6F,EAAmB7F,OAC3ByE,WAAY,IAAIlM,MAAQ2D,oBAI3B,CAAC2J,IAC+B,WAA/BA,EAAmB7R,WACrB2Q,EAAqB,GACrBc,EAAc,kBAAC,KAAD,CAAK/I,UAAU,aAAarM,KAAM,GAC9C,kBAAC,KAAD,CAAQE,MAAO,CAAEC,MAAO,OAASjE,KAAK,UAAUiD,QAASgM,GAAzD,WAoBAmK,EAAc,CAChB,IAAMY,EAAW,GAKjB,GAJIZ,EAAY,UACdK,EAAYhG,OAAS2F,EAAY,QAAZ,OACrBK,EAAYvB,UAAY,IAAIlM,KAAKoN,EAAY,QAAZ,YAE/BA,EAAY,SAAeA,EAAY,aAAkB,CAC3D,IAAMe,EAAef,EAAY,aACZ,OAAjBe,GAAyBA,EAAa/K,OAAS,GACjD+K,EAAavH,SAAQ,SAAAC,GACnBmH,EAASjU,KAAK,CACZyC,IAAK,IACL7D,KAAMkO,EAASuH,QACfjH,SAAUN,EAASwH,KACnBtH,OAAQF,EAASgG,KACjB9E,IAAK,GACLC,SAAU,EACVC,MAAuB,EAAhBpB,EAASgG,UAMxB,GAAIO,EAAY,SAAeA,EAAY,SAAc,CACvD,IAAMkB,GAAWlB,EAAY,SACZ,OAAbkB,IAAqBA,GAASlL,OAAS,GAEzCkL,GAAS1H,SAAQ,SAAAF,GACfsH,EAASjU,KAAK,CACZyC,IAAK,IACL7D,KAAM+N,EAAK6H,OACXpH,SAAU,EACVJ,OAAQL,EAAKmG,KACb9E,IAAK,GACLC,SAAU,EACVC,MAAmB,EAAZvB,EAAKmG,WActB,SAASqB,GAAaM,EAAaC,GACjCpB,EAAcmB,EAAaC,GAyB7B,SAASlD,GAAsBmD,GAC7B,IAAMhH,EAAekE,EAAgB8C,GACrCzU,QAAQC,IAAIwN,GACZiG,EAAgB,CACdrF,YAAaZ,EAAamE,iBAAmBnE,EAAac,SAC1DD,eAAgBb,EAAaY,YAAcZ,EAAamE,kBAAoBnE,EAAaY,YAAc,IACvGE,SAAUd,EAAac,WA2C3B,OACE,oCACE,kBAAC,KAAD,CAAO5E,MAAM,WAAW+K,QAASpB,EAAgBqB,OAAQ,KAAMC,KA/MlD,WACfrB,GAAkB,IA8M+DsB,SA3M9D,WACnBtB,GAAkB,KA2Md,kBAAC,GAAD,CAASpG,YA1Ef,SAAqB2H,GACnB,IAAMrD,EAAU,CACdlP,IAAKwS,KAAKC,SACVtW,KAAMoW,EAAcpW,KACpBwO,SAAU4H,EAAc5H,SACxBJ,OAAQgI,EAAchI,OACtBgB,IAAK,GACLC,SAAU,EACVC,MAAO8G,EAAc5H,SAAW4H,EAAchI,QAE1C2H,EAAY,uBAAOxT,GAAP,CAAawQ,IAE/BF,EAAQkD,GACRnD,GAAsBmD,GACtBlB,GAAkB,OA8DhB,kBAAC,GAAD,CAAYtJ,SAAUgK,KACtB,kBAAC,GAAD,CAAgBlQ,UAAW+D,EAAY/D,YACvC,yBAAKhG,MAAO,CAAEwI,QAAS,SACrB,kBAAC,GAAD,CAAWqE,IAAKtC,EAAciF,SAAUtM,EAAMwM,aAAcA,EAAc9E,eAAgB9D,EAAS2I,OAAQgG,EAAYhG,OAAQzJ,UAAW+D,EAAY/D,aAExJ,kBAAC,KAAD,qBACA,kBAAC,KAAD,KACE,kBAAC,KAAa1B,KAAd,CAAmBe,MAAM,WAAWoQ,EAAYhG,QAEhD,kBAAC,KAAanL,KAAd,CAAmBe,MAAM,iBAAiBoQ,EAAYvB,YAExD,kBAAC,KAAD,CACEjV,QAjOY,WAChBuW,GAAkB,IAiOdxZ,KAAK,UACLgE,MAAO,CACLE,aAAc,KAJlB,YASA,kBAAC,KAAD,CAAO6S,QAASA,EAASH,WAAYA,EAAYU,WAAYpQ,EAAMpC,SAxGvE,SAAkBoW,EAAYC,EAASnE,EAAQnH,GAC7C5J,QAAQC,IAAI,SAAUgV,EAAYC,EAASnE,EAAQnH,IAuGsCuL,aAAc,iBAAM,kBAE3G,kBAAC,GAAD,CAAc1H,aAAcA,EAAc2H,iBA/D9C,SAA0BC,GACxBrV,QAAQC,IAAI,mBAAoBoV,MA+D9B,kBAAC,KAAD,gBACA,kBAAC,KAAM1G,MAAP,CAAa9P,SA7DjB,SAAuBwR,GACrB6C,EAAe7C,EAAEiF,OAAOlc,QA4DgBA,MAAOkZ,GAC3C,kBAAC,KAAD,CAAOlZ,MAAM,QAAb,QACA,kBAAC,KAAD,CAAOA,MAAM,QAAb,QACA,kBAAC,KAAD,CAAOA,MAAM,OAAb,OACA,kBAAC,KAAD,CAAOA,MAAM,SAAb,UAEF,6BAAM,6BAAM,6BACZ,kBAAC,KAAD,CAAK0V,OAAQ,IACVqD,EAIAc,EAED,kBAAC,KAAD,CAAK/I,UAAU,aAAarM,KAAM,GAChC,kBAAC,KAAD,CAAQE,MAAO,CAAEC,MAAO,OAASjE,KAAK,UAAUiD,QAAS,SAAA5D,GAAK,OAAIoG,EAAQM,KAAK,CAAEJ,SAAU,oBAAqBuI,OAAQ,cAAcwB,OAAO3B,EAAY/D,eAAzJ,yB,kDC9dJwR,GAAc,SAAC5L,GACjB,OACI,8BACKA,EACD,uBACI5L,MAAO,CAAEkJ,MAAO,SAChB4C,KAAK,uCACLyL,OAAO,SACPE,IAAI,uBAJR,UAYNC,GAAa,SAAC9L,EAAe+L,GAC/B,MAAO,CACHtc,MAAOuQ,EACPvG,MACI,yBACIrF,MAAO,CACHwI,QAAS,OACTE,eAAgB,kBAGnBkD,EACD,8BACI,kBAACgM,GAAA,EAAD,MADJ,IACsBD,MAOhCvJ,GAAU,CACZ,CACI/I,MAAOmS,GAAY,aACnBpJ,QAAS,CAACsJ,GAAW,YAAa,KAAQA,GAAW,eAAgB,SAEzE,CACIrS,MAAOmS,GAAY,aACnBpJ,QAAS,CAACsJ,GAAW,mBAAoB,OAAQA,GAAW,gBAAiB,SAEjF,CACIrS,MAAOmS,GAAY,YACnBpJ,QAAS,CAACsJ,GAAW,4BAA6B,QAwH3CG,GApHC,WAKZ,OACI,oCACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAK/X,KAAM,GACP,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAKA,KAAM,GACP,kBAAC,KAAD,CAAQ9D,KAAK,SAAS8b,KAAM,kBAACC,GAAA,EAAD,OAA5B,OAGA,kBAAC,KAAD,CAAQ/b,KAAK,SAASgE,MAAO,CAAE6I,WAAY,OAASiP,KAAM,kBAACE,GAAA,EAAD,OACtD,kBAACC,GAAA,EAAD,CAAMC,GAAG,sBAAT,iBAIZ,6BAAM,6BACN,kBAAC,KAAD,CAActM,MAAM,gBAChB,kBAAC,KAAatH,KAAd,CAAmBe,MAAM,gBAAzB,YACA,kBAAC,KAAaf,KAAd,CAAmBe,MAAM,SAAzB,aACA,kBAAC,KAAaf,KAAd,CAAmBe,MAAM,cAAzB,UACA,kBAAC,KAAaf,KAAd,CAAmBe,MAAM,SAASvF,KAAM,GACpC,kBAAC,KAAD,CAAOyD,OAAO,UAAU4D,KAAK,cAGrC,6BAAM,6BACN,6BAAM,6BACN,kBAAC,KAAD,CAAMxG,KAAK,yBAAyBkE,SA9B3B,SAAAvF,GACb2C,QAAQC,IAAI,2BAA4B5C,IA6BoB6Y,aAAa,OACjE,kBAAC,KAAKC,KAAN,CAAWzX,KAAK,UACX,SAAC0X,EAAD,GAA8B,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACb,OACI,6BACKF,EAAO9T,KAAI,SAAAiU,GAAK,OACb,kBAAC,KAAD,CAAOhU,IAAKgU,EAAMhU,IAAKxE,MAAO,CAAEwI,QAAS,OAAQtI,aAAc,GAAKuY,MAAM,SACtE,kBAAC,KAAKnU,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,YACnB+X,SAAU,CAACF,EAAME,SAAU,YAC3BpT,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,wBAEnC,kBAAC,KAAD,CACIgN,kBAAkB,mCAClBC,yBAA0B,IAC1BtP,MAAO,CAAEC,MAAO,KAChBmO,QAASA,IAET,kBAAC,KAAM7E,OAAP,CAAc1I,YAAY,kBAGlC,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,SACnB+X,SAAU,CAACF,EAAME,SAAU,WAE3B,kBAAC,KAAD,CAAO7X,YAAY,WAEvB,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,OACnB+X,SAAU,CAACF,EAAME,SAAU,SAE3B,kBAAC,KAAD,CAAO7X,YAAY,SAEvB,kBAAC8X,GAAA,EAAD,CACI1Z,QAAS,WACLsZ,EAAOC,EAAM7X,aAM7B,kBAAC,KAAK2D,KAAN,KACI,kBAAC,KAAD,CACItI,KAAK,SACLiD,QAAS,WACLqZ,KAEJM,OAAK,GAEL,kBAACb,GAAA,EAAD,MAPJ,oBAoBxB,kBAAC,KAAD,CAAcnM,MAAM,IAChB,kBAAC,KAAatH,KAAd,CAAmBe,MAAM,gBAAzB,OACA,kBAAC,KAAaf,KAAd,CAAmBe,MAAM,aAAzB,MACA,kBAAC,KAAaf,KAAd,CAAmBe,MAAM,kBAAzB,MAEJ,6BAAM,6BACN,kBAAC,KAAKf,KAAN,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKxE,KAAM,GAAI2F,OAAQ,IACnB,kBAAC,KAAD,CAAQzJ,KAAK,UAAU6c,MAAM,QAAQf,KAAM,kBAACgB,GAAA,EAAD,MAAsBrN,KAAK,SAAtE,SACA,kBAAC,KAAD,CAAQzL,MAAO,CAAE6I,WAAY,QAAU7M,KAAK,UAAU6c,MAAM,QAAQpN,KAAK,SAAzE,WACA,kBAAC,KAAD,CAAQzL,MAAO,CAAE6I,WAAY,QAAU7M,KAAK,UAAU6c,MAAM,QAAQpN,KAAK,SAAzE,oBC9JhB/H,GAAWC,KAAXD,OAEFqP,GAAU,CACZ,CACInH,MAAO,YACP+F,UAAW,WACXoH,iBAAkB,UAClB/F,OAAQ,SAAChU,EAAGkU,GAAJ,OAAUlU,EAAE2V,SAAWzB,EAAEyB,WAErC,CACI/I,MAAO,QACP+F,UAAW,SAEf,CACI/F,MAAO,WACP+F,UAAW,WACXwF,QAfkB,CAAC,QAAS,SAAU,SAAU,UAAW,gBAehC5S,KAAI,SAAAyU,GAC3B,MAAO,CACH7R,KAAM6R,EACN3d,MAAO2d,MAGfC,SAAU,SAAC5d,EAAOuW,GAAR,OAAsD,IAAnCA,EAAOsH,SAAStM,QAAQvR,IACrD2X,OAAQ,SAAChU,EAAGkU,GAAJ,OAAUlU,EAAEka,SAAS9N,OAAS8H,EAAEgG,SAAS9N,QACjD+N,eAAgB,CAAC,aA6FVC,GAzFM,WACjB,IAAI/H,EAAQ,EADW,EAGRC,KAAKC,UAAbxM,EAHgB,sBAIC5F,qBAAfka,EAJc,sBAKCla,mBAAS,IALV,mBAKhBwB,EALgB,KAKV2Y,EALU,OAMGna,mBAAS,CAAC,QAAS,SAAU,SAAU,UAAW,iBANrD,mBAMhBoa,EANgB,KAMTC,EANS,KASvB1X,qBAAU,WACNuX,EAAY,MACb,IAKH,SAASI,EAAaC,GAElBJ,EAAQI,EAAMnC,OAAOlc,OAEzB,SAASse,IACLL,EAAQ,IACRE,EAAS,GAAD,oBAAKD,GAAL,CAAY5Y,GAAI,mBAAgB0Q,QAG5C,OACI,oCACI,kBAAC,KAAD,CAAMtM,KAAMA,EAAMpE,KAAK,mBAAmBiD,OAAO,SAASiB,SAdjD,SAAAvF,GACb2C,QAAQC,IAAI,UAAW5C,KAcf,kBAAC,KAAKgF,KAAN,CACI3D,KAAK,WACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,6BAEnC,kBAAC,KAAD,CAAOxB,YAAY,eAEvB,kBAAC,KAAKyD,KAAN,CACI3D,KAAK,QACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,2BAEnC,kBAAC,KAAD,CAAaxB,YAAY,WAE7B,kBAAC,KAAKyD,KAAN,CACI3D,KAAK,YAEL,kBAAC,KAAD,CACIX,MAAO,CAAEC,MAAO,KAChBY,YAAY,kBACZ+Y,eAAgB,SAAAC,GAAI,OAChB,6BACKA,EACD,kBAAC,KAAD,CAAS7Z,MAAO,CAAE4I,OAAQ,WAC1B,yBAAK5I,MAAO,CAAEwI,QAAS,OAAQsR,SAAU,SAAU7Q,QAAS,IACxD,kBAAC,KAAD,CAAOjJ,MAAO,CAAE+Z,KAAM,QAAU1e,MAAOsF,EAAMG,SAAU2Y,IACvD,uBACIzZ,MAAO,CAAE+Z,KAAM,OAAQ9Q,QAAS,MAAOT,QAAS,QAASwR,OAAQ,WACjE/a,QAAS0a,GAET,kBAAC5B,GAAA,EAAD,MAJJ,iBAUXwB,EAAMhV,KAAI,SAAAuL,GAAI,OACX,kBAAC,GAAD,CAAQtL,IAAKsL,GAAOA,QAIhC,kBAAC,KAAKxL,KAAN,CAAW2V,cAAc,IACpB,kBACG,kBAAC,KAAD,CACIje,KAAK,UACL0J,SAAS,SACTwU,UACKnV,EAAKoV,iBAAgB,IACtBpV,EAAKqV,iBAAiBjN,QAAO,qBAAG1M,OAAoB2K,UAAQA,QALpE,gBAaZ,6BAAM,6BAAM,6BACZ,kBAAC,KAAD,CAAO2H,QAASA,GAASO,WAjFpB,O,8BCVF+G,GApBU,WAAO,IAAD,EACKlb,oBAAS,GADd,mBACtBC,EADsB,KACXC,EADW,OAEGF,mBAAS,IAFZ,mBAEtBmH,EAFsB,KAEZC,EAFY,KAiB7B,MAAO,CAACD,EAAUlH,EAbL,uCAAG,4BAAAJ,EAAA,6DACdK,GAAa,GADC,SvBJTyD,KACJgD,IADI,UACGrD,GAAIC,IADP,0BAEJM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,EAAIK,YuBAC,OAGRA,EAHQ,OAKV8C,EADA9C,GAIU,IAEdpE,GAAa,GAVC,2CAAH,uDCgBAib,GArBqB,WAAO,IAAD,EACNnb,oBAAS,GADH,mBACjCC,EADiC,KACtBC,EADsB,OAERF,mBAAS,IAFD,mBAEjCmH,EAFiC,KAEvBC,EAFuB,KAkBxC,MAAO,CAACD,EAAUlH,EAdL,uCAAG,WAAOyG,GAAP,eAAA7G,EAAA,6DACdK,GAAa,GADC,SAGSuG,GAAyBC,GAHlC,OAGRpC,EAHQ,OAMV8C,EADA9C,GAIU,IAEdpE,GAAa,GAXC,2CAAH,wDCiBAkb,GArBsB,WAAO,IAAD,EACPpb,oBAAS,GADF,mBAClCC,EADkC,KACvBC,EADuB,OAETF,mBAAS,IAFA,mBAElCmH,EAFkC,KAExBC,EAFwB,KAkBzC,MAAO,CAACD,EAAUlH,EAdL,uCAAG,WAAO4G,GAAP,eAAAhH,EAAA,6DACdK,GAAa,GADC,SAGS0G,GAA0BC,GAHnC,OAGRvC,EAHQ,OAMV8C,EADA9C,GAIU,IAEdpE,GAAa,GAXC,2CAAH,wDCDPqE,GAAWC,KAAXD,OACA6F,GAAW5J,KAAX4J,OACR,SAASiR,GAAT,GAA6C,IAAnBxe,EAAkB,EAAlBA,KAAM8E,EAAY,EAAZA,SAC5B,MAAa,SAAT9E,EAAwB,kBAAC,KAAD,CAAY8E,SAAUA,IACrC,SAAT9E,EAAwB,kBAAC,KAAD,CAAY8E,SAAUA,IAC3C,kBAAC,KAAD,CAAY2Z,OAAQze,EAAM8E,SAAUA,IAwJhC4Z,OArJf,YAAkD,EAArBlZ,SAAsB,IAAZC,EAAW,EAAXA,QAE7BsR,EAAU,CACZ,CACInH,MAAO,eACP+F,UAAW,cACXnN,IAAK,cACL4O,OAAQ,SAAAjM,GAAI,OAAI,8BAAOA,KAE3B,CACIyE,MAAO,YACP+F,UAAW,OACXnN,IAAK,QAET,CACIoH,MAAO,SACPpH,IAAK,SACLmN,UAAW,SACXyB,OAAQ,SAAAuH,GAAI,OACR,oCACKA,EAAKpW,KAAI,SAAAqW,GACN,OACI,kBAAC,KAAD,CAAK1Z,MAAM,QAAQsD,IAAKoW,GACnBA,EAAIC,oBAMzB1D,QAAS,CACL,CACIhQ,KAAM,aACN9L,MAAO,cAEX,CACI8L,KAAM,mBACN9L,MAAO,SAGf4d,SAAU,SAAC5d,EAAOuW,GAAR,OAAmBA,EAAOrO,QAAUlI,IAElD,CACIuQ,MAAO,SACPpH,IAAK,SACL4O,OAAQ,SAACjM,EAAMyK,GAAP,OACJ,kBAAC,KAAD,CAAOnG,KAAK,UACR,kBAAC,KAAD,CAAQzP,KAAK,UAAUiD,QAAS,WAC5BwC,EAAQM,KAAK,CAAEJ,SAAU,qBAAsBuI,OAAQ,cAAgB0H,EAAO5L,UAAY,gBAAkB4L,EAAOzL,YAAc,aAAeyL,EAAO/L,SAAW,kBAAoB+L,EAAOkJ,kBADjM,WAKA,kBAAC,KAAD,CAAQ9e,KAAK,UAAUiD,QAAS,WAC5BwC,EAAQM,KAAK,CAAEJ,SAAU,yBAA0BuI,OAAQ,cAAgB0H,EAAO5L,UAAY,aAAe4L,EAAO/L,SAAW,kBAAoB+L,EAAOkJ,kBAD9J,YASZjR,EAAc,GA5D4B,EA6DtB1K,mBAAS,QA7Da,mBA6DvCnD,EA7DuC,KA6DjC+e,EA7DiC,OA8DuBR,KA9DvB,mBA8DvCS,EA9DuC,KA8DNC,GA9DM,aAgElB9b,mBAAS,QAhES,mBAgEvCgO,EAhEuC,KAgE/B+N,EAhE+B,OAiELzU,KAjEK,mBAiEvCkE,EAjEuC,KAiEnB/F,GAjEmB,aAkEe0V,KAlEf,mBAkEvCa,EAlEuC,KAkEbC,GAlEa,WAmE1ClY,EAAO,GA6CX,OA5CApB,qBAAU,WACN8C,MACD,IAEC+F,EAAQS,OAAS,IACjBvB,EAAcc,EAAQpG,KAAI,SAAA8G,GAAM,OAAI,kBAAC,GAAD,CAAQ7G,IAAK6G,EAAOxF,UAAYwF,EAAOlC,gBAE/ElH,QAAQC,IAAI,UAAWiZ,GACT,UAAVhO,GAAsBgO,EAAa/P,OAAS,IAC5ClI,EAAOiY,EAAa5W,KAAI,SAAA8W,GACpB,MAAO,CACH7W,IAAK6W,EAAYP,cACjB3U,YAAakV,EAAYlV,YACzB2U,cAAeO,EAAYP,cAC3BQ,KAAM,IAAItT,KAAKqT,EAAYE,iBAAiB5P,eAC5C9F,SAAUwV,EAAYxV,SACtBG,UAAWqV,EAAYrV,UACvBzC,OAAS8X,EAAY9X,OAAS,CAAC8X,EAAY9X,QAAU,CAAC,mBAIpD,WAAV4J,GAAuB6N,EAAoB5P,OAAS,IACpDlI,EAAO8X,EAAoBzW,KAAI,SAAA8W,GAC3B,MAAO,CACH7W,IAAK6W,EAAYP,cACjB3U,YAAakV,EAAYlV,YACzB2U,cAAeO,EAAYP,cAC3BQ,KAAM,IAAItT,KAAKqT,EAAYE,iBAAiB5P,eAC5C9F,SAAUwV,EAAYxV,SACtBG,UAAWqV,EAAYrV,UACvBzC,OAAS8X,EAAY9X,OAAS,CAAC8X,EAAY9X,QAAU,CAAC,mBAe9D,oCACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CACIzC,SAbhB,SAA8BzF,GAC1B+f,EAAyB/f,GACzB6f,EAAU,WAYE5O,YAAU,EACVzL,YAAY,gBAAgBb,MAAO,CAAEC,MAAO,KAC5CuM,iBAAiB,WACjBC,aAAc,SAAC7M,EAAO8M,GAAR,OACVA,EAAOvR,SAASwR,cAAcC,QAAQhN,EAAM+M,gBAAkB,IAEjE9C,GAEL,kBAAC,KAAD,CAAQxO,MAAOW,EAAM8E,SAAUia,GAC3B,kBAAC,GAAD,CAAQ1f,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,WAAd,WACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,SAEJ,kBAACmf,GAAD,CAAgBxe,KAAMA,EAAM8E,SAAU,SAAAzF,GAAK,OAAI4G,QAAQC,IAAI7G,MAC3D,kBAAC,GAAD,CACIwF,YAAY,uBACZmL,YAAU,EACVC,YAAY,SACZR,KAAK,SACLzL,MAAO,CAAEC,MAAO,OAAQ4I,WAAY,SACpCqD,SAhCQ,SAAA7Q,GACpB4f,EAA0B5f,GAC1B6f,EAAU,eAiCN,6BACA,kBAAC,KAAD,CAAOnI,QAASA,EAASO,WAAYpQ,MClIlCsY,I,OAzBQ,WAAO,IAAD,EACOrc,oBAAS,GADhB,mBACpBC,EADoB,KACTC,EADS,OAECF,oBAAS,GAFV,mBAEpBoE,EAFoB,KAEZC,EAFY,KAsB3B,MAAO,CAACD,EAAQnE,EAlBH,uCAAG,WAAOyD,GAAP,eAAA7D,EAAA,6DACdK,GAAa,GADC,SAGSyO,GAAYjL,GAHrB,QAGRY,EAHQ,QAMY,YAApBA,EAASF,QACXC,GAAU,GAKZA,GAAU,GAGZnE,GAAa,GAfC,2CAAH,yDCgBAoc,GApBW,WAAO,IAAD,EACItc,oBAAS,GADb,mBACvBC,EADuB,KACZC,EADY,OAEEF,mBAAS,IAFX,mBAEvBmH,EAFuB,KAEbC,EAFa,KAiB9B,MAAO,CAACD,EAAUlH,EAbL,uCAAG,4BAAAJ,EAAA,6DACdK,GAAa,GADC,SfMTyD,KACJgD,IADI,UACGrD,GAAIC,IADP,2BAEJM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACL,OAAOA,KeVK,OAGRK,EAHQ,OAKV8C,EADA9C,GAIU,IAEdpE,GAAa,GAVC,2CAAH,uDCgIAqc,GAhIK,WAChB,IAAMxY,EAAO,GADS,EAEPoO,KAAKC,UAAbxM,EAFe,sBAIkByW,KAJlB,mBAIfjY,EAJe,KAIPnE,EAJO,KAIIwF,EAJJ,OAK6B6W,KAL7B,mBAKf7N,EALe,KAKQW,GALR,WAOtBzM,qBAAU,WACFyB,IACAnB,KAAY,QAAY,CACpBC,QAAS,UACTC,YAAa,8BACbC,SAAU,IAEdgM,KAEqB,IAArBX,EAAUxC,QACVmD,MAGL,CAAChL,IACJtB,QAAQC,IAAI,iBAAkB0L,GA0D9B,OAfIA,EAAUxC,OAAS,GACnBwC,EAAUgB,SAAQ,SAACC,EAAUwC,GACzBnO,EAAKnB,KAAK,CACNyC,IAAK6M,EACLvC,aAAcD,EAASC,aACvB6M,MAAO9M,EAAS8M,MAChBC,SAAU/M,EAAS+M,SACnBC,aAAchN,EAASgN,kBAS/B,oCACI,kBAAC,GAAD,CAASva,KAAMlC,IACf,kBAAC,KAAD,CAAM2F,KAAMA,EAAMpE,KAAK,mBAAmBiD,OAAO,SAASiB,SA5DjD,SAAAE,GACb,IAAMlC,EAAO,CACT,aAAgBkC,EAAKpE,KACrB,aAAgBoE,EAAK/I,KACrB,SAAY+I,EAAK6W,SACjB,MAAS7W,EAAK4W,OAElB/W,EAAW/B,KAsDH,kBAAC,KAAKyB,KAAN,CACI3D,KAAK,OACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,2BAEnC,kBAAC,KAAD,CAAOyZ,OAAQ,kBAAClE,GAAA,EAAD,CAAczL,UAAU,wBAA0BtL,YAAY,mBAEjF,kBAAC,KAAKyD,KAAN,CACI3D,KAAK,OACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,0BAEnC,kBAAC,KAAD,CAAOyZ,OAAQ,kBAAClE,GAAA,EAAD,CAAczL,UAAU,wBAA0BtL,YAAY,mBAEjF,kBAAC,KAAKyD,KAAN,CACI3D,KAAK,WACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,4BAEnC,kBAAC,KAAD,CAAOyZ,OAAQ,kBAAClE,GAAA,EAAD,CAAczL,UAAU,wBAA0BtL,YAAY,cAEjF,kBAAC,KAAKyD,KAAN,CACI3D,KAAK,QACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,yBAEnC,kBAAC,KAAD,OAEJ,kBAAC,KAAKiC,KAAN,CAAW2V,cAAc,IACpB,kBACG,kBAAC,KAAD,CACIje,KAAK,UACL0J,SAAS,SACTwU,UACKnV,EAAKoV,iBAAgB,IACtBpV,EAAKqV,iBAAiBjN,QAAO,qBAAG1M,OAAoB2K,UAAQA,QALpE,oBAaZ,6BAAM,6BAAM,6BACZ,kBAAC,KAAD,CAAO2H,QA5FC,CACZ,CACInH,MAAO,gBACP+F,UAAW,eACXoH,iBAAkB,UAClB/F,OAAQ,SAAChU,EAAGkU,GAAJ,OAAUlU,EAAE8P,aAAeoE,EAAEpE,eAEzC,CACIlD,MAAO,WACP+F,UAAW,YAEf,CACI/F,MAAO,gBACP+F,UAAW,eACXwF,QAAS,CACL,CACIhQ,KAAM,UACN9L,MAAO,WAEX,CACI8L,KAAM,cACN9L,MAAO,eAGf4d,SAAU,SAAC5d,EAAOuW,GAAR,OAA0D,IAAvCA,EAAOiK,aAAajP,QAAQvR,IACzD2X,OAAQ,SAAChU,EAAGkU,GAAJ,OAAUlU,EAAE6c,aAAazQ,OAAS8H,EAAE2I,aAAazQ,QACzD+N,eAAgB,CAAC,YAErB,CACIvN,MAAO,QACP+F,UAAW,UA8Dc2B,WAAYpQ,EAAMpC,SA/CnD,SAAkBoW,EAAYC,EAASnE,EAAQnH,GAC3C5J,QAAQC,IAAI,SAAUgV,EAAYC,EAASnE,EAAQnH,QCxD5CkQ,GAzBI,WAAO,IAAD,EACW5c,oBAAS,GADpB,mBAChBC,EADgB,KACLC,EADK,OAEKF,oBAAS,GAFd,mBAEhBoE,EAFgB,KAERC,EAFQ,KAsBvB,MAAO,CAACD,EAAQnE,EAlBH,uCAAG,WAAOyD,GAAP,eAAA7D,EAAA,6DACdK,GAAa,GADC,SAGS0O,GAAQlL,GAHjB,QAGRY,EAHQ,QAMY,YAApBA,EAASF,QACXC,GAAU,GAKZA,GAAU,GAGZnE,GAAa,GAfC,2CAAH,wDC0FA2c,GA1FC,WACZ,IAAM9Y,EAAO,GADK,EAEHoO,KAAKC,UAAbxM,EAFW,sBAIsBgX,KAJtB,mBAIXxY,EAJW,KAIHnE,EAJG,KAIQwF,EAJR,OAKiCqX,KALjC,mBAKXrO,EALW,KAKYW,GALZ,WAOlBzM,qBAAU,WACFyB,IACAnB,KAAY,QAAY,CACpBC,QAAS,UACTC,YAAa,0BACbC,SAAU,IAEdgM,KAEqB,IAArBX,EAAUxC,QACVmD,MAGL,CAAChL,IAiCJ,OAbIqK,EAAUxC,OAAS,GACnBwC,EAAUgB,SAAQ,SAACC,EAAUwC,GACzBnO,EAAKnB,KAAK,CACNyC,IAAK6M,EACL1C,SAAUE,EAASF,SACnBgN,MAAO9M,EAAS8M,WASxB,oCACI,kBAAC,GAAD,CAASra,KAAMlC,IACf,kBAAC,KAAD,CAAM2F,KAAMA,EAAMpE,KAAK,mBAAmBiD,OAAO,SAASiB,SAnCjD,SAAAE,GACb,IAAMlC,EAAO,CACT,SAAYkC,EAAKpE,KACjB,MAASoE,EAAK4W,OAElB/W,EAAW/B,KA+BH,kBAAC,KAAKyB,KAAN,CACI3D,KAAK,OACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,8BAEnC,kBAAC,KAAD,CAAOyZ,OAAQ,kBAAClE,GAAA,EAAD,CAAczL,UAAU,wBAA0BtL,YAAY,eAEjF,kBAAC,KAAKyD,KAAN,CACI3D,KAAK,QACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,yBAEnC,kBAAC,KAAD,OAEJ,kBAAC,KAAKiC,KAAN,CAAW2V,cAAc,IACpB,kBACG,kBAAC,KAAD,CACIje,KAAK,UACL0J,SAAS,SACTwU,UACKnV,EAAKoV,iBAAgB,IACtBpV,EAAKqV,iBAAiBjN,QAAO,qBAAG1M,OAAoB2K,UAAQA,QALpE,gBAaZ,6BAAM,6BAAM,6BACZ,kBAAC,KAAD,CAAO2H,QAzDC,CACZ,CACInH,MAAO,YACP+F,UAAW,WACXoH,iBAAkB,UAClB/F,OAAQ,SAAChU,EAAGkU,GAAJ,OAAUlU,EAAE2P,SAAWuE,EAAEvE,WAErC,CACI/C,MAAO,QACP+F,UAAW,UAgDc2B,WAAYpQ,EAAMpC,SAnCnD,SAAkBoW,EAAYC,EAASnE,EAAQnH,GAC3C5J,QAAQC,IAAI,SAAUgV,EAAYC,EAASnE,EAAQnH,QCvDrDkH,GAAU,CACZ,CACInH,MAAO,eACP+F,UAAW,cACXnN,IAAK,cACL4O,OAAQ,SAAAjM,GAAI,OAAI,2BAAIA,KAExB,CACIyE,MAAO,mBACP+F,UAAW,iBACXnN,IAAK,kBAET,CACIoH,MAAO,QACP+F,UAAW,QACXnN,IAAK,SAET,CACIoH,MAAO,SACPpH,IAAK,SACLmN,UAAW,SACXyB,OAAQ,SAAAuH,GAAI,OACR,oCACKA,EAAKpW,KAAI,SAAAqW,GACN,OACI,kBAAC,KAAD,CAAK1Z,MAAM,QAAQsD,IAAKoW,GACnBA,EAAIC,qBAO7B,CACIjP,MAAO,SACPpH,IAAK,SACL4O,OAAQ,SAACjM,EAAMyK,GAAP,OACJ,kBAAC,KAAD,CAAOnG,KAAK,UACR,mCACA,uCAMVvI,GAAO,CACT,CACIsB,IAAK,IACL0X,YAAa,QACbC,eAAgB,QAChBR,MAAO,QACPpY,OAAQ,CAAC,WAEb,CACIiB,IAAK,IACL0X,YAAa,QACbC,eAAgB,QAChBR,MAAO,QACPpY,OAAQ,CAAC,WAEb,CACIiB,IAAK,IACL0X,YAAa,QACbC,eAAgB,QAChBR,MAAO,QACPpY,OAAQ,CAAC,YAqBF6Y,GAjBC,WACZ,OACI,oCACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKtc,KAAM,GAAIE,MAAO,CAAEqc,UAAW,UAC/B,kBAAC,KAAK/X,KAAN,KACI,kBAAC,KAAD,CAAQtI,KAAK,UAAU0J,SAAS,UAC5B,kBAACuS,GAAA,EAAD,CAAMC,GAAG,oBAAT,kBAKhB,kBAAC,KAAD,CAAOnF,QAASA,GAASO,WAAYpQ,OC7DlCoZ,GApBU,WAAO,IAAD,EACKnd,oBAAS,GADd,mBACtBC,EADsB,KACXC,EADW,OAEGF,mBAAS,IAFZ,mBAEtBmH,EAFsB,KAEZC,EAFY,KAiB7B,MAAO,CAACD,EAAUlH,EAbL,uCAAG,WAAO+G,GAAP,eAAAnH,EAAA,6DACdK,GAAa,GADC,SAGS6G,GAAiBC,GAH1B,OAGR1C,EAHQ,OAKV8C,EADA9C,GAIU,IAEdpE,GAAa,GAVC,2CAAH,wDCEPqE,IADW/D,KAAX4J,OACW5F,KAAXD,QA+NO6Y,GA9NO,WAAO,IAAD,EACcpd,mBAAS,eADvB,mBACjBuR,EADiB,KACJC,EADI,OAEMxR,oBAAS,GAFf,mBAEjBwX,EAFiB,KAER6F,EAFQ,OAGArd,mBAAS,IAHT,mBAGjBwB,EAHiB,KAGX2Y,EAHW,OAIcna,mBAAS,OAJvB,mBAIjBsd,EAJiB,KAIJC,EAJI,OAKkBrC,KALlB,mBAKjB/T,EALiB,KAKPlH,EALO,KAKIwF,EALJ,OAMmC8B,KANnC,mBAMjBkE,EANiB,KAMW+R,GANX,aAO2CL,KAP3C,mBAOjBM,EAPiB,KAOiBC,GAPjB,WAQpB3Z,EAAO,IAEXpB,qBAAU,WACc,QAAhB2a,GACA7X,MAEL,CAAC6X,IAiBe,aAAfA,GAAgD,MAAlB7R,KAS9B1H,EARY,CAAC,CACTsB,IAAKoG,EAAe5E,UACpBrF,KAAMiK,EAAezE,YACrBc,IAAK2D,EAAe3D,IACpB6V,MAAOlS,EAAe1D,WACtBgB,QAAS0C,EAAemS,OACxBxZ,OAAQ,CAAC,iBAKE,eAAfkZ,GAAwD,MAAxBG,IAChC1Z,EAAO0Z,EAAqBrY,KAAI,SAACuC,EAASuK,GACtC,MAAO,CACH7M,IAAKsC,EAAQd,UACbrF,KAAMmG,EAAQX,YACdc,IAAKH,EAAQG,IACb6V,MAAOhW,EAAQI,WACfgB,QAASpB,EAAQiW,OACjBxZ,OAAQ,CAAC,mBAID,QAAhBkZ,GAAyBnW,EAAS8E,OAAS,IAC3ClI,EAAOoD,EAAS/B,KAAI,SAACuC,EAASuK,GAC1B,MAAO,CACH7M,IAAKsC,EAAQd,UACbrF,KAAMmG,EAAQX,YACdc,IAAKH,EAAQG,IACb6V,MAAOhW,EAAQI,WACfgB,QAASpB,EAAQiW,OACjBxZ,OAAQ,CAAC,mBAIrB,IAAMwP,EAAU,CACZ,CACInH,MAAO,OACP+F,UAAW,OACXnN,IAAK,OACL4O,OAAQ,SAAAjM,GAAI,OAAI,8BAAOA,IACvB6L,OAAQ,SAAChU,EAAGkU,GAAJ,OAAUlU,EAAE2B,KAAKyK,OAAS8H,EAAEvS,KAAKyK,QACzC+N,eAAgB,CAAC,UAAW,WAEhC,CACIvN,MAAO,MACP+F,UAAW,MACXnN,IAAK,OAET,CACIoH,MAAO,QACP+F,UAAW,QACXnN,IAAK,SAET,CACIoH,MAAO,SACPpH,IAAK,SACLmN,UAAW,SACXyB,OAAQ,SAAAuH,GAAI,OACR,oCACKA,EAAKpW,KAAI,SAAAqW,GACN,IAAI1Z,EAAQ0Z,EAAIxP,OAAS,EAAI,WAAa,QAI1C,MAHY,UAARwP,IACA1Z,EAAQ,WAGR,kBAAC,KAAD,CAAKA,MAAOA,EAAOsD,IAAKoW,GACnBA,EAAIC,oBAMzB1D,QAAS,CACL,CACIhQ,KAAM,aACN9L,MAAO,cAEX,CACI8L,KAAM,aACN9L,MAAO,eAGf4d,SAAU,SAAC5d,EAAOuW,GAAR,OAAmBA,EAAOrO,QAAUlI,IAElD,CACIuQ,MAAO,SACPpH,IAAK,SACL4O,OAAQ,SAACjM,EAAMyK,GAAP,OACJ,kBAAC,KAAD,CAAOnG,KAAK,UACR,kBAAC,KAAD,CAAQzP,KAAK,UAAUiD,QAAS,WAC5BgD,QAAQC,IAAI,uBACZsa,GAAW,GACXlD,GAAQ,SAAA0D,GAAQ,MAAI,CAACpL,QAHzB,oBAaVqL,EAAe,CACjB,CAAErR,MAAO,iBAAkB+F,UAAW,gBAAiBnN,IAAK,iBAC5D,CAAEoH,MAAO,mBAAoB+F,UAAW,kBAAmBnN,IAAK,iBAChE,CACIoH,MAAO,SACP+F,UAAW,GACXnN,IAAK,IACL4O,OAAQ,kBAAM,yCAIhB8J,EAAY,CACd,CACI1Y,IAAK,EACL2Y,cAAe,WACfC,gBAAiB,SAEjB9a,YAAa,iFAEjB,CACIkC,IAAK,EACL2Y,cAAe,WACfC,gBAAiB,SAEjB9a,YAAa,8EAEjB,CACIkC,IAAK,EACL2Y,cAAe,WACfC,gBAAiB,SAEjB9a,YAAa,uBAEjB,CACIkC,IAAK,EACL2Y,cAAe,WACfC,gBAAiB,SAEjB9a,YAAa,+EAIrB,OACI,oCACI,kBAAC,GAAD,CAAShB,KAAMlC,IACf,kBAAC,KAAMwR,MAAP,CAAaC,SAAO,GAChB,kBAAC,KAAD,CAAQtE,aAAcmE,EAAarE,SAAUsE,GACzC,kBAAC,GAAD,CAAQtV,MAAM,eAAd,gBACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,eAEJ,kBAAC,KAAMkO,OAAP,CAAc2C,SAzK1B,SAAyBsK,GACrBvU,QAAQC,IAAIsU,GAEO,IAAfA,GACA5R,IACA8X,EAAe,QACO,aAAfhM,GACPiM,EAAqBnG,GACrBkG,EAAe,cACO,eAAfhM,IACPmM,EAAuBrG,GACvBkG,EAAe,iBA8J8B1c,MAAO,CAAEC,MAAO,OAASY,YAAY,eAElF,6BAAM,6BACN,kBAAC,KAAD,CAAOkS,QAASA,EAASO,WAAYpQ,IACrC,kBAAC,KAAD,CACI0I,MAAM,kBACNyR,UAAQ,EACR1G,QAASA,EACTE,KAAM,kBAAM2F,GAAW,IACvB1F,SAAU,kBAAM0F,GAAW,IAC3Bvc,MAAO,KAENU,EAAK4D,KAAI,SAACqN,EAAQP,GAAT,OACN,oCACI,kBAAC,KAAD,CAAc7M,IAAK6M,GACf,kBAAC,KAAa/M,KAAd,CAAmBe,MAAM,QAAQuM,EAAOjR,MACxC,kBAAC,KAAa2D,KAAd,CAAmBe,MAAM,SAASuM,EAAOkL,OACzC,kBAAC,KAAaxY,KAAd,CAAmBe,MAAM,OAAOuM,EAAO3K,KACvC,kBAAC,KAAa3C,KAAd,CAAmBe,MAAM,WACpBuM,EAAO1J,UAGhB,kBAAC,KAAD,CACI6K,QAASkK,EACTK,WAAY,CACRC,kBAAmB,SAAA3L,GAAM,OAAI,uBAAG5R,MAAO,CAAE4I,OAAQ,IAAMgJ,EAAOtP,cAC9Dkb,cAAe,SAAA5L,GAAM,MAA+B,WAA3BA,EAAOwL,kBAEpC9J,WAAY4J,WCrNzBO,GARE,WACb,OACI,sC,oBCDKC,GAAmB,SAAC7a,GAC7B,OAAOC,KACFC,KADE,UACMN,GAAIC,IADV,mCACgDG,GAClDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,MAINua,GAAiC,SAAC7C,GAC3C,OAAOhY,KACFgD,IAAI,UAAGrD,GAAIC,IAAP,wDAAmEoY,GACvE9X,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,MCGJwa,GAhBa,WAAO,IAAD,EACEze,oBAAS,GADX,mBACzBC,EADyB,KACdC,EADc,OAEJF,mBAAS,IAFL,mBAEzBoE,EAFyB,KAEjBC,EAFiB,KAahC,MAAO,CAACD,EAAQnE,EATH,uCAAG,WAAOyD,GAAP,eAAA7D,EAAA,6DACdK,GAAa,GADC,SAGSqe,GAAiB7a,GAH1B,OAGRY,EAHQ,OAKdD,EAAUC,GACVpE,GAAa,GANC,2CAAH,wDCEPqE,I,OAAWC,KAAXD,QAkBFgU,GAAa,SAAC9L,EAAO+L,GACvB,MAAO,CACHtc,MAAOuQ,EACPvG,MACI,yBACIrF,MAAO,CACHwI,QAAS,OACTE,eAAgB,kBAGnBkD,EACD,8BACI,kBAACgM,GAAA,EAAD,MADJ,IACsBD,MAuUvBkG,GA9TM,SAAC,GAA2B,IAAzBrc,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1B2M,EAAU,GACR0P,EAAe,GAFuB,EAGV3e,oBAAS,GAHC,mBAGrC4e,EAHqC,KAG1BC,EAH0B,OAI7B1M,KAAKC,UAAbxM,EAJqC,sBAKrBuM,KAAKC,UAArB0M,EALqC,sBAMvB3M,KAAKC,UAAnB2M,EANqC,sBAOvB5M,KAAKC,UAAnB4M,EAPqC,sBASO1C,KATP,mBASrC7N,EATqC,KASdW,GATc,aAUQqP,KAVR,mBAUrCna,EAVqC,KAUf2a,GAVe,aAWFnC,KAXE,mBAWrCzN,EAXqC,KAWnBC,GAXmB,WAatC1E,EAAcC,KAAYC,MAAMzI,EAAS0I,QAC/CpI,qBAAU,WACiB,WAAnB2B,EAASF,OACTnB,KAAY,QAAY,CACpBC,QAAS,UACTC,YAAa,2DACbC,SAAU,IAEY,KAAnBkB,EAASF,QAChBnB,KAAY,MAAU,CAClBC,QAAS,QACTC,YAAa,wEACbC,SAAU,MAGnB,CAACkB,IACJ,IAlEiBmI,EAkEX/G,EAAW,SAAAvF,GACb2C,QAAQC,IAAI,2BAA4B5C,GACxC2C,QAAQC,IAAI,YAAa6C,EAAKsZ,kBAC9Bpc,QAAQC,IAAI,SAAU+b,EAAaI,kBACnCpc,QAAQC,IAAI,UAAWgc,EAAWG,kBAClC,IAAMlI,EAAe8H,EAAaI,iBAAiBC,MAC7ChI,EAAWvR,EAAKsZ,iBAAiBC,MACjCC,EAAgBL,EAAWG,iBAC3Bxb,EAAO,CACT2b,eAAgB,CACZ1D,cAAe/Q,EAAY+Q,cAC3B9U,UAAW+D,EAAY/D,UACvBG,YAAa4D,EAAY5D,YACzBN,SAAUkE,EAAYlE,SACtBmD,OAAQuV,EAAcvV,OACtByV,OAAQF,EAAcE,OACtBC,GAAIH,EAAcI,GAClBC,WAAYL,EAAcM,YAC1BC,OAAQX,EAAWE,iBAAiBU,OACpCxb,OAAQ,QAEZyb,sBAAuB,KACvBC,yBAA0B,MAGV,MAAhB9I,GAAwBA,EAAa/K,OAAS,IAC9CvI,EAAKmc,sBAAwB7I,EAAa5R,KAAI,SAAAsK,GAC1C,MAAO,CAAEuH,QAASvH,EAASC,aAAcuH,KAAMxH,EAASqQ,aAAcC,OAAQtQ,EAASsQ,OAAQC,QAASvQ,EAASwQ,cAIzG,MAAZ/I,GAAoBA,EAASlL,OAAS,IACtCvI,EAAKoc,yBAA2B3I,EAAS/R,KAAI,SAAAmK,GACzC,MAAO,CACHC,SAAUD,EAAKC,SACf2Q,cAAe5Q,EAAKrH,KACpB+X,QAAS1Q,EAAK2Q,cAI1BjB,EAAoBvb,GACpBmb,GAAa,IAEXuB,EAAe,SAAClkB,GAClBkT,KAGEiR,EAAmB,SAACnkB,GACtBoT,KASJ,GANID,EAAMpD,OAAS,GACfoD,EAAMI,SAAQ,SAAAF,GACVoP,EAAa/b,KAAK,CAAE1G,MAAOqT,EAAKC,cAIpCf,EAAUxC,OAAS,EAAG,CACtB,IAAI7G,EAAM,IAAIuF,IAEd8D,EAAUgB,SAAQ,SAAAC,GACVtK,EAAIkb,IAAI5Q,EAASgN,cACjBtX,EAAI+G,IAAIuD,EAASgN,aAAjB,uBAAmCtX,EAAIuB,IAAI+I,EAASgN,eAApD,CAAmEhN,EAASC,gBAE5EvK,EAAI+G,IAAIuD,EAASgN,aAAc,CAAChN,EAASC,kBAGjD7M,QAAQC,IAAIqC,GAVU,qBAWGA,GAXH,IAWtB,2BAA8B,CAAC,IAAD,yBAApBC,EAAoB,KAAfnJ,EAAe,KAC1B4G,QAAQC,IAAIsC,EAAM,MAAQnJ,GAC1B+S,EAAQrM,KAAK,CACTsD,OAzIKuG,EAyIcpH,EAvI3B,8BACKoH,EACD,uBACI5L,MAAO,CAAEkJ,MAAO,SAChB4C,KAAK,uCACLyL,OAAO,SACPE,IAAI,uBAJR,UAsIIrJ,QAAS/S,EAAMkJ,KAAI,SAAAwH,GAAG,OAAI2L,GAAW3L,EAAK,WAf5B,+BAmB1B,IAAI2T,EAAc,kBAAC,KAAD,CAAQjU,KAAK,QAAQzP,KAAK,WAA1B,UAOlB,OANI+hB,GAAgC,KAAnBta,EAASF,SACtBmc,EAAe,oCAAE,kBAAC,KAAD,CAAQ1jB,KAAK,UAAU6c,MAAM,QAAQ5Z,QAAS,WAC3DwC,EAAQM,KAAK,CAAEJ,SAAU,yBAA0BuI,OAAQ,cAAgBH,EAAY/D,UAAY,aAAe+D,EAAYlE,SAAW,kBAAoBkE,EAAY+Q,iBAC1KhD,KAAM,kBAAC6H,GAAA,EAAD,MAAqBlU,KAAK,SAFlB,SAGb,kBAAC,KAAD,CAAQzL,MAAO,CAAE6I,WAAY,QAAU7M,KAAK,UAAU6c,MAAM,QAAQpN,KAAK,QAAQxM,QAAS,SAAA5D,GAAK,OAAIoG,EAAQM,KAAK,CAAEJ,SAAU,8BAA5H,0BAGJ,oCACI,kBAAC,GAAD,CAAgBqE,UAAW+D,EAAY/D,YACvC,6BACA,kBAAC,KAAD,uBAEA,kBAAC,KAAD,CACIjB,KAAMmZ,GAEN,kBAAC,KAAD,CAAKnN,OAAQ,IACT,kBAAC,KAAD,CAAKjR,KAAM,GACP,kBAAC,KAAKwE,KAAN,CAAWe,MAAM,KAAK1E,KAAK,MACvB,kBAAC,KAAD,CAAaA,KAAK,KAAKX,MAAO,CAAEC,MAAO,OAASY,YAAY,qBAGpE,kBAAC,KAAD,CAAKf,KAAM,GACP,kBAAC,KAAKwE,KAAN,CAAWe,MAAM,cAAc1E,KAAK,eAChC,kBAAC,KAAD,CAAaA,KAAK,cAAcX,MAAO,CAAEC,MAAO,OAASY,YAAY,8BAG7E,kBAAC,KAAD,CAAKf,KAAM,GACP,kBAAC,KAAKwE,KAAN,CAAWe,MAAM,SAAS1E,KAAK,UAC3B,kBAAC,KAAD,CAAaA,KAAK,SAASX,MAAO,CAAEC,MAAO,OAASY,YAAY,qBAGxE,kBAAC,KAAD,CAAKf,KAAM,GACP,kBAAC,KAAKwE,KAAN,CAAWe,MAAM,SAAS1E,KAAK,UAC3B,kBAAC,KAAD,CAAOA,KAAK,SAASX,MAAO,CAAEC,MAAO,OAASY,YAAY,wBAO1E,kBAAC,KAAD,4BAGA,kBAAC,KAAD,CAAMF,KAAK,yBAAyBoE,KAAMkZ,EAAcpZ,SAAUA,EAAUsT,aAAa,OACrF,kBAAC,KAAKC,KAAN,CAAWzX,KAAK,UACX,SAAC0X,EAAD,GAA8B,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACb,OACI,6BACKF,EAAO9T,KAAI,SAACiU,EAAOnH,GAAR,OACR,kBAAC,KAAD,CAAO7M,IAAKgU,EAAMhU,IAAKxE,MAAO,CAAEwI,QAAS,OAAQtI,aAAc,GAAKuY,MAAM,SACtE,kBAAC,KAAKnU,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,gBACnB+X,SAAU,CAACF,EAAME,SAAU,gBAC3BpT,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,4BAEnC,kBAAC,KAAD,CACI6J,SAAUqT,EACVlQ,kBAAkB,mCAClBC,yBAA0B,IAC1BtP,MAAO,CAAEC,MAAO,KAChBmO,QAASA,GAET,kBAAC,KAAM7E,OAAP,CAAckC,KAAK,UAAU5K,YAAY,eAGjD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,UACnB+X,SAAU,CAACF,EAAME,SAAU,UAC3BpT,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,qBAEnC,kBAAC,KAAD,CACIxB,YAAY,yBACZmL,YAAU,GACV,kBAAC,GAAD,CAAQ3Q,MAAM,SAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,WAGR,kBAAC,KAAKiJ,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,gBACnB+X,SAAU,CAACF,EAAME,SAAU,gBAC3BpT,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,6BAEnC,kBAAC,KAAD,OAEJ,kBAAC,KAAKiC,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,YACnB+X,SAAU,CAACF,EAAME,SAAU,cAE3B,kBAAC,KAAD,CAAO7X,YAAY,cAEvB,kBAAC8X,GAAA,EAAD,CACI1Z,QAAS,WACLsZ,EAAOC,EAAM7X,aAM7B,kBAAC,KAAK2D,KAAN,KACI,kBAAC,KAAD,CACItI,KAAK,SACLiD,QAAS,WACLqZ,KAEJM,OAAK,GAEL,kBAACb,GAAA,EAAD,MAPJ,wBAsBxB,6BACA,kBAAC,KAAD,wBACA,kBAAC,KAAD,CAAMpX,KAAK,0BAA0BoE,KAAMA,EAAMoT,aAAa,OAC1D,kBAAC,KAAKC,KAAN,CAAWzX,KAAK,UACX,SAAC0X,EAAD,GAA8B,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACb,OACI,6BACKF,EAAO9T,KAAI,SAAAiU,GAAK,OACb,kBAAC,KAAD,CAAOhU,IAAKgU,EAAMhU,IAAKxE,MAAO,CAAEwI,QAAS,OAAQtI,aAAc,GAAKuY,MAAM,SACtE,kBAAC,KAAKnU,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,YACnB+X,SAAU,CAACF,EAAME,SAAU,YAC3BpT,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,wBAEnC,kBAAC,KAAD,CACI6J,SAAUsT,EACVxf,MAAO,CAAEC,MAAO,KAChBmO,QAAS0P,EACTjd,YAAY,iBACZ4L,aAAc,SAACmT,EAAYlT,GAAb,OACwD,IAAlEA,EAAOrR,MAAMwf,cAAcjO,QAAQgT,EAAW/E,mBAI1D,kBAAC,KAAKvW,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,QACnB+X,SAAU,CAACF,EAAME,SAAU,QAC3BpT,MAAO,CAAC,CAAEtB,UAAU,MAEpB,kBAAC,KAAD,OAEJ,kBAAC,KAAKM,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,YACnB+X,SAAU,CAACF,EAAME,SAAU,cAE3B,kBAAC,KAAD,CAAO7X,YAAY,cAEvB,kBAAC8X,GAAA,EAAD,CACI1Z,QAAS,WACLsZ,EAAOC,EAAM7X,aAM7B,kBAAC,KAAK2D,KAAN,KACI,kBAAC,KAAD,CACItI,KAAK,SACLiD,QAAS,WACLqZ,KAEJM,OAAK,GAEL,kBAACb,GAAA,EAAD,MAPJ,oBAiBxB,kBAAC,KAAD,CACIhT,KAAMoZ,GAEN,kBAAC,KAAD,CAAKpN,OAAQ,IACT,kBAAC,KAAD,CAAKjR,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAK,SAAS0E,MAAM,WAC3B,kBAAC,KAAMwa,SAAP,UAKhB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAK/f,KAAM,GAAIb,QAAS4F,EAAUY,OAAQ,IACrCia,MC5UNI,GAzBS,WAAO,IAAD,EACM3gB,oBAAS,GADf,mBACrBC,EADqB,KACVC,EADU,OAEUF,mBAAS,IAFnB,mBAErB8R,EAFqB,KAERC,EAFQ,KAsB5B,MAAO,CAACD,EAAa7R,EAlBR,uCAAG,WAAOyD,GAAP,eAAA7D,EAAA,6DACdK,GAAa,GADC,SAGSuD,GAAaC,GAHtB,QAGRY,EAHQ,QAMe,OAAvBA,EAASsc,WACX7O,EAAezN,GAKjByN,EAAe,MAGjB7R,GAAa,GAfC,2CAAH,wDCHPqE,GAAWC,KAAXD,OAEFE,GAAS,CACXC,SAAU,CAAE/D,KAAM,GAClBgE,WAAY,CAAEhE,KAAM,KAGlBiE,GAAmB,CAErBC,SAAU,wBACVC,MAAO,CAEHC,MAAO,kCAEPC,OAAQ,sCAEZA,OAAQ,CAEJC,MAAO,+CAIT4b,GACF,kBAAC,KAAK1b,KAAN,CAAW3D,KAAK,SAASsf,SAAO,GAC5B,kBAAC,KAAD,CAAQ1T,aAAa,KAAKvM,MAAO,CAAEC,MAAO,KACtC,kBAAC,GAAD,CAAQ5E,MAAM,MAAd,OACA,kBAAC,GAAD,CAAQA,MAAM,MAAd,SAuGG6kB,GAlGM,SAAC,GAA0B,EAAxB1e,SAAyB,IAAfC,EAAc,EAAdA,QAAc,EACFqe,KADE,mBACrCrc,EADqC,KAC3BrE,EAD2B,KAChBwF,EADgB,KAG5C9C,qBAAU,WACqB,OAAvB2B,EAASsc,gBAA6CI,IAAvB1c,EAASsc,YACxC3d,KAAY,QAAY,CACpBC,QAAS,UACTC,YAAa,+CACbC,SAAU,IAEdd,EAAQM,KAAK,CAAEJ,SAAU,gBAAiBuI,OAAQ,cAAgBzG,EAASuC,UAAY,cAAgBvC,EAASsc,UAAY,6BAEjI,CAACtc,EAAUhC,IAkBd,OACI,oCACI,kBAAC,GAAD,CAASH,KAAMlC,IACf,kBAAC,KAAD,iBAAUwE,GAAV,CAAkBjD,KAAK,gBAAgBkE,SAnB9B,SAAAC,GAEb,IAAMC,EAAOD,EAASE,KAChBnC,EAAO,CACT,YAAekC,EAAKpE,KACpB,IAAOoE,EAAKkC,IACZ,WAAclC,EAAK+X,MACnB,cAAiB/X,EAAKqb,iBACtB,OAAUrb,EAAKmD,QACf,MAASnD,EAAKjJ,MACd,QAAWiJ,EAAKsb,QAChB,UAAatb,EAAKub,OAEtB1b,EAAW/B,IAMoDkB,iBAAkBA,KACzE,kBAAC,KAAKO,KAAN,CAAW3D,KAAM,CAAC,OAAQ,QAAS0E,MAAM,OAAOC,MAAO,CAAC,CAAEtB,UAAU,KAChE,kBAAC,KAAD,OAEJ,kBAAC,KAAKM,KAAN,CAAW3D,KAAM,CAAC,OAAQ,UAAW0E,MAAM,SAASC,MAAO,CAAC,CAAEtB,UAAU,KACpE,kBAAC,KAAD,CACInD,YAAY,gBACZmL,YAAU,GACV,kBAAC,GAAD,CAAQ3Q,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,UAAd,UACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,WAGR,kBAAC,KAAKiJ,KAAN,CAAW3D,KAAM,CAAC,OAAQ,SAAU0E,MAAM,QAAQC,MAAO,CAAC,CAAEtJ,KAAM,WAC9D,kBAAC,KAAD,OAEJ,kBAAC,KAAKsI,KAAN,CAAW3D,KAAM,CAAC,OAAQ,OAAQ0E,MAAM,MAAMC,MAAO,CAAC,CAAEtJ,KAAM,SAAUuJ,IAAK,EAAGC,IAAK,MACjF,kBAAC,KAAD,OAEJ,kBAAC,KAAKlB,KAAN,CAAW3D,KAAM,CAAC,OAAQ,SAAU0E,MAAM,eAAeC,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,qCACxF,kBAAC,KAAD,CAAOke,YAAaP,GAAqBhgB,MAAO,CAAEC,MAAO,WAE7D,kBAAC,KAAKqE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,oBAAqB0E,MAAM,4BACjD,kBAAC,KAAD,CAAOkb,YAAaP,GAAqBhgB,MAAO,CAAEC,MAAO,WAE7D,kBAAC,KAAKqE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,WAAY0E,MAAM,WACxC,kBAAC,KAAMwa,SAAP,OAEJ,kBAAC,KAAKvb,KAAN,CAAW3D,KAAM,CAAC,OAAQ,SAAU0E,MAAM,SACtC,kBAAC,KAAD,CACIkH,aAAa,QACb1L,YAAY,eACZmL,YAAU,GACV,kBAAC,GAAD,CAAQ3Q,MAAM,SAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,MAAd,MACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,aACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,eAGR,kBAAC,KAAKiJ,KAAN,CAAW3D,KAAM,CAAC,OAAQ,WAAY0E,MAAM,WACxC,kBAAC,KAAD,CACIkH,aAAa,QACb1L,YAAY,iBACZmL,YAAU,GACV,kBAAC,GAAD,CAAQ3Q,MAAM,SAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,MAAd,QAGR,kBAAC,KAAKiJ,KAAN,CAAW3D,KAAM,CAAC,OAAQ,SAAU0E,MAAM,cACtC,kBAAC,KAAD,CAAQxE,YAAY,qBAChB,kBAAC,GAAD,CAAQxF,MAAM,WAAd,WACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,aACA,kBAAC,GAAD,CAAQA,MAAM,YAAd,cAGR,kBAAC,KAAKiJ,KAAN,CAAWR,WAAU,2BAAOF,GAAOE,YAAd,IAA0B2B,OAAQ,KACnD,kBAAC,KAAD,CAAQzJ,KAAK,UAAUyP,KAAK,QAAQ/F,SAAS,UAA7C,c,UC1Hd8a,GAAe,CACjBxX,OAAQ,QACR9H,MAAO,OACPuf,WAAY,QACZpE,UAAW,SACXpb,WAAY,UACZ6H,SAAU,QAuBC4X,GApBI,WACf,OACI,kBAAC,KAAD,CAAUC,UAAQ,GACd,6BACI,wBAAI3gB,MAAOwgB,IAAX,0BAEJ,6BACI,wBAAIxgB,MAAOwgB,IAAX,0FAGJ,6BACI,wBAAIxgB,MAAOwgB,IAAX,uGAEJ,6BACI,wBAAIxgB,MAAOwgB,IAAX,qE,UCTDI,GAdiB,WAAO,IAAD,EACRzhB,oBAAS,GADD,mBAC7BoE,EAD6B,KACrBC,EADqB,KAWpC,MAAO,CAACD,EARK,uCAAG,WAAOV,GAAP,SAAA7D,EAAA,sEACSoO,GAAqBvK,GAD9B,OAGG,YAHH,QAIZW,GAAU,GAJE,2CAAH,wDCaAqd,GAhBsB,WAAO,IAAD,EACF1hB,mBAAS,MADP,mBAChCyO,EADgC,KACrBC,EADqB,KAavC,MAAO,CAACD,EAVK,uCAAG,WAAOF,GAAP,eAAA1O,EAAA,sEACWyO,GAA0BC,GADrC,OACNjK,EADM,OAGRoK,EADApK,GAIgB,MANR,2CAAH,wDCETC,GAAWC,KAAXD,OACAmc,GAAalgB,KAAbkgB,SACFjc,GAAS,CACXC,SAAU,CAAE/D,KAAM,GAClBgE,WAAY,CAAEhE,KAAM,IAGlBiE,GAAmB,CAErBC,SAAU,wBACVC,MAAO,CAEHC,MAAO,kCAEPC,OAAQ,sCAEZA,OAAQ,CAEJC,MAAO,+CAIT0c,GC9BmC,CAAC,UACtC,MACA,SACA,MACA,SACA,UACA,OACA,YACA,QACA,OACA,MACA,SACA,WACA,OACA,OACA,SACA,QACA,MACA,OACA,UACA,UACA,OACA,QACA,cACA,aACA,MACA,QACA,SACA,OACA,OACA,QDA4Cvc,KAAI,SAAAwc,GAAwB,OAAI,kBAAC,GAAD,CAAQvc,IAAKuc,GAA2BA,MA8PzGC,GA7PQ,SAAC,GAA2B,IAAzBxf,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC5B4P,EAAQ,EADkC,EAE/BC,KAAKC,UAAbxM,EAFuC,sBAGtB5F,mBAAS,IAHa,mBAGvCwB,EAHuC,KAGjC2Y,EAHiC,OAIpBna,mBAAS,CAAC,UAAW,UAAW,UAJZ,mBAIvCoa,EAJuC,KAIhCC,EAJgC,OAKjBoH,KALiB,mBAKvCrd,EALuC,KAK/BqB,EAL+B,OAMRzF,oBAAS,GAND,mBAMvC8hB,EANuC,KAM1BC,EAN0B,OAORL,KAPQ,mBAOvCM,EAPuC,KAOvBC,EAPuB,KAQxCrX,EAAcC,KAAYC,MAAMzI,EAAS0I,QAC/CpI,qBAAU,WACkB,QAApBiI,EAAYsX,MAA4C,MAA1BtX,EAAY2D,YAC1C0T,EAAYrX,EAAY2D,cAE7B,IACHzL,QAAQC,IAAI,wBAAyBqB,GAClB,GAAf0d,GAAkC,GAAV1d,IACxBnB,KAAY,QAAY,CACpBC,QAAS,UACTC,YAAa,8BACbC,SAAU,IA0DdwC,EAAKqN,eAAe,CAChBpN,KAAM,CACF0I,WAAY,KACZoB,aAAc,GACdwS,YAAa,GACbC,QAAS,EACTC,QAAS,GACTtI,SAAU,GACVuI,KAAM,GACNC,aAAc,EACdC,MAAO,KACP3S,UAAW,EACX4S,aAAc,eAnEtBV,GAAe,IAEG,MAAlBC,GACApc,EAAKqN,eAAe,CAChBpN,KAAM,CACF0I,WAAYyT,EAAezT,WAC3BoB,aAAcqS,EAAerS,aAC7BwS,YAAaH,EAAeG,YAC5BC,QAASJ,EAAeI,QACxBM,QAASV,EAAeW,WACxBC,cAAeZ,EAAeY,cAC9BP,QAASL,EAAeK,QACxBtI,SAAUiI,EAAejI,SACzBuI,KAAMN,EAAeM,KACrBC,aAAcP,EAAeO,aAC7BC,MAAOR,EAAeQ,MACtB3S,UAAWmS,EAAenS,UAC1BgT,cAAeb,EAAec,eAC9BC,IAAKf,EAAee,IACpBC,aAAchB,EAAegB,aAC7BP,aAAc,eA0B1B,SAASnI,EAAaC,GAElBJ,EAAQI,EAAMnC,OAAOlc,OAEzB,SAASse,IACLL,EAAQ,IACRE,EAAS,GAAD,oBAAKD,GAAL,CAAY5Y,GAAI,mBAAgB0Q,QAmB5C,OACI,oCACI,kBAAC,KAAD,CAAQpS,QAAS,WACbwC,EAAQM,KAAK,CAAEJ,SAAU,2BAC1B3F,KAAK,SAAS8b,KAAM,kBAACC,GAAA,EAAD,OAFvB,gBAGA,kBAAC,KAAD,CAAQ/b,KAAK,SAASiD,QAAS,WAC3BwC,EAAQM,KAAK,CAAEJ,SAAU,2BAC1B3B,MAAO,CAAE6I,WAAY,QAAUiP,KAAM,kBAACE,GAAA,EAAD,OAFxC,mBAGA,kBAAC,KAAD,CAAQhc,KAAK,SAASgE,MAAO,CAAE6I,WAAY,QAAUiP,KAAM,kBAACE,GAAA,EAAD,OAA3D,mBACA,6BAAM,6BAAM,6BACZ,kBAAC,KAAD,eAAMjT,KAAMA,GAAUnB,GAAtB,CAA8BjD,KAAK,gBAAgBkE,SAzD1C,SAAAC,GACb,IAAMC,EAAOD,EAASE,KACtB/C,QAAQC,IAAI6C,GACZ,IAAMlC,EAAO,CACTiM,aAAc/J,EAAK+J,aACnBwS,YAAavc,EAAKuc,YAClBC,QAASxc,EAAKwc,QACdC,QAASzc,EAAKyc,QACdtI,SAAUnU,EAAKmU,SACfuI,KAAM1c,EAAK0c,KACXC,aAAc3c,EAAK2c,aACnBC,MAAO5c,EAAK4c,MACZ3S,UAAWjK,EAAKiK,UAChB4S,aAAc,aAGM,QAApB7X,EAAYsX,MAA4C,MAA1BtX,EAAY2D,aAC1C7K,EAAI,WAAiBkH,EAAY2D,YAErCwT,GAAe,GACftc,EAAW/B,IAqCgEkB,iBAAkBA,KACrF,kBAAC,KAAD,CAAKgN,OAAQ,IACT,kBAAC,KAAD,CAAKjR,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,gBAAiB0E,MAAM,gBAAgBC,MAAO,CAAC,CAAEtB,UAAU,KACjF,kBAAC,KAAD,QAGR,kBAAC,KAAD,CAAKlE,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,eAAgB0E,MAAM,gBAC5C,kBAAC,KAAD,QAGR,kBAAC,KAAD,CAAKvF,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,WAAY0E,MAAM,WAAWC,MAAO,CAAC,CAAEtJ,KAAM,SAAUuJ,IAAK,EAAGC,IAAK,OAC1F,kBAAC,KAAD,CAAaxF,MAAO,CAAEC,MAAO,YAarC,kBAAC,KAAD,CAAKH,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,WAAY0E,MAAM,WACxC,kBAACwa,GAAD,CAAUuC,KAAM,MAGxB,kBAAC,KAAD,CAAKtiB,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,YAAa0E,MAAM,YACzC,kBAAC,KAAD,CACIrF,MAAO,CAAEC,MAAO,QAChBY,YAAY,kBACZ+Y,eAAgB,SAAAC,GAAI,OAChB,6BACKA,EACD,kBAAC,KAAD,CAAS7Z,MAAO,CAAE4I,OAAQ,WAC1B,yBAAK5I,MAAO,CAAEwI,QAAS,OAAQsR,SAAU,SAAU7Q,QAAS,IACxD,kBAAC,KAAD,CAAOjJ,MAAO,CAAE+Z,KAAM,QAAU1e,MAAOsF,EAAMG,SAAU2Y,IACvD,uBACIzZ,MAAO,CAAE+Z,KAAM,OAAQ9Q,QAAS,MAAOT,QAAS,QAASwR,OAAQ,WACjE/a,QAAS0a,GAET,kBAAC5B,GAAA,EAAD,MAJJ,iBAUXwB,EAAMhV,KAAI,SAAAuL,GAAI,OACX,kBAAC,GAAD,CAAQtL,IAAKsL,GAAOA,SAKpC,kBAAC,KAAD,CAAKhQ,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,QAAS0E,MAAM,QACrC,kBAAC,KAAD,CACIiH,YAAU,EACVzL,YAAY,2BAA2Bb,MAAO,CAAEC,MAAO,QACvDuM,iBAAiB,WACjBC,aAAc,SAAC7M,EAAO8M,GAAR,OACVA,EAAOvR,SAASwR,cAAcC,QAAQhN,EAAM+M,gBAAkB,IAEjEmU,MAIb,kBAAC,KAAD,CAAKhhB,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,SAAU0E,MAAM,SACtC,kBAAC,KAAD,CAAQ1E,KAAK,OAAO5E,OAAO,aAAasmB,SAAS,WAC7C,kBAAC,KAAD,CAAQvK,KAAM,kBAACwK,GAAA,EAAD,OAAd,sBAIZ,kBAAC,KAAD,CAAKxiB,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,gBAAiB0E,MAAM,gBAAgBC,MAAO,CAAC,CAAEtJ,KAAM,SAAUuJ,IAAK,EAAGC,IAAK,OACpG,kBAAC,KAAD,CAAaxF,MAAO,CAAEC,MAAO,YAGrC,kBAAC,KAAD,CAAKH,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,aAAc0E,MAAM,aAAaC,MAAO,CAAC,CAAEtB,UAAU,KAC3E,kBAAC,KAAD,CAAahE,MAAO,CAAEC,MAAO,aAgDzC,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKH,KAAM,GAAIE,MAAO,CAAEqc,UAAW,UAC/B,kBAAC,KAAK/X,KAAN,CAAWR,WAAU,2BAAOF,GAAOE,YAAd,IAA0B2B,OAAQ,KACnD,kBAAC,KAAD,CAAQzJ,KAAK,UAAU0J,SAAS,UAAhC,8BErIb6c,GAjGS,SAAC,GAA0B,EAAxB/gB,SAAyB,IAAfC,EAAc,EAAdA,QAC7ByB,EAAO,GACL6P,EAAU,CACZ,CACInH,MAAO,OACP+F,UAAW,OACXnN,IAAK,OACL4O,OAAQ,SAAAjM,GAAI,OAAI,2BAAIA,KAExB,CACIyE,MAAO,WACP+F,UAAW,WACXnN,IAAK,WACL2S,QAAS,CACL,CACIhQ,KAAM,UACN9L,MAAO,WAEX,CACI8L,KAAM,cACN9L,MAAO,eAGf4d,SAAU,SAAC5d,EAAOuW,GAAR,OAAsD,IAAnCA,EAAOsH,SAAStM,QAAQvR,IACrD2X,OAAQ,SAAChU,EAAGkU,GAAJ,OAAUlU,EAAEka,SAAS9N,OAAS8H,EAAEgG,SAAS9N,QACjD+N,eAAgB,CAAC,YAErB,CACIvN,MAAO,iBACP+F,UAAW,gBACXnN,IAAK,iBAET,CACIoH,MAAO,gBACP+F,UAAW,eACXnN,IAAK,gBAET,CACIoH,MAAO,eACP+F,UAAW,cACXnN,IAAK,eAET,CACIoH,MAAO,cACP+F,UAAW,aACXnN,IAAK,cAET,CACIoH,MAAO,QACP+F,UAAW,QACXnN,IAAK,SAET,CACIoH,MAAO,SACPpH,IAAK,SACL4O,OAAQ,SAACjM,EAAMyK,GAAP,OACJ,kBAAC,KAAD,CAAOnG,KAAK,UACR,uBAAGxM,QAAS,WACRwC,EAAQM,KAAK,CAAEJ,SAAU,yBAA0BuI,OAAQ,+BAAsC0H,EAAOjR,SAD5G,eAGA,oCACA,uBAAG1B,QAAS,WACRwC,EAAQM,KAAK,CAAEJ,SAAU,uBAAwBuI,OAAQ,yBAAgC0H,EAAOlE,eADpG,QAGA,yCAhE+B,EAqEG8U,KArEH,mBAqExC5U,EArEwC,KAqElBW,GArEkB,WA0E/C,GAJAzM,qBAAU,WACNyM,MACD,IAECX,EAAUxC,OAAS,EAAG,CACtB,IAAM4K,EAAW,GACjBpI,EAAUgB,SAAQ,SAACC,EAAUwC,GACzB2E,EAASjU,KAAK,CACVyC,IAAK6M,EACL1Q,KAAMkO,EAASC,aACfpB,WAAYmB,EAASnB,WACrBwL,SAAUrK,EAASqK,SACnBuJ,cAAe5T,EAASmT,cACxBU,aAAc7T,EAASG,UACvBsS,YAAazS,EAASyS,YACtBQ,WAAYjT,EAASgT,aAG7B3e,EAAI,UAAO8S,GAEf,OACI,oCACI,kBAAC,KAAD,CAAOjD,QAASA,EAASO,WAAYpQ,MC/GlCyf,GAnBgB,WAAO,IAAD,EACDxjB,oBAAS,GADR,mBAC5BC,EAD4B,KACjBC,EADiB,OAEEF,mBAAS,IAFX,mBAE5ByO,EAF4B,KAEjBC,EAFiB,KAgBnC,MAAO,CAACD,EAAWxO,EAZN,uCAAG,4BAAAJ,EAAA,6DACdK,GAAa,GADC,SpC0CPyD,KACFgD,IADE,UACKrD,GAAIC,IADT,6CAEFM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,KoC9CD,OAGRK,EAHQ,OAKVoK,EADApK,GAGc,IAElBpE,GAAa,GATC,2CAAH,uDCcAujB,GAlBgB,WAAO,IAAD,EACPzjB,oBAAS,GADF,mBAC5BoE,EAD4B,KACpBC,EADoB,KAenC,MAAO,CAACD,EAZK,uCAAG,WAAOV,GAAP,eAAA7D,EAAA,sEACSuO,GAAoB1K,GAD7B,QACRY,EADQ,QAIY,YAApBA,EAASF,QACXC,GAAU,GAGZA,GAAU,GARE,2CAAH,wDCmJAqf,GAlHO,SAAC,GAA0B,EAAxBrhB,SAAyB,IAAfC,EAAc,EAAdA,QAC3ByB,EAAO,GACL6P,EAAU,CACZ,CACInH,MAAO,cACP+F,UAAW,gBACXnN,IAAK,YACL4O,OAAQ,SAAAjM,GAAI,OAAI,2BAAIA,KAExB,CACIyE,MAAO,aACP+F,UAAW,YACXnN,IAAK,YACL4O,OAAQ,SAAAjM,GAAI,OAAI,2BAAIA,KAExB,CACIyE,MAAO,gBACP+F,UAAW,eACXnN,IAAK,gBAET,CACIoH,MAAO,WACP+F,UAAW,WACXnN,IAAK,YAET,CACIoH,MAAO,QACP+F,UAAW,QACXnN,IAAK,SAET,CACIoH,MAAO,eACP+F,UAAW,cACXnN,IAAK,eAET,CACIoH,MAAO,SACPpH,IAAK,SACLmN,UAAW,SACXyB,OAAQ,SAAAuH,GAAI,OACR,oCACKA,EAAKpW,KAAI,SAAAqW,GACN,OACI,kBAAC,KAAD,CAAK1Z,MAAM,QAAQsD,IAAKoW,GACnBA,EAAIC,qBAO7B,CACIjP,MAAO,SACPpH,IAAK,SACL4O,OAAQ,SAACjM,EAAMyK,GAAP,OACJ,kBAAC,KAAD,CAAOnG,KAAK,UACR,uBAAGxM,QAAS,WACRwC,EAAQM,KAAK,CAAEJ,SAAU,yBAA0BuI,OAAQ,8BAAqC0H,EAAOkR,oBAD3G,QAGA,uBAAG7jB,QAAS,kBAqB5B,SAA6B2S,GACzB,IAAM/O,EAAO,CACTigB,gBAAiBlR,EAAOkR,gBACxBX,aAAc,KACdY,UAAW,KACXC,UAAW,KAEXC,aAAc,KACdC,IAAK,KACLC,eAAgB,MAEpBC,EAAuBvgB,GAhCO0K,CAAoBqE,KAAtC,cA3D6B,EAmEe+Q,KAnEf,mBAmEtCU,EAnEsC,KAmEXC,GAnEW,aAoEJV,KApEI,mBAoEtCrf,EApEsC,KAoE9B6f,EApE8B,KA2G7C,OAtCAthB,qBAAU,WACFyB,GACAnB,KAAY,QAAY,CACpBC,QAAS,UACTC,YAAa,sCACbC,SAAU,IAGlB+gB,MACD,IAeCD,EAAejY,OAAS,IACxBlI,EAAOmgB,EAAe9e,KAAI,SAACgf,EAAOlS,GAC9B,MAAO,CACH7M,IAAK6M,EACLyR,gBAAiBS,EAAMT,gBACvBC,UAAY,IAAI/a,KAAKub,EAAMR,WAAYpX,eACvCsX,aAAcM,EAAMN,aACpBO,SAAUD,EAAMpB,aAChBsB,MAAOF,EAAMP,UAEbzf,OAAQ,CAAC,qBAKjB,oCACI,kBAAC,KAAD,CAAOwP,QAASA,EAASO,WAAYpQ,M,UC7HlCwgB,GApBY,WAAO,IAAD,EACGvkB,oBAAS,GADZ,mBACxBC,EADwB,KACbC,EADa,OAEMF,mBAAS,IAFf,mBAExByO,EAFwB,KAEbC,EAFa,KAiB/B,MAAO,CAACD,EAAWxO,EAbN,uCAAG,4BAAAJ,EAAA,6DACdK,GAAa,GADC,SvCmDPyD,KACFgD,IADE,UACKrD,GAAIC,IADT,wCAEFM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,KuCvDD,OAGRK,EAHQ,OAKVoK,EADApK,GAIc,IAElBpE,GAAa,GAVC,2CAAH,uDCcAskB,GAlBc,WAAO,IAAD,EACLxkB,oBAAS,GADJ,mBAC1BoE,EAD0B,KAClBC,EADkB,KAejC,MAAO,CAACD,EAZK,uCAAG,WAAOV,GAAP,eAAA7D,EAAA,sEACSsO,GAAkBzK,GAD3B,QACRY,EADQ,QAIY,YAApBA,EAASF,QACXC,GAAU,GAGZA,GAAU,GARE,2CAAH,wDCaAogB,GAhBoB,WAAO,IAAD,EACAzkB,mBAAS,MADT,mBAC9ByO,EAD8B,KACnBC,EADmB,KAarC,MAAO,CAACD,EAVK,uCAAG,WAAOF,GAAP,eAAA1O,EAAA,sEzCiCoB8jB,EyChCepV,EzCiC5C5K,KACFgD,IAAI,UAAGrD,GAAIC,IAAP,gEAA2EogB,GAC/E9f,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GACH,OAAOA,KyCtCC,OACNK,EADM,OAGRoK,EADApK,GAIgB,MANR,iCzCiCmB,IAACqf,IyCjCpB,OAAH,wDCGTpf,GAAWC,KAAXD,OAEFE,IADejE,KAAbkgB,SACO,CACXhc,SAAU,CAAE/D,KAAM,GAClBgE,WAAY,CAAEhE,KAAM,KAGlBiE,GAAmB,CAErBC,SAAU,wBACVC,MAAO,CAEHC,MAAO,kCAEPC,OAAQ,sCAEZA,OAAQ,CAEJC,MAAO,+CAyWAyf,GArWU,SAAC,GAA2B,IAAzBriB,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC5ByM,EAAc,IAAIpE,IACpBsE,EAAU,GACR0V,EAAkB,GAIpBzS,EAAQ,EAPoC,EAQlBC,KAAKC,UAA5BwS,EARyC,sBAStBzS,KAAKC,UAAxByS,EATyC,sBAUxB7kB,mBAAS,IAVe,mBAUzCwB,EAVyC,KAUnC2Y,EAVmC,OAWtBna,mBAAS,CAAC,aAAc,kBAXF,mBAWzCoa,EAXyC,KAWlCC,EAXkC,OAYGkK,KAZH,mBAYzCO,EAZyC,KAYlBC,GAZkB,WAa1Cna,EAAcC,KAAYC,MAAMzI,EAAS0I,QAbC,EAcEsY,KAdF,mBAczC5U,EAdyC,KAcnBW,GAdmB,aAeToV,KAfS,mBAezCpgB,EAfyC,KAejC4gB,EAfiC,OAgBEP,KAhBF,mBAgBzCQ,EAhByC,KAgB5BC,EAhB4B,KAkBhDviB,qBAAU,WACNyM,IACA2V,IACI3gB,GACAnB,KAAY,QAAY,CACpBC,QAAS,UACTC,YAAa,sCACbC,SAAU,IAGM,QAApBwH,EAAYsX,MAAiD,MAA/BtX,EAAY+Y,iBAC1CuB,EAA2Bta,EAAY+Y,mBAE5C,IAGgB,MAAfsB,IACAniB,QAAQC,IAAIkiB,GACZL,EAAoB3R,eAAe,CAC/BpN,KAAM,CACFmd,aAAciC,EAAYjC,aAE1Ba,UAAWoB,EAAYpB,UAEvBE,IAAKkB,EAAYlB,QAIzBe,EAAU7Y,OAAS,GACnB6Y,EAAUrV,SAAQ,SAAA4U,GACdM,EAAgB/hB,KAAK,CAAE1G,MAAOmoB,EAASrB,aAAc9c,MAAOme,EAASrB,kBAGzEvU,EAAUxC,OAAS,GACnBwC,EAAUgB,SAAQ,SAAAC,GACdT,EAAQrM,KAAK,CAAE1G,MAAOwT,EAASC,aAAczJ,MAAOwJ,EAASC,eAC7DZ,EAAY5C,IAAIuD,EAASC,aAAcD,MAGvB,YAApB9E,EAAYsX,MAEZ2C,EAAgB5R,eAAe,CAC3BkM,MAAO,CAAC,CACJgG,YAAava,EAAY+E,aACzBK,SAAU,EACVsS,KAAM,GACN8C,aAAc,GACdC,YAAa,GACb3C,QAAS,GACT7R,SAAU,GACVkS,IAAK,OAIjB,IAAMrd,EAAW,SAAAC,GACb,IAAM2f,EAAkBV,EAAoB1F,iBAAiBrZ,KAEvDnC,EAAO,CACTigB,gBAAiB/Y,EAAY+Y,gBAC7BX,aAAcsC,EAAgBtC,aAC9BY,UAAW0B,EAAgB1B,UAC3BC,UAAWyB,EAAgBzB,UAE3BC,aAAcwB,EAAgBxB,aAC9BC,IAAKuB,EAAgBvB,IACrBC,eAAgB,IAEduB,EAAcV,EAAgB3F,iBAAiBC,MAClC,MAAfoG,GAAuBA,EAAYtZ,OAAS,GAC5CsZ,EAAY9V,SAAQ,SAAAxS,GAChB,IAAMyS,EAAWX,EAAYpI,IAAI1J,EAAQkoB,aACzCzhB,EAAKsgB,eAAephB,KAAK,CACrB4iB,UAAW,KACX7B,gBAAiB/Y,EAAY+Y,gBAC7BpV,WAAYmB,EAASnB,WACrB4W,YAAaloB,EAAQkoB,YACrBE,YAAapoB,EAAQooB,YACrBrV,SAAU/S,EAAQ+S,SAClBsS,KAAMrlB,EAAQqlB,KACd8C,aAAcnoB,EAAQmoB,aACtBvU,SAAU5T,EAAQ4T,SAClBkS,IAAK9lB,EAAQ8lB,SAIzBiC,EAAqBthB,IAEzB,SAAS4W,EAAaC,GAElBJ,EAAQI,EAAMnC,OAAOlc,OAEzB,SAASse,IACLL,EAAQ,IACRE,EAAS,GAAD,oBAAKD,GAAL,CAAY5Y,GAAI,mBAAgB0Q,QAG5C,IAAMuT,EAAkB,SAACvpB,KAQzB,OACI,oCACI,kBAAC,KAAD,CAAQ4D,QAAS,WACbwC,EAAQM,KAAK,CAAEJ,SAAU,6BAC1B3F,KAAK,SAASgE,MAAO,CAAE6I,WAAY,QAAUiP,KAAM,kBAACE,GAAA,EAAD,OAFtD,iBAGA,kBAAC,KAAD,CAAQ/Y,QAAS,WACbwC,EAAQM,KAAK,CAAEJ,SAAU,2BAC1B3F,KAAK,SAASgE,MAAO,CAAE6I,WAAY,QAAUiP,KAAM,kBAACE,GAAA,EAAD,OAFtD,iBAGA,6BAAM,6BAAM,6BACZ,kBAAC,KAAD,eAAMjT,KAAMgf,GAA0BngB,GAAtC,CAA8CjD,KAAK,gBAAgBkE,SAAUA,EAAUd,iBAAkBA,KACrG,kBAAC,KAAD,CAAKgN,OAAQ,IACT,kBAAC,KAAD,CAAKjR,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,OAAQ0E,MAAM,OACpC,kBAAC,KAAD,QAGR,kBAAC,KAAD,CAAKvF,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,QAAS0E,MAAM,UACrC,kBAAC,KAAD,CACIxE,YAAY,SACZmL,YAAU,GACV,kBAAC,GAAD,CAAQ3Q,MAAM,eAAd,gBACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,aACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,iBAKhB,kBAAC,KAAD,CAAK0V,OAAQ,IACT,kBAAC,KAAD,CAAKjR,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,gBAAiB0E,MAAM,iBAAiBC,MAAO,CAAC,CAAEtB,UAAU,KAClF,kBAAC,KAAD,CACIkI,SApCH,SAAC7Q,KAqCEgU,kBAAkB,mCAClBC,yBAA0B,IAC1BtP,MAAO,CAAEC,MAAO,QAChBmO,QAAS0V,GAET,kBAAC,KAAMva,OAAP,CAAckC,KAAK,UAAU5K,YAAY,qBAIrD,kBAAC,KAAD,CAAKf,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,gBAAiB0E,MAAM,iBAC7C,kBAAC,KAAD,CAAYrF,MAAO,CAAEC,MAAO,YAGpC,kBAAC,KAAD,CAAKH,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,YAAa0E,MAAM,kBACzC,kBAAC,KAAD,CAAOrF,MAAO,CAAEC,MAAO,YAG/B,kBAAC,KAAD,CAAKH,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,aAAc0E,MAAM,cAC1C,kBAAC,KAAD,CAAYrF,MAAO,CAAEC,MAAO,YAGpC,kBAAC,KAAD,CAAKH,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,aAAc0E,MAAM,cAC1C,kBAAC,KAAD,CACIrF,MAAO,CAAEC,MAAO,QAChBY,YAAY,eACZ+Y,eAAgB,SAAAC,GAAI,OAChB,6BACKA,EACD,kBAAC,KAAD,CAAS7Z,MAAO,CAAE4I,OAAQ,WAC1B,yBAAK5I,MAAO,CAAEwI,QAAS,OAAQsR,SAAU,SAAU7Q,QAAS,IACxD,kBAAC,KAAD,CAAOjJ,MAAO,CAAE+Z,KAAM,QAAU1e,MAAOsF,EAAMG,SAAU2Y,IACvD,uBACIzZ,MAAO,CAAE+Z,KAAM,OAAQ9Q,QAAS,MAAOT,QAAS,QAASwR,OAAQ,WACjE/a,QAAS0a,GAET,kBAAC5B,GAAA,EAAD,MAJJ,iBAUXwB,EAAMhV,KAAI,SAAAuL,GAAI,OACX,kBAAC,GAAD,CAAQtL,IAAKsL,GAAOA,WAkB5C,kBAAC,KAAD,CAAM/K,KAAMif,EAAiBrjB,KAAK,yBAAyBkE,SAAUA,EAAUsT,aAAa,OACxF,kBAAC,KAAKC,KAAN,CAAWzX,KAAK,UACX,SAAC0X,EAAD,GAA8B,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACb,OACI,6BACKF,EAAO9T,KAAI,SAAAiU,GAAK,OACb,kBAAC,KAAD,CAAOhU,IAAKgU,EAAMhU,IAAKxE,MAAO,CAAEwI,QAAS,OAAQtI,aAAc,GAAKuY,MAAM,SACtE,kBAAC,KAAKnU,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,eACnB+X,SAAU,CAACF,EAAME,SAAU,eAC3BpT,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,4BAEnC,kBAAC,KAAD,CACI6J,SAAU0Y,EACVvV,kBAAkB,mCAClBC,yBAA0B,IAC1BtP,MAAO,CAAEC,MAAO,KAChBmO,QAASA,GAET,kBAAC,KAAM7E,OAAP,CAAckC,KAAK,UAAU5K,YAAY,mBAGjD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,eACnB+X,SAAU,CAACF,EAAME,SAAU,iBAE3B,kBAAC,KAAD,CAAO1Y,MAAO,CAAE6kB,SAAU,KAAOhkB,YAAY,eAEjD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,YACnB+X,SAAU,CAACF,EAAME,SAAU,cAE3B,kBAAC,KAAD,CAAa1Y,MAAO,CAAE6kB,SAAU,KAAOhkB,YAAY,cAEvD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,QACnB+X,SAAU,CAACF,EAAME,SAAU,UAE3B,kBAAC,KAAD,CACI7X,YAAY,OACZmL,YAAU,GACV,kBAAC,GAAD,CAAQ3Q,MAAM,SAAd,UACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,SAGR,kBAAC,KAAKiJ,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,gBACnB+X,SAAU,CAACF,EAAME,SAAU,kBAE3B,kBAAC,KAAD,CAAa1Y,MAAO,CAAE6kB,SAAU,KAAOhkB,YAAY,mBAEvD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,cACnB+X,SAAU,CAACF,EAAME,SAAU,gBAE3B,kBAAC,KAAD,OAEJ,kBAAC,KAAKpU,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,YACnB+X,SAAU,CAACF,EAAME,SAAU,cAE3B,kBAAC,KAAD,CAAa1Y,MAAO,CAAE6kB,SAAU,KAAOhkB,YAAY,cAEvD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,OACnB+X,SAAU,CAACF,EAAME,SAAU,SAE3B,kBAAC,KAAD,CAAa1Y,MAAO,CAAE6kB,SAAU,KAAOhkB,YAAY,SAEvD,kBAAC8X,GAAA,EAAD,CACI1Z,QAAS,WACLsZ,EAAOC,EAAM7X,aAM7B,kBAAC,KAAK2D,KAAN,KACI,kBAAC,KAAD,CACItI,KAAK,SACLiD,QAAS,WACLqZ,KAEJM,OAAK,GAEL,kBAACb,GAAA,EAAD,MAPJ,qBAcpB,kBAAC,KAAD,CAAKhH,OAAQ,IACT,kBAAC,KAAD,CAAKjR,KAAM,GACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,YAAa0E,MAAM,aACzC,kBAAC,KAAD,CAAarF,MAAO,CAAEC,MAAO,YAGrC,kBAAC,KAAD,CAAKH,KAAM,GACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,iBAAkB0E,MAAM,kBAC9C,kBAAC,KAAD,CAAarF,MAAO,CAAEC,MAAO,YAGrC,kBAAC,KAAD,CAAKH,KAAM,GACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,eAAgB0E,MAAM,gBAC5C,kBAAC,KAAD,CAAarF,MAAO,CAAEC,MAAO,aAKzC,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKH,KAAM,GAAIE,MAAO,CAAEqc,UAAW,UAC/B,kBAAC,KAAK/X,KAAN,KACI,kBAAC,KAAD,CAAQtI,KAAK,UAAU0J,SAAS,UAAhC,QAGA,kBAAC,KAAD,CAAQ1F,MAAO,CAAE6I,WAAY,QAAU7M,KAAK,WAA5C,eCjXtB4H,IAFaD,KAAXD,OACa/D,KAAbkgB,SACO,CACXhc,SAAU,CAAE/D,KAAM,GAClBgE,WAAY,CAAEhE,KAAM,KAGlBiE,GAAmB,CAErBC,SAAU,wBACVC,MAAO,CAEHC,MAAO,kCAEPC,OAAQ,sCAEZA,OAAQ,CAEJC,MAAO,+CA8LA0gB,GA1LW,WACtB,IAAI1W,EAAU,GADc,EAGJjP,mBAAS,IAHL,gCAIFA,mBAAS,CAAC,aAAc,mBAJtB,mBAMtB0F,GANsB,UAMX,SAAAC,GACb,IAAMC,EAAOD,EAASE,KAGJD,EAAKpE,KACLoE,EAAKV,WACLU,EAAKE,WACLF,EAAKN,WACKM,EAAKG,qBACRH,EAAKI,kBACXJ,EAAKK,cAY5B,IAAMwf,EAAkB,SAACvpB,KAIzB,OACI,oCAGI,6BAAM,6BAAM,6BACZ,kBAAC,KAAD,iBAAUuI,GAAV,CAAkBjD,KAAK,gBAAgBkE,SAAUA,EAAUd,iBAAkBA,KACzE,kBAAC,KAAD,CAAKgN,OAAQ,IACT,kBAAC,KAAD,CAAKjR,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,aAAc0E,MAAM,iBAAiBC,MAAO,CAAC,CAAEtB,UAAU,KAC/E,kBAAC,KAAD,CACIqL,kBAAkB,mCAClBC,yBAA0B,IAC1BtP,MAAO,CAAEC,MAAO,SAEhB,kBAAC,KAAMsJ,OAAP,CAAckC,KAAK,UAAU5K,YAAY,eAIrD,kBAAC,KAAD,CAAKf,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,cAAe0E,MAAM,eAC3C,kBAAC,KAAD,CAAYrF,MAAO,CAAEC,MAAO,YAGpC,kBAAC,KAAD,CAAKH,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,eAAgB0E,MAAM,gBAC5C,kBAAC,KAAD,CAAOxE,YAAY,mBAG3B,kBAAC,KAAD,CAAKf,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,kBAAmB0E,MAAM,mBAC/C,kBAAC,KAAD,CAAOxE,YAAY,sBAG3B,kBAAC,KAAD,CAAKf,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,gBAAiB0E,MAAM,UAC7C,kBAAC,KAAD,CAAOxE,YAAY,oBAG3B,kBAAC,KAAD,CAAKf,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,YAAa0E,MAAM,YACzC,kBAAC,KAAMwa,SAAP,QAGR,kBAAC,KAAD,CAAK/f,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,WAAY0E,MAAM,WACxC,kBAAC,KAAMwa,SAAP,UAMhB,kBAAC,KAAD,CAAMlf,KAAK,yBAAyBkE,SAAUA,EAAUsT,aAAa,OACjE,kBAAC,KAAKC,KAAN,CAAWzX,KAAK,UACX,SAAC0X,EAAD,GAA8B,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACb,OACI,6BACKF,EAAO9T,KAAI,SAAAiU,GAAK,OACb,kBAAC,KAAD,CAAOhU,IAAKgU,EAAMhU,IAAKxE,MAAO,CAAEwI,QAAS,OAAQtI,aAAc,GAAKuY,MAAM,SACtE,kBAAC,KAAKnU,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,eACnB+X,SAAU,CAACF,EAAME,SAAU,eAC3BpT,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,4BAEnC,kBAAC,KAAD,CACI6J,SAAU0Y,EACVvV,kBAAkB,mCAClBC,yBAA0B,IAC1BtP,MAAO,CAAEC,MAAO,KAChBmO,QAASA,GAET,kBAAC,KAAM7E,OAAP,CAAckC,KAAK,UAAU5K,YAAY,mBAGjD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,YACnB+X,SAAU,CAACF,EAAME,SAAU,cAE3B,kBAAC,KAAD,CAAa1Y,MAAO,CAAE6kB,SAAU,KAAOhkB,YAAY,cAEvD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,OACnB+X,SAAU,CAACF,EAAME,SAAU,SAE3B,kBAAC,KAAD,CAAO1Y,MAAO,CAAE6kB,SAAU,KAAOhkB,YAAY,SAEjD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,OACnB+X,SAAU,CAACF,EAAME,SAAU,SAE3B,kBAAC,KAAD,CAAa1Y,MAAO,CAAE6kB,SAAU,KAAOhkB,YAAY,SAEvD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,iBACnB+X,SAAU,CAACF,EAAME,SAAU,mBAE3B,kBAAC,KAAD,CAAa1Y,MAAO,CAAE6kB,SAAU,KAAOhkB,YAAY,oBAEvD,kBAAC8X,GAAA,EAAD,CACI1Z,QAAS,WACLsZ,EAAOC,EAAM7X,aAM7B,kBAAC,KAAK2D,KAAN,KACI,kBAAC,KAAD,CACItI,KAAK,SACLiD,QAAS,WACLqZ,KAEJM,OAAK,GAEL,kBAACb,GAAA,EAAD,MAPJ,qBAcpB,kBAAC,KAAD,CAAKhH,OAAQ,IACT,kBAAC,KAAD,CAAKjR,KAAM,GACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,eAAgB0E,MAAM,gBAC5C,kBAAC,KAAD,CAAarF,MAAO,CAAEC,MAAO,aAIzC,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKH,KAAM,GAAIE,MAAO,CAAEqc,UAAW,UAC/B,kBAAC,KAAK/X,KAAN,CAAWoB,SAAS,UAChB,kBAAC,KAAD,CAAQ1J,KAAK,WAAb,QAGA,kBAAC,KAAD,CAAQA,KAAK,UAAUgE,MAAO,CAAE6I,WAAY,SAA5C,WAGA,kBAAC,KAAD,CAAQ7I,MAAO,CAAE6I,WAAY,QAAU7M,KAAK,WAA5C,eC3Kb+oB,GAxBQ,WAAO,IAAD,EACO5lB,oBAAS,GADhB,mBACpBC,EADoB,KACTC,EADS,OAECF,oBAAS,GAFV,mBAEpBoE,EAFoB,KAEZC,EAFY,KAqB3B,MAAO,CAACD,EAAQnE,EAjBH,uCAAG,WAAOyD,GAAP,eAAA7D,EAAA,6DACdK,GAAa,GADC,SAESgO,GAAaxK,GAFtB,QAERY,EAFQ,QAKY,YAApBA,EAASF,QACXC,GAAU,GAKZA,GAAU,GAGZnE,GAAa,GAdC,2CAAH,wDCgJA2lB,GA9IQ,WACnB,IAAM9hB,EAAO,GADY,EAEVoO,KAAKC,UAAbxM,EAFkB,sBAIeggB,KAJf,mBAIlBxhB,EAJkB,KAIVnE,EAJU,KAICwF,EAJD,OAK0B8e,KAL1B,mBAKlBO,EALkB,KAKK1V,GALL,WAOzBzM,qBAAU,WACFyB,IACAnB,KAAY,QAAY,CACpBC,QAAS,UACTC,YAAa,8BACbC,SAAU,IAEdgM,KAEqB,IAArB0V,EAAU7Y,QACVmD,MAGL,CAAChL,IACJ,IAgBMwP,EAAU,CACZ,CACInH,MAAO,OACP+F,UAAW,eACXoH,iBAAkB,UAClB/F,OAAQ,SAAChU,EAAGkU,GAAJ,OAAUlU,EAAE8P,aAAeoE,EAAEpE,eAEzC,CACIlD,MAAO,QACP+F,UAAW,SAEf,CACI/F,MAAO,eACP+F,UAAW,eAEf,CACI/F,MAAO,UACP+F,UAAW,WAEf,CACI/F,MAAO,SACPpH,IAAK,SACL4O,OAAQ,SAACjM,EAAMyK,GAAP,OACJ,kBAAC,KAAD,CAAOnG,KAAK,UACR,uBAAGxM,QAAS,kBAO5B,SAAsB2S,GAClB7M,EAAKqN,eAAe,CAChB,KAAQR,EAAOuQ,aACf,MAASvQ,EAAO1N,MAChB,MAAS0N,EAAOqT,YAChB,QAAWrT,EAAO1J,UAZOgd,CAAatT,KAA9B,QACA,yCA+BhB,OAhBIqS,EAAU7Y,OAAS,GACnB6Y,EAAUrV,SAAQ,SAAC4U,EAAUnS,GACzBnO,EAAKnB,KAAK,CACNyC,IAAK6M,EACL8T,WAAY3B,EAAS2B,WACrBhD,aAAcqB,EAASrB,aACvBje,MAAOsf,EAAStf,MAChB+gB,YAAazB,EAASyB,YACtB/c,QAASsb,EAAStb,aAS1B,oCACI,kBAAC,GAAD,CAAS5G,KAAMlC,IACf,kBAAC,KAAD,CAAM2F,KAAMA,EAAMpE,KAAK,mBAAmBiD,OAAO,SAASiB,SA3EjD,SAAAC,GACb,IAAMjC,EAAO,CACT,aAAgBiC,EAASnE,KACzB,MAASmE,EAASZ,MAClB,YAAeY,EAASgY,MACxB,QAAWhY,EAASoD,SAExBtD,EAAW/B,GACXkC,EAAKqN,eAAe,CAChB,KAAQ,GACR,MAAS,GACT,MAAS,GACT,QAAW,OAgEP,kBAAC,KAAK9N,KAAN,CACI3D,KAAK,OACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,+BAEnC,kBAAC,KAAD,CAAOyZ,OAAQ,kBAAClE,GAAA,EAAD,CAAczL,UAAU,wBAA0BtL,YAAY,mBAEjF,kBAAC,KAAKyD,KAAN,CACI3D,KAAK,QACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAO3B,QAAS,0BAEpC,kBAAC,KAAD,CAAOyZ,OAAQ,kBAAClE,GAAA,EAAD,CAAczL,UAAU,wBAA0BtL,YAAY,WAEjF,kBAAC,KAAKyD,KAAN,CACI3D,KAAK,QACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAO3B,QAAS,2BAEpC,kBAAC,KAAD,CAAOyZ,OAAQ,kBAAClE,GAAA,EAAD,CAAczL,UAAU,wBAA0BtL,YAAY,aAEjF,kBAAC,KAAKyD,KAAN,CACI3D,KAAK,UACL2E,MAAO,CAAC,CAAEtB,UAAU,EAAO3B,QAAS,+BAEpC,kBAAC,KAAD,CAAOyZ,OAAQ,kBAAClE,GAAA,EAAD,CAAczL,UAAU,wBAA0BtL,YAAY,aAEjF,kBAAC,KAAKyD,KAAN,CAAW2V,cAAc,IACpB,kBACG,kBAAC,KAAD,CACIje,KAAK,UACL0J,SAAS,SACTwU,UACKnV,EAAKoV,iBAAgB,IACtBpV,EAAKqV,iBAAiBjN,QAAO,qBAAG1M,OAAoB2K,UAAQA,QALpE,oBAaZ,6BAAM,6BAAM,6BACZ,kBAAC,KAAD,CAAO2H,QAASA,EAASO,WAAYpQ,EAAMpC,SA/CnD,SAAkBoW,EAAYC,EAASnE,EAAQnH,GAC3C5J,QAAQC,IAAI,SAAUgV,EAAYC,EAASnE,EAAQnH,QChGrDkH,GAAU,CACZ,CACInH,MAAO,iBACP+F,UAAW,QACXnN,IAAK,QACL4O,OAAQ,SAAAjM,GAAI,OAAI,2BAAIA,KAExB,CACIyE,MAAO,eACP+F,UAAW,cACXnN,IAAK,eAET,CACIoH,MAAO,uBACP+F,UAAW,aACXnN,IAAK,cAET,CACIoH,MAAO,eACP+F,UAAW,cACXnN,IAAK,eAET,CACIoH,MAAO,SACPpH,IAAK,SACLmN,UAAW,SACXyB,OAAQ,SAAAuH,GAAI,OACR,oCACKA,EAAKpW,KAAI,SAAAqW,GACN,OACI,kBAAC,KAAD,CAAK1Z,MAAM,QAAQsD,IAAKoW,GACnBA,EAAIC,qBAO7B,CACIjP,MAAO,SACPpH,IAAK,SACL4O,OAAQ,SAACjM,EAAMyK,GAAP,OACJ,kBAAC,KAAD,CAAOnG,KAAK,UACR,mCACA,uCAMVvI,GAAO,CACT,CACIsB,IAAK,IACLue,UAAW,GACXE,aAAc,GACdO,SAAU,GACVC,MAAO,GACPnT,YAAa,GACb/M,OAAQ,CAAC,SAEb,CACIiB,IAAK,IACLue,UAAW,GACXE,aAAc,GACdO,SAAU,GACVC,MAAO,GACPnT,YAAa,GACb/M,OAAQ,CAAC,SAGb,CACIiB,IAAK,IACLue,UAAW,GACXE,aAAc,GACdO,SAAU,GACVC,MAAO,GACPnT,YAAa,GACb/M,OAAQ,CAAC,UAaF6hB,GARI,WACf,OACI,oCACI,kBAAC,KAAD,CAAOrS,QAASA,GAASO,WAAYpQ,O,qBCrF3CU,I,OAAS,CACXC,SAAU,CAAE/D,KAAM,GAClBgE,WAAY,CAAEhE,KAAM,KAkDTulB,GAhDM,WAAO,IAAD,EACGlmB,mBAAS,IADZ,mBAChB9D,EADgB,KACTiqB,EADS,KAOvB,OACI,oCACI,kBAAC,KAAD,iBAAU1hB,GAAV,CAAkBjD,KAAK,gBAAgBkE,SAN9B,SAAAC,GACAA,EAASE,QAMd,kBAAC,KAAD,CAAK+L,OAAQ,IACT,kBAAC,KAAD,CAAKjR,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,QAAS0E,MAAM,QACrC,kBAAC,KAAD,QAGR,kBAAC,KAAD,CAAKvF,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,gBAAiB0E,MAAM,iBAC7C,kBAAC,KAAD,QAGR,kBAAC,KAAD,CAAKvF,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,YAAa0E,MAAM,YACzC,kBAAC,KAAD,QAGR,kBAAC,KAAD,CAAKvF,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,eAAgB0E,MAAM,iBAC5C,kBAAC,KAAD,UAKhB,kBAAC,KAAD,CAAY7H,MAAM,OAAOnC,MAAOA,EAAOyF,SAAUwkB,IAEjD,kBAAC,KAAD,CAAKtlB,MAAO,CAAEqc,UAAW,QAAS9T,UAAW,KACzC,kBAAC,KAAD,CAAKzI,KAAM,GAAIE,MAAO,CAAEqc,UAAW,UAC/B,kBAAC,KAAK/X,KAAN,KACI,kBAAC,KAAD,CAAQtI,KAAK,UAAU0J,SAAS,UAAhC,iBCzClB9B,IAFaD,KAAXD,OACa/D,KAAbkgB,SACO,CACXhc,SAAU,CAAE/D,KAAM,GAClBgE,WAAY,CAAEhE,KAAM,KAGlBiE,GAAmB,CAErBC,SAAU,wBACVC,MAAO,CAEHC,MAAO,kCAEPC,OAAQ,sCAEZA,OAAQ,CAEJC,MAAO,+CAyHAmhB,GArHI,WACf,IAAInX,EAAU,GACRvJ,EAAW,SAAAC,GACAA,EAASE,MAGpB4f,EAAkB,SAACvpB,KAGzB,OACI,oCACI,kBAAC,KAAD,CAAQW,KAAK,SAAS8b,KAAM,kBAACC,GAAA,EAAD,OAA5B,gBAGA,6BAAM,6BAAM,6BACZ,kBAAC,KAAD,iBAAUnU,GAAV,CAAkBjD,KAAK,gBAAgBkE,SAAUA,EAAUd,iBAAkBA,KACzE,kBAAC,KAAD,CAAKgN,OAAQ,IACT,kBAAC,KAAD,CAAKjR,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,eAAgB0E,MAAM,eAAeC,MAAO,CAAC,CAAEtB,UAAU,KAC/E,kBAAC,KAAD,QAGR,kBAAC,KAAD,CAAKlE,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,kBAAmB0E,MAAM,oBAC/C,kBAAC,KAAD,CAAYrF,MAAO,CAAEC,MAAO,YAGpC,kBAAC,KAAD,CAAKH,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,gBAAiB0E,MAAM,gBAAgBC,MAAO,CAAC,CAAEtB,UAAU,EAAMhI,KAAM,SAAUuJ,IAAK,EAAGC,IAAK,OACpH,kBAAC,KAAD,CAAaxF,MAAO,CAAEC,MAAO,YAGrC,kBAAC,KAAD,CAAKH,KAAM,IACP,kBAAC,KAAKwE,KAAN,CAAW3D,KAAM,CAAC,OAAQ,UAAW0E,MAAM,UACvC,kBAAC,KAAD,UAMhB,kBAAC,KAAD,CAAM1E,KAAK,yBAAyBkE,SAAUA,EAAUsT,aAAa,OACjE,kBAAC,KAAKC,KAAN,CAAWzX,KAAK,UACX,SAAC0X,EAAD,GAA8B,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACb,OACI,6BACKF,EAAO9T,KAAI,SAAAiU,GAAK,OACb,kBAAC,KAAD,CAAOhU,IAAKgU,EAAMhU,IAAKxE,MAAO,CAAEwI,QAAS,OAAQtI,aAAc,GAAKuY,MAAM,SACtE,kBAAC,KAAKnU,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,eACnB+X,SAAU,CAACF,EAAME,SAAU,eAC3BpT,MAAO,CAAC,CAAEtB,UAAU,EAAM3B,QAAS,4BAEnC,kBAAC,KAAD,CACI6J,SAAU0Y,EACVvV,kBAAkB,mCAClBC,yBAA0B,IAC1BtP,MAAO,CAAEC,MAAO,KAChBmO,QAASA,GAET,kBAAC,KAAM7E,OAAP,CAAckC,KAAK,UAAU5K,YAAY,mBAGjD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,YACnB+X,SAAU,CAACF,EAAME,SAAU,cAE3B,kBAAC,KAAD,CAAa1Y,MAAO,CAAE6kB,SAAU,KAAOhkB,YAAY,cAEvD,kBAAC,KAAKyD,KAAN,iBACQkU,EADR,CAEI7X,KAAM,CAAC6X,EAAM7X,KAAM,SACnB+X,SAAU,CAACF,EAAME,SAAU,WAE3B,kBAAC,KAAD,CAAa1Y,MAAO,CAAE6kB,SAAU,KAAOhkB,YAAY,WAEvD,kBAAC8X,GAAA,EAAD,CACI1Z,QAAS,WACLsZ,EAAOC,EAAM7X,aAM7B,kBAAC,KAAK2D,KAAN,KACI,kBAAC,KAAD,CACItI,KAAK,SACLiD,QAAS,WACLqZ,KAEJM,OAAK,GAEL,kBAACb,GAAA,EAAD,MAPJ,mBAcpB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKjY,KAAM,GAAIE,MAAO,CAAEqc,UAAW,UAC/B,kBAAC,KAAK/X,KAAN,KACI,kBAAC,KAAD,CAAQtI,KAAK,UAAU0J,SAAS,UAAhC,cCtHb8f,GARI,WACf,OACI,oCACA,wBAAIxlB,MAAO,CAAC8I,SAAU,SAAtB,iCCcO2c,GAhB2B,WAAO,IAAD,EACPtmB,mBAAS,MADF,mBACrCyO,EADqC,KAC1BC,EAD0B,KAa5C,MAAO,CAACD,EAVK,uCAAG,WAAOkN,GAAP,eAAA9b,EAAA,sEACW2e,GAA+B7C,GAD1C,OACNrX,EADM,OAGRoK,EADApK,GAIgB,MANR,2CAAH,wDCFJiiB,I,OAAb,2KAEyBpd,KAAKrK,MAAMuR,SAA5B,IACMsL,EAAgBxS,KAAKrK,MAAM6c,cAC3B9U,EAAYsC,KAAKrK,MAAM+H,UACvB4E,EAAiBtC,KAAKrK,MAAM2M,eAC5B2T,EAAgBjW,KAAKrK,MAAMsgB,cAC3B5O,GAAc,IAAI3H,MAAQ2D,eAAiB,GAAS,IAAI3D,MAAQ4H,qBAClE+V,EAAgB,GAChBC,EAAY,GAChB,GAA+B,MAA3Btd,KAAKrK,MAAMkY,cAAwB7N,KAAKrK,MAAMkY,aAAa/K,OAAS,EAAG,CACvE,IAAM+K,EAAe7N,KAAKrK,MAAMkY,aAAa5R,KAAI,SAAAuL,GAC7C,OACI,4BACI,4BAAKA,EAAKhB,cACV,4BAAKgB,EAAKqP,QACV,4BAAKrP,EAAKuG,MACV,4BAAKvG,EAAKsP,aAGtBuG,EAAgB,yBAAK3lB,MAAO,CAAEC,MAAO,SACjC,wBAAI4lB,MAAM,WAAV,wBACA,2BAAOA,MAAM,aACT,4BACI,6CACA,sCACA,oCACA,wCAEH1P,IAIb,GAA2B,MAAvB7N,KAAKrK,MAAMqY,UAAoBhO,KAAKrK,MAAMqY,SAASlL,OAAS,EAAG,CAC/D,IAAMkL,EAAWhO,KAAKrK,MAAMqY,SAAS/R,KAAI,SAAAuL,GACrC,OACI,4BACI,4BAAKA,EAAKnB,UACV,4BAAKmB,EAAKwP,eACV,4BAAKxP,EAAKgW,cACV,4BAAKhW,EAAKiW,YACV,4BAAKjW,EAAKkW,cAGtBJ,EAAY,yBAAK5lB,MAAO,CAAEC,MAAO,SAC7B,wBAAI4lB,MAAM,WAAV,oBACA,2BAAOA,MAAM,aACT,4BACI,yCACA,yCACA,2CACA,8CACA,+CAEHvP,IAMb,OACI,oCACI,yBAAK1V,GAAG,UAAUZ,MAAO,CAAEuI,UAAW,OAAQC,QAAS,OAAQC,cAAe,SAAUC,eAAgB,SAAUC,WAAY,WAC1H,6BACI,yBAAK3I,MAAO,CAAEC,MAAO,QAAS2I,OAAQ,UAAYzI,IAAKC,OACvD,yBAAKJ,MAAO,CAAE6I,WAAY,OAAQC,SAAU,OAAQC,WAAY,SAC5D,2BAAId,GAAgBC,SACpB,uCAAaD,GAAgBE,WAGrC,yBAAKnI,MAAO,CAAEC,MAAO,OAAQ+I,OAAQ,MAAO/H,WAAY,OAAQ2H,OAAQ,cACxE,wBAAIid,MAAM,WAAV,gBACA,2BAAO3V,OAAO,IAAIC,YAAY,IAAIC,YAAY,IAAInQ,MAAM,QACpD,4BACI,oCACA,4BAAK2K,EAAezE,aACpB,mCACA,4BAAKyE,EAAe3D,MAExB,4BACI,yCACA,4BAAKjB,GACL,6CACA,4BAAK8U,IAET,4BACI,oCACA,4BAAKnL,GACL,0CACA,4BAAK/E,EAAe5D,aAG5B,6BACA,yBAAKhH,MAAO,CAAEC,MAAO,OAAQ+I,OAAQ,MAAO/H,WAAY,OAAQ2H,OAAQ,cACxE,wBAAIid,MAAM,WAAV,kBACA,2BAAO3V,OAAO,IAAIC,YAAY,IAAIC,YAAY,IAAInQ,MAAM,QACpD,4BACI,wCAAcse,EAAcvV,QAC5B,wCAAcuV,EAAcE,QAC5B,oCAAUF,EAAcG,KAG5B,4BACI,6CAAmBH,EAAc0H,aACjC,qDAA2B1H,EAAc2H,cAE7C,8BAKJ,6BACA,yBAAKlmB,MAAO,CAAEC,MAAO,OAAQ+I,OAAQ,MAAO/H,WAAY,OAAQ2H,OAAQ,cACvE+c,EACAC,EACD,yBAAK5lB,MAAO,CAAEC,MAAO,OAAQ+I,OAAQ,MAAO/H,WAAY,OAAQ2H,OAAQ,cACxE,2BAAOsH,OAAO,IAAIC,YAAY,IAAIC,YAAY,IAAInQ,MAAM,QACpD,4BACI,qDAA2Bse,EAAcO,UAGjD,yBAAK9e,MAAO,CAAEuI,UAAW,OAAQtI,MAAO,OAAQgJ,QAAS,SAErD,yBAAKjJ,MAAO,CAAEkJ,MAAO,UAArB,6BA3HxB,GAAuCG,IAAMC,YCKvC6c,GAAkB,CACpB,CACIva,MAAO,gBACP+F,UAAW,gBAEf,CACI/F,MAAO,SACP+F,UAAW,UAEf,CACI/F,MAAO,OACP+F,UAAW,QAEf,CACI/F,MAAO,UACP+F,UAAW,YAIbyU,GAAc,CAChB,CACIxa,MAAO,YACP+F,UAAW,YAEf,CACI/F,MAAO,YACP+F,UAAW,iBAEf,CACI/F,MAAO,cACP+F,UAAW,gBAEf,CACI/F,MAAO,iBACP+F,UAAW,YAGf,CACI/F,MAAO,iBACP+F,UAAW,eAkIJ0U,GA5HU,SAAC,GAA2B,IAAzB7kB,EAAwB,EAAxBA,SAClB8kB,GAD0C,EAAd7kB,QACb,IACf8kB,EAAW,GAEble,EAAqB,CACrByS,cAAe,GACfoL,YAAa,GACbpH,OAAQ,GACR9Y,UAAW,GACXG,YAAa,GACbN,SAAU,GACVmD,OAAQ,GACRyV,OAAQ,GACRC,GAAI,GACJxK,UAAW,GACXqH,gBAAiB,GACjBnU,SAAU,GACV7D,OAAQ,GACR0iB,YAAa,IAGXlc,EAAcC,KAAYC,MAAMzI,EAAS0I,QArBC,EAsBMub,KAtBN,mBAsBzCe,EAtByC,KAsBpBC,EAtBoB,OAuBU/f,GAAeqD,EAAY/D,WAvBrC,mBAuBzC4E,EAvByC,KAuBdC,GAvBc,WAwB1CN,EAAeC,mBACfS,EAAcC,2BAAgB,CAChCC,QAAS,kBAAMZ,EAAad,WAOhC,GALA3H,qBAAU,WACN2kB,EAAuB1c,EAAY+Q,eACnCjQ,EAAqBd,EAAY/D,aAClC,IAEwB,MAAvBwgB,EAA6B,CAE7B,GADAvkB,QAAQC,IAAIskB,GAC8B,MAAtCA,EAAoBhI,eAAwB,CAC5C,IAAMA,EAAiBgI,EAAoBhI,eAC3Cvc,QAAQC,IAAI,WAAYsc,GACxBnW,EAAqB,CACjByS,cAAe0D,EAAe1D,cAC9BoL,YAAa1H,EAAe0H,YAC5BpH,OAAQN,EAAeM,OACvB9Y,UAAWwY,EAAexY,UAC1BG,YAAaqY,EAAerY,YAC5BN,SAAU2Y,EAAe3Y,SACzBmD,OAAQwV,EAAexV,OACvByV,OAAQD,EAAeC,OACvBC,GAAIF,EAAeE,GACnBxK,UAAWsK,EAAetK,UAC1BqH,gBAAiBiD,EAAejD,gBAChCnU,SAAUoX,EAAepX,SACzB7D,OAAQib,EAAejb,QAIkB,MAA7CijB,EAAoBxH,uBACpBwH,EAAoBxH,sBAAsBpQ,SAAQ,SAACC,EAAUwC,GACzDiV,EAAavkB,KAAK,CACdyC,IAAKqK,EAASuH,QAAU/E,EACxBvC,aAAcD,EAASuH,QACvB+I,OAAQtQ,EAASsQ,OACjB9I,KAAMxH,EAASwH,KACf+I,QAASvQ,EAASuQ,aAKsB,MAAhDoH,EAAoBvH,0BACpBuH,EAAoBvH,yBAAyBrQ,SAAQ,SAACF,EAAM2C,GACxDkV,EAASxkB,KAAK,CACVyC,IAAKkK,EAAO2C,EACZ1C,SAAUD,EAAKsX,SACf1G,cAAe5Q,EAAK4Q,cACpBwG,aAAcpX,EAAKoX,aACnBC,WAAYrX,EAAKqX,WACjBC,SAAUtX,EAAK0Q,aAK/B,OACI,oCACI,kBAAC,KAAD,CAAQpjB,KAAK,UAAUgE,MAAO,CAAEkJ,MAAO,SAAW2P,MAAM,QAAQf,KAAM,kBAAC6H,GAAA,EAAD,MAAqBlU,KAAK,UAAUxM,QAASgM,GAAnH,SAGA,yBAAKjL,MAAO,CAAEwI,QAAS,SACnB,kBAAC,GAAD,CAAmBqE,IAAKtC,EAAcgU,cAAelW,EAAoByS,cAAezS,EAAmByS,cAAe9U,UAAW+D,EAAY/D,UAAWmQ,aAAcmQ,EAAchQ,SAAUiQ,EAAU3b,eAAgBA,KAEhO,4CACA,6BACA,kBAAC,KAAD,CAAcgB,MAAM,GAAGhI,OAAO,cAC1B,kBAAC,KAAaU,KAAd,CAAmBe,MAAM,QAAQuF,EAAezE,YAAhD,KACA,kBAAC,KAAa7B,KAAd,CAAmBe,MAAM,OAAOuF,EAAe3D,KAC/C,kBAAC,KAAa3C,KAAd,CAAmBe,MAAM,iBAAiBgD,EAAmByS,eAC7D,kBAAC,KAAaxW,KAAd,CAAmBe,MAAM,cAAcuF,EAAe5D,YAE1D,6BACA,6BACA,8CACA,6BACA,kBAAC,KAAD,CAAc4E,MAAM,GAAGhI,OAAO,cAC1B,kBAAC,KAAaU,KAAd,CAAmBe,MAAM,UAAUgD,EAAmBW,QACtD,kBAAC,KAAa1E,KAAd,CAAmBe,MAAM,UAAUgD,EAAmBoW,QACtD,kBAAC,KAAana,KAAd,CAAmBe,MAAM,MAAMgD,EAAmBqW,IAClD,kBAAC,KAAapa,KAAd,CAAmBe,MAAM,eAAegD,EAAmB4d,aAC3D,kBAAC,KAAa3hB,KAAd,CAAmBe,MAAM,uBAAuBgD,EAAmB6d,cAGvE,6BACA,6BACA,oDACA,kBAAC,KAAD,CAAOnT,QAASoT,GAAiB7S,WAAYgT,EAAc7a,KAAK,WAChE,6BACA,gDACA,kBAAC,KAAD,CAAOsH,QAASqT,GAAa9S,WAAYiT,EAAU9a,KAAK,WACxD,6BACA,kBAAC,KAAD,CAAcG,MAAM,GAAGhI,OAAO,cAC1B,kBAAC,KAAaU,KAAd,CAAmBe,MAAM,uBAAuBgD,EAAmByW,WCzI3EjgB,GAAmC6nB,KAAnC7nB,OAAQ8nB,GAA2BD,KAA3BC,MAAOjqB,GAAoBgqB,KAApBhqB,QAASkqB,GAAWF,KAAXE,OACxBC,GAAYC,KAAZD,QA2IOE,GAzIF,SAAC,GAAiC,EAA/BvlB,SAA+B,EAArBC,QAAsB,IACxCulB,EADuC,EAAZC,MACdD,KAD0B,EAEhBzrB,IAFgB,2BAEpCY,KAFoC,KAGXgD,oBAAS,IAHE,mBAGtC+nB,EAHsC,KAG3BC,EAH2B,OAILhoB,mBAAS,IAJJ,mBAItCioB,EAJsC,KAIxBC,EAJwB,KAe7C,OACE,kBAAC,KAAD,KACE,kBAACV,GAAD,CAAOW,QAAS,KAAMC,aAAW,EAACL,UAAWA,GAC3C,yBAAK/a,UAAU,SACf,kBAAC,KAAD,CAAME,SARQ,SAAAiG,GAClB+U,EAAgB/U,EAAE9N,MAOehH,MAAM,OAAO6jB,KAAK,SAASmG,oBAAqB,CAAC,MAC5E,kBAACX,GAAD,CAASriB,IAAI,UAAUsT,KAAM,kBAACF,GAAA,EAAD,MAAkBhM,MAAM,WACnD,kBAAC,KAAKtH,KAAN,CAAWE,IAAI,wBAAuB,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,kBAAR,iBACtC,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,mBAAkB,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,mBAAR,qBAEnC,kBAACH,GAAD,CAASriB,IAAI,SAASsT,KAAM,kBAACF,GAAA,EAAD,MAAkBhM,MAAM,UAClD,kBAAC,KAAKtH,KAAN,CAAWE,IAAI,sBAAqB,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,uBAAR,kBAGtC,kBAACH,GAAD,CAASriB,IAAI,QAAQsT,KAAM,kBAACF,GAAA,EAAD,MAAkBhM,MAAM,SACjD,kBAAC,KAAKtH,KAAN,CAAWE,IAAI,eAAc,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,eAAR,gBAC7B,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,iBAAgB,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,iBAAR,kBAC/B,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,YAAW,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,aAAR,cAC1B,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,qBAAoB,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,gBAAR,uBAKrC,kBAACH,GAAD,CAASriB,IAAI,sBAAsBsT,KAAM,kBAAC2P,GAAA,EAAD,MAAyB7b,MAAM,YAGtE,kBAAC,KAAKtH,KAAN,CAAWE,IAAI,oBAAmB,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,oBAAR,iBAClC,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,uBAAsB,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,uBAAR,kBACrC,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,sBAAqB,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,sBAAR,uBACpC,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,oBAAmB,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,qBAAR,oBAClC,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,oBAAmB,kBAACyT,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,qBAAR,sBAEpC,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,UAAUsT,KAAM,kBAACwK,GAAA,EAAD,OAC7B,kBAACrK,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,aAAR,YAEF,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,cAAcsT,KAAM,kBAACwK,GAAA,EAAD,OACjC,kBAACrK,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,iBAAR,gBAKF,kBAACH,GAAD,CAASriB,IAAI,oBAAoBsT,KAAM,kBAACF,GAAA,EAAD,MAAkBhM,MAAM,YAC7D,kBAAC,KAAKtH,KAAN,CAAWE,IAAI,eAAesT,KAAM,kBAACwK,GAAA,EAAD,OAClC,kBAACrK,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,kBAAR,iBAEF,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,qBAAqBsT,KAAM,kBAACwK,GAAA,EAAD,OACxC,kBAACrK,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,aAAR,aAEF,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,UAAUsT,KAAM,kBAACwK,GAAA,EAAD,OAC7B,kBAACrK,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,aAAR,YAEF,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,WAAWsT,KAAM,kBAAC4P,GAAA,EAAD,OAC9B,kBAACzP,GAAA,EAAD,CAAMC,GAAE,UAAK8O,EAAL,cAAR,aAEF,kBAAC,KAAK1iB,KAAN,CAAWE,IAAI,iBAAiBsT,KAAM,kBAACwK,GAAA,EAAD,OAAtC,kBAGA,kBAAC,KAAKhe,KAAN,CAAWE,IAAI,YAAYsT,KAAM,kBAACwK,GAAA,EAAD,OAAjC,aAGA,kBAAC,KAAKhe,KAAN,CAAWE,IAAI,uBAAuBsT,KAAM,kBAACwK,GAAA,EAAD,OAA5C,wBAGA,kBAAC,KAAKhe,KAAN,CAAWE,IAAI,YAAYsT,KAAM,kBAACwK,GAAA,EAAD,OAAjC,gBAMN,kBAAC,KAAD,CAAQnW,UAAU,eAChB,kBAAC,GAAD,CAAQA,UAAU,yBAAyBnM,MAAO,CAAEiJ,QAAS,IAC1DI,IAAMse,cAAcT,EAAYU,KAAqBC,KAAkB,CACtE1b,UAAW,UACXlN,QAjFK,WACbkoB,GAAcD,GACdG,EAAgB,OAiFTD,GAEH,kBAAC,GAAD,CACEjb,UAAU,yBACVnM,MAAO,CACL4I,OAAQ,YACRK,QAAS,GACT6e,UAAW,IACXC,SAAU,OACV/e,OAAQ,UAGV,kBAACgf,EAAA,EAAD,CAAOC,OAAK,EAACjB,KAAK,QAAQxV,UAAWkP,KACrC,kBAACsH,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,YAAqBxV,UAAWmB,KAC3C,kBAACqV,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,iBAA0BxV,UAAW0O,KAChD,kBAAC8H,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,kBAA2BxV,UAAW+K,KACjD,kBAACyL,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,cAAuBxV,UAAW7M,KAC7C,kBAACqjB,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,gBAAyBxV,UAAW5H,KAC/C,kBAACoe,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,sBAA+BxV,UAAWkJ,KACrD,kBAACsN,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,iBAA0BxV,UAAWqM,KAChD,kBAACmK,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,gBAAyBxV,UAAWkK,KAC/C,kBAACsM,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,YAAqBxV,UAAWwK,KAC3C,kBAACgM,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,aAAsBxV,UAAW0W,KAC5C,kBAACF,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,YAAqBxV,UAAWqG,KAC3C,kBAACmQ,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,iBAA0BxV,UAAW4H,KAChD,kBAAC4O,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,aAAsBxV,UAAWiM,KAC5C,kBAACuK,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,mBAA4BxV,UAAWwP,KAClD,kBAACgH,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,oBAA6BxV,UAAW+Q,KACnD,kBAACyF,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,sBAA+BxV,UAAWqR,KACrD,kBAACmF,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,qBAA8BxV,UAAWqS,KACpD,kBAACmE,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,sBAA+BxV,UAAWsT,KACrD,kBAACkD,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,eAAwBxV,UAAW4T,KAC9C,kBAAC4C,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,iBAA0BxV,UAAW6T,KAChD,kBAAC2C,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,YAAqBxV,UAAW4K,KAC3C,kBAAC4L,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,eAAwBxV,UAAW+T,KAC9C,kBAACyC,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,oBAA6BxV,UAAWwT,KACnD,kBAACgD,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,eAAwBxV,UAAWgU,KAC9C,kBAACwC,EAAA,EAAD,CAAOhB,KAAI,UAAKA,EAAL,qBAA8BxV,UAAW6U,MAGtD,kBAACO,GAAD,CAAQ5mB,MAAO,CAAEqc,UAAW,WAA5B,sBChIO8L,GAxBF,SAAAlqB,GACX,IAAM/C,EAAe,CACnBiB,KAAMisB,EACNhsB,QAASisB,GAEX,OACE,kBAAC,EAAD,CAAentB,aAAcA,EAAcD,QAASqtB,GAClD,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACP,EAAA,EAAD,CAAOC,OAAK,EAACjB,KAAK,IAAIxV,UAAWjQ,KAEjC,kBAACymB,EAAA,EAAD,CAAOhB,KAAK,QAAQxV,UAAWuV,WCnBvCyB,GAAcC,QACW,cAA7BC,OAAOlnB,SAASmnB,UAEe,UAA7BD,OAAOlnB,SAASmnB,UAEhBD,OAAOlnB,SAASmnB,SAAS1B,MACvB,2DAsCN,SAAS2B,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT7lB,MAAK,SAAAJ,GACJA,EAAaqmB,cAAgB,WAC3B,IAAMC,EAAmBtmB,EAAaumB,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBptB,QACfgtB,UAAUC,cAAcM,WAK1BpnB,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBiB,OAAM,SAAAnC,GACLiB,QAAQjB,MAAM,4CAA6CA,MCzEjEoS,iBAAO,kBAAC,GAAD,MAAUkW,SAASC,eAAe,SDc1B,WACb,GAA6C,kBAAmBT,UAAW,CAGzE,GADkB,IAAIU,IAAIC,GAAwBf,OAAOlnB,UAC3CkoB,SAAWhB,OAAOlnB,SAASkoB,OAIvC,OAGFhB,OAAOiB,iBAAiB,QAAQ,WAC9B,IAAMd,EAAK,UAAMY,GAAN,sBAEPjB,KAiDV,SAAiCK,GAE/Be,MAAMf,GACH7lB,MAAK,SAAAS,GAGkB,MAApBA,EAASF,SACuD,IAAhEE,EAASomB,QAAQ/jB,IAAI,gBAAgB8G,QAAQ,cAG7Ckc,UAAUC,cAAce,MAAM9mB,MAAK,SAAAJ,GACjCA,EAAamnB,aAAa/mB,MAAK,WAC7B0lB,OAAOlnB,SAASwoB,eAKpBpB,GAAgBC,MAGnB1lB,OAAM,WACLlB,QAAQC,IACN,oEArEA+nB,CAAwBpB,GAIxBC,UAAUC,cAAce,MAAM9mB,MAAK,WACjCf,QAAQC,IACN,gHAMJ0mB,GAAgBC,OCzCxBqB,I,mBCPAC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.4f36e150.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","export const LOGIN = 'auth/LOGIN';\nexport const LOGOUT = 'auth/CLEAR_USER';\n\nexport const login = (payload) => ({\n  type: LOGIN,\n  payload\n});\n\nexport const logout = () => ({\n  type: LOGOUT,\n});\n","import { LOGIN, LOGOUT } from './actions';\n\nexport const INITIAL_STATE = {\n  logged: false,\n  username: \"\"\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        logged: true,\n        username: action.payload\n      };\n    case LOGOUT:\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n","import { LIST_PRODUCTS } from './actions';\n\nexport const INITIAL_STATE = {\n  list: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case LIST_PRODUCTS:\n      return {\n        ...state,\n        list: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const LIST_PRODUCTS = 'product/LIST_PRODUCTS';\n\nexport const listProducts = payload => ({\n  type: LIST_PRODUCTS,\n  payload,\n});\n","import authReducer from './auth/reducers';\nimport productReducer from './product/reducers';\n\nexport default ({ auth, product }, action) => ({\n  auth: authReducer(auth, action),\n  product: productReducer(product, action),\n});\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst BaseStyles = createGlobalStyle`\n    ${reset}\n    body { margin: 0 };\n    html { font-family: 'Montserrat', sans-serif; }\n    * { box-sizing: border-box; };\n`;\n\nexport default BaseStyles;\n","import styled from 'styled-components';\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nexport default Content;\n","const colors = {\n  primary: '#7159c1',\n  secondary: '#9b49c1',\n  default: '#fff',\n  gradient:\n    'linear-gradient(112deg, rgba(113,89,193,1) 0%, rgba(155,73,193,1) 100%);',\n  bg: 'linear-gradient(to top, #a18cd1 0%, #fbc2eb 100%);',\n};\n\nconst viewports = {\n  smartphone: '360px',\n  tablet: '720px',\n  desktop: '1280px',\n};\n\nconst forms = {\n  labelColor: colors.light,\n  errorColor: colors.danger,\n};\n\nconst theme = Object.freeze({\n  colors,\n  forms,\n  viewports,\n});\n\nexport default theme;\n","import styled from 'styled-components';\nimport theme from './theme';\n\nconst Button = styled.button`\n  transition: all 0.3s ease;\n  background: ${props =>\n    theme.colors[Object.keys(props).find(p => theme.colors[p])] ||\n    theme.colors.primary};\n  text-transform: ${props => (props.upper ? 'uppercase' : 'none')};\n  font-weight: 300;\n  color: ${theme.colors.default};\n  padding: 9px 13px;\n  margin: 1px;\n  border: none;\n  border-radius: 2px;\n  cursor: pointer;\n  width: ${props => (props.large ? '100%' : 'auto')};\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { useStateValue } from '../state';\nimport { logout } from '../state/auth/actions';\n\nimport Button from './button';\n\nconst Nav = styled.div`\n  height: 50px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  background: #001529;\n  position: ${props => (props.fixed ? 'fixed' : 'relative')};\n`;\n\nconst Right = styled.nav`\n  flex: 1;\n  text-align: right;\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n  color: white;\n  font-weight: 600;\n`;\n\nconst Header = props => {\n  const [{ auth }, dispatch] = useStateValue();\n\n  const handleLogout = async () => {\n    await dispatch(logout());\n  };\n\n  return (\n    <Nav>\n      <Title>BAYMAX</Title>\n      <Right>\n        {auth.logged && (\n          <Button gradient onClick={() => handleLogout()}>\n            Logout\n          </Button>\n        )}\n      </Right>\n    </Nav>\n  );\n};\n\nexport default Header;\n","import { useState } from 'react';\nimport { useStateValue } from '../../index';\nimport { login } from '../actions';\n\nconst useProducts = () => {\n  const [{ auth }, dispatch] = useStateValue();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const formData = async ({ values, actions }) => {\n    setIsLoading(true);\n\n    setIsLoading(false);\n    if (values.username !== '' && values.password !== '') {\n      dispatch(login(values.username));\n    }\n  };\n\n  return [auth, formData, isLoading];\n};\n\nexport default useProducts;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 50px);\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst formGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default formGroup;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  margin: 10px 5px;\n  border-radius: 3px;\n  border: 1px solid #e6e6e6;\n  padding: 7px;\n  box-sizing: border-box;\n  width: 100%;\n`;\n\nexport default Input;\n","import styled from 'styled-components';\nimport theme from '../theme';\n\nconst ErrorText = styled.span`\n  text-align: center;\n  color: ${theme.forms.errorColor};\n`;\n\nexport default ErrorText;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Formik } from 'formik';\nimport Button from '../../../components/button';\nimport FormGroup from '../../../components/form/formGroup';\nimport Input from '../../../components/form/input';\nimport ErrorText from '../../../components/form/error';\nimport logo from '../../../assets/images/logo.jpg';\n\nconst LoginForm = props => (\n  <>\n    <img style={{ width: \"300px\", marginBottom: '20px' }} src={logo} />\n    <Formik initialValues={{ username: '', password: '' }} {...props}>\n      {({ handleChange, handleBlur, values, handleSubmit, errors }) => (\n        <FormGroup>\n          {errors.genericError && <ErrorText>{errors.genericError}</ErrorText>}\n          <Input\n            name=\"username\"\n            id=\"username\"\n            placeholder=\"Username\"\n            onChange={handleChange('username')}\n            onBlur={handleBlur('username')}\n            error={errors.username}\n            value={values.username}\n          />\n          <Input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handleChange('password')}\n            onBlur={handleBlur('password')}\n            error={errors.password}\n            value={values.password}\n          />\n          <Button primary large onClick={handleSubmit} style={{ background: 'skyblue', color: 'white' }} type=\"submit\">\n            Login\n        </Button>\n        </FormGroup>\n      )}\n    </Formik>\n  </>\n);\n\nexport default LoginForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport theme from './theme';\n\nconst BackDrop = styled.div`\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.67);\n`;\n\nconst Spinner = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid ${theme.colors.primary};\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  animation: spin 2s linear infinite;\n  margin: 40vh auto;\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Loading = props => {\n  return (\n    props.show && (\n      <BackDrop>\n        <Spinner />\n      </BackDrop>\n    )\n  );\n};\n\nexport default Loading;\n","import React, { useEffect } from 'react';\n\nimport useLogin from '../../state/auth/hooks/useLogin';\n\nimport Container from './containers/container';\nimport Form from './containers/form';\nimport Spinner from '../../components/spinner';\nimport { notification } from 'antd';\n\nconst Login = ({ location, history }) => {\n  const { from } = location.state || { from: { pathname: '/home' } };\n  const [auth, setLogin, isLoading] = useLogin();\n\n  useEffect(() => {\n    if (auth.logged) {\n      history.push(from);\n    }\n  }, [auth, from, history]);\n\n  function checkAdmin(values) {\n    return (values.username == 'admin' && values.password == 'admin');\n  }\n  return (\n    <Container>\n      <Spinner show={isLoading} />\n      <Form onSubmit={(values, actions) => {\n        console.log(\"values\", values);\n        console.log(\"actions\", actions);\n        if (checkAdmin(values)) {\n          setLogin({ values, actions });\n        } else {\n          notification[\"error\"]({\n            message: 'Invalid username or password!',\n            description:\n              'Please check the username and password and try again.',\n            duration: 5,\n          });\n        }\n\n      }} />\n    </Container>\n  );\n};\n\nexport default Login;\n","export const departments = [\"Accident and emergency (A&E)\",\n    \"Admissions\",\n    \"Anesthetics\",\n    \"Breast Screening\",\n    \"Burn Center\",\n    \"Cardiology\",\n    \"Central Sterile Services Department (CSSD)\",\n    \"Chaplaincy\",\n    \"Coronary Care Unit (CCU)\",\n    \"Critical Care\",\n    \"Diagnostic Imaging\",\n    \"Discharge Lounge\",\n    \"Elderly services\",\n    \"Finance Department\",\n    \"Gastroenterology\",\n    \"General Services\",\n    \"General Surgery\",\n    \"Gynecology\",\n    \"Haematology\",\n    \"Health & Safety\",\n    \"Intensive Care Unit (ICU)\",\n    \"Human Resources\",\n    \"Infection Control\",\n    \"Information Management\",\n    \"Maternity\",\n    \"Medical Records\",\n    \"Microbiology\",\n    \"Neonatal\",\n    \"Nephrology\",\n    \"Neurology\",\n    \"Nutrition and Dietetics\",\n    \"Obstetrics/Gynecology\",\n    \"Occupational Therapy\",\n    \"Oncology\",\n    \"Ophthalmology\",\n    \"Orthopaedics\",\n    \"Otolaryngology (Ear, Nose, and Throat)\",\n    \"Pain Management\",\n    \"Patient Accounts\",\n    \"Patient Services\",\n    \"Pharmacy\",\n    \"Physiotherapy\",\n    \"Purchasing & Supplies\",\n    \"Radiology\",\n    \"Radiotherapy\",\n    \"Renal\",\n    \"Rheumatology\",\n    \"Sexual Health\",\n    \"Social Work\",\n    \"Urology\"];\n\nexport const doctorsSpeciality = [\"Allergist\",\n    \"Anaesthesiologist\",\n    \"Andrologist\",\n    \"Cardiologist\",\n    \"Cardiac Electrophysiologist\",\n    \"Dermatologist\",\n    \"Emergency Room (ER) Doctors\",\n    \"Endocrinologist\",\n    \"Epidemiologist\",\n    \"Family Medicine Physician\",\n    \"Gastroenterologist\",\n    \"Geriatrician\",\n    \"Hyperbaric Physician\",\n    \"Hematologist\",\n    \"Hepatologist\",\n    \"Immunologist\",\n    \"Infectious Disease Specialist\",\n    \"Intensivist\",\n    \"Internal Medicine Specialist\",\n    \"Maxillofacial Surgeon / Oral Surgeon\",\n    \"Medical Examiner\",\n    \"Medical Geneticist\",\n    \"Neonatologist\",\n    \"Nephrologist\",\n    \"Neurologist\",\n    \"Neurosurgeon\",\n    \"Nuclear Medicine Specialist\",\n    \"Obstetrician/Gynecologist (OB/GYN)\",\n    \"Occupational Medicine Specialist\",\n    \"Oncologist\",\n    \"Ophthalmologist\",\n    \"Orthopedic Surgeon / Orthopedist\",\n    \"Otolaryngologist (also ENT Specialist)\",\n    \"Parasitologist\",\n    \"Pathologist\",\n    \"Perinatologist\",\n    \"Periodontist\",\n    \"Pediatrician\",\n    \"Physiatrist\",\n    \"Plastic Surgeon\",\n    \"Psychiatrist\",\n    \"Pulmonologist\",\n    \"Radiologist\",\n    \"Rheumatologist\",\n    \"Sleep Doctor / Sleep Disorders Specialist\",\n    \"Spinal Cord Injury Specialist\",\n    \"Sports Medicine Specialist\",\n    \"Surgeon\",\n    \"Thoracic Surgeon\",\n    \"Urologist\",\n    \"Vascular Surgeon\",\n    \"Veterinarian\",\n    \"Palliative Care Specialist\",\n    \"Acupuncturist\",\n    \"Audiologist\",\n    \"Ayurvedic Practioner\",\n    \"Chiropractor\",\n    \"Diagnostician\",\n    \"Homeopathic Doctor\",\n    \"Microbiologist\",\n    \"Naturopathic Doctor\",\n    \"Pharmacist\",\n    \"Physiotherapist\",\n    \"Podiatrist / Chiropodist\",\n    \"Registered Massage Therapist\"];\n\nexport const qualifications = [\"MS\", \"MD\", \"MBBS\"];\n","const api = {\n  url: 'http://ec2-18-221-50-135.us-east-2.compute.amazonaws.com:8080',\n  // url: 'http://localhost:8080',\n  token: '',\n};\n\nexport default api;\n","import axios from 'axios';\nimport api from '../../utils/services';\n\nexport const registration = (body) => {\n  return axios\n    .post(`${api.url}/patient/registration`, body)\n    .then(res => res.data)\n    .catch(err => {\n      return err;\n    }); \n};\n\nexport const doctorsRegistration = (body) => {\n  return axios\n    .post(`${api.url}/doctorService/createNewDoctorsRecord`, body)\n    .then(res => res.data)\n    .catch(err => {\n      return err;\n    }); \n};\n","import { useState } from 'react';\nimport { doctorsRegistration } from '../queries';\n// import { listProducts } from '../actions';\n\nconst useDoctorRegistration = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState(false);\n\n  const request = async (body) => {\n    setIsLoading(true);\n\n    const response = await doctorsRegistration(body);\n\n    if (response) {\n      if (response.status === \"SUCCESS\") {\n        setStatus(true);\n      }\n      // dispatch(listProducts(response));\n    } else {\n      // const err = [];\n      setStatus(false);\n      // dispatch(listProducts(err));\n    }\n    setIsLoading(false);\n  };\n\n  return [status, isLoading, request];\n};\n\nexport default useDoctorRegistration;\n","import React, { useEffect } from 'react';\nimport { Form, Input, InputNumber, Button, Select, notification } from 'antd';\nimport '../addDoctor/addDoctor.css';\nimport { departments, doctorsSpeciality, qualifications } from '../../../utils/departmentList';\nimport useDoctorRegistration from '../../../state/registration/hooks/useDoctorRegistration';\n\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 9 },\n};\n// eslint-disable-next-line\nconst validateMessages = {\n    // eslint-disable-next-line\n    required: '${label} is required!',\n    types: {\n        // eslint-disable-next-line\n        email: '${label} is not validate email!',\n        // eslint-disable-next-line\n        number: '${label} is not a validate number!',\n    },\n    number: {\n        // eslint-disable-next-line\n        range: '${label} must be between ${min} and ${max}',\n    },\n};\n\nconst PhonePrefixSelector = (\n    <Form.Item name=\"prefix\" noStyle>\n        <Select defaultValue=\"91\" style={{ width: 70 }}>\n            <Option value=\"91\">+91</Option>\n            <Option value=\"87\">+87</Option>\n        </Select>\n    </Form.Item>\n);\n\nconst department = departments.map(department => <Option key={department}>{department}</Option>);\nconst speciality = doctorsSpeciality.map(speciality => <Option key={speciality}>{speciality}</Option>);\nconst qualification = qualifications.map(qualification => <Option key={qualification}>{qualification}</Option>);\n\n\nfunction handleChange(value) {\n    console.log(`Selected: ${value}`);\n}\n\nconst AddDoctor = () => {\n    const [status, isLoading, setRequest] = useDoctorRegistration();\n\n    useEffect(() => {\n        if (status) {\n            notification[\"success\"]({\n                message: 'SUCCESS',\n                description: 'The Doctor has been registered successfully',\n                duration: 3\n            });\n        }\n    }, [status]);\n\n    const onFinish = formData => {\n        const form = formData.user;\n        const body = {\n            \"empId\": \"test123\",\n            \"doctorName\": form.name,\n            \"department\": form.department,\n            \"experience\": form.experience,\n            \"speciality\": form.speciality,\n            \"highestQualification\": form.highestQualification,\n            \"consulationCharge\": form.consulationCharge,\n            \"designation\": form.designation\n        }\n        setRequest(body);\n    };\n\n\n    return (\n        <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n            <Form.Item name={['user', 'name']} label=\"Name\" rules={[{ required: true }]}>\n                <Input />\n            </Form.Item>\n            <Form.Item label=\"Department\" name={['user', 'department']}>\n                <Select>\n                    {department}\n                </Select>\n            </Form.Item>\n            <Form.Item name={['user', 'experience']} label=\"Experience\" rules={[{ type: 'number', min: 0, max: 99 }]}>\n                <InputNumber />\n            </Form.Item>\n            <Form.Item label=\"Specialization\" name={['user', 'speciality']}>\n                <Select>\n                    {speciality}\n                </Select>\n            </Form.Item>\n            <Form.Item label=\"Highest Qualification\" name={['user', 'highestQualification']}>\n                <Select>\n                    {qualification}\n                </Select>\n            </Form.Item>\n            <Form.Item name={['user', 'designation']} label=\"Designation\">\n                <Input />\n            </Form.Item>\n            <Form.Item name={['user', 'consulationCharge']} label=\"Consultation Charges\" rules={[{ type: 'number', min: 0, max: 10000 }]}>\n                <InputNumber />\n            </Form.Item>\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default AddDoctor;\n","import axios from 'axios';\nimport api from '../../utils/services';\n\nexport const bookAppointment = (body) => {\n  return axios\n    .post(`${api.url}/HMServiceController/createNewAppointment`, body)\n    .then(res => res.data)\n    .catch(err => {\n      return err;\n    });\n};\n\nexport const getAppointmentByDoctorId = (doctorId) => {\n  return axios\n    .get(`${api.url}/HMServiceController/getAppointmentList?numberOfDays=30&startIndex=0&pazeSize=30&doctorId=` + doctorId)\n    .then(res => res.data)\n    .catch(err => {\n      return err.response;\n    });\n};\n\nexport const getAppointmentByPatientId = (patientId) => {\n  return axios\n    .get(`${api.url}/HMServiceController/getAppointmentListByPatientId?numberOfDays=30&startIndex=0&pazeSize=30&patientId=` + patientId)\n    .then(res => res.data)\n    .catch(err => {\n      return err.response;\n    });\n};","import { useState } from 'react';\nimport { bookAppointment } from '../queries';\n\nconst useBookAppointment = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState(false);\n\n  const request = async (body) => {\n    setIsLoading(true);\n\n    const response = await bookAppointment(body);\n\n    if (response) {\n      if (response.status === \"SUCCESS\") {\n        setStatus(true);\n      }\n      // dispatch(listProducts(response));\n    } else {\n      // const err = [];\n      setStatus(false);\n      // dispatch(listProducts(err));\n    }\n    setIsLoading(false);\n  };\n\n  return [status, isLoading, request];\n};\n\nexport default useBookAppointment;\n","import axios from 'axios';\nimport api from '../../utils/services';\n\nexport const getAllPatients = () => {\n  return axios\n    .get(`${api.url}/patient/patientsList`)\n    .then(res => res.data)\n    .catch(err => {\n      return err.response;\n    });\n};\n\nexport const getPatientByName = (patientName) => {\n  return axios\n    .get(`${api.url}/patient/patientByName?patientName=` + patientName)\n    .then(res => res.data)\n    .catch(err => {\n      return err.response;\n    });\n};\n\nexport const getPatientById = (patientId) => {\n  return axios\n    .get(`${api.url}/patient/patientById?patientId=` + patientId)\n    .then(res => res.data)\n    .catch(err => {\n      return err.response;\n    });\n};\n\n\nexport const getAllDoctors = () => {\n  return axios\n    .get(`${api.url}/doctorService/getDoctorsList`)\n    .then(res => res.data)\n    .catch(err => {\n      return err.response;\n    });\n};\n\nexport const getAllDoctorsByDepartment = (name) => {\n  return axios\n    .get(`${api.url}/doctorService/getDoctorsListByDepartment?departmentName=` + name)\n    .then(res => res.data)\n    .catch(err => {\n      return err.response;\n    });\n};\n\n","import { useState } from 'react';\nimport { getAllDoctorsByDepartment } from '../queries';\n// import { listProducts } from '../actions';\n\nconst useGetAllDoctorByDepartment = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [patients, setPatients] = useState([]);\n\n  const request = async (deptname) => {\n    setIsLoading(true);\n\n    const response = await getAllDoctorsByDepartment(deptname);\n    if (response) {\n        setPatients(response);\n    } else {\n      // const err = [];\n      setPatients([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [patients, isLoading, request];\n};\n\nexport default useGetAllDoctorByDepartment;\n","import { useState } from 'react';\nimport { getAllDoctors } from '../queries';\n// import { listProducts } from '../actions';\n\nconst useGetAllDoctors = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [patients, setPatients] = useState([]);\n\n  const request = async () => {\n    setIsLoading(true);\n\n    const response = await getAllDoctors();\n    if (response) {\n        setPatients(response);\n    } else {\n      // const err = [];\n      setPatients([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [patients, isLoading, request];\n};\n\nexport default useGetAllDoctors;\n","import { useState } from 'react';\nimport { getPatientById } from '../queries';\n\nconst usePatientById = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [patients, setPatients] = useState({});\n\n  const request = async (patientId) => {\n    setIsLoading(true);\n\n    const response = await getPatientById(patientId);\n    if (response) {\n        setPatients(response);\n    } else {\n      // const err = [];\n      setPatients([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [patients, isLoading, request];\n};\n\nexport default usePatientById;\n","import React, { useEffect, useState } from 'react';\nimport { Divider, Descriptions, Badge } from 'antd';\nimport usePatientSearchbyId from '../../state/patientSearch/hooks/usePatientSearchbyId';\n\nconst PatientDetails = (prop) => {\n    const [patient, isLoading, setRequest] = usePatientSearchbyId();\n\n    useEffect(() => {\n        if(prop.patientId != null) {\n            setRequest(prop.patientId);\n        }\n    }, [prop.patientId]);\n\n    return (\n        <>\n            <Divider>Patient Details</Divider>\n            <Descriptions bordered>\n                <Descriptions.Item label=\"Name\">{patient.patientName}</Descriptions.Item>\n                <Descriptions.Item label=\"Visit Type\">{patient.visitType}</Descriptions.Item>\n                <Descriptions.Item label=\"Age\">{patient.age}</Descriptions.Item>\n                <Descriptions.Item label=\"Contact\">{patient.contactNum}</Descriptions.Item>\n                <Descriptions.Item label=\"Status\" span={3}>\n                    <Badge status=\"success\" text=\"Active\" />\n                </Descriptions.Item>\n            </Descriptions>\n        </>);\n};\n\nexport default PatientDetails;\n","const timeSlot = (date, startTime, endTime, interval) => {\n    // date.setHours(startTime);\n    let startDate = date;\n    startDate.setHours(startTime);\n    // date.setHours(endTime);\n    let endDate = date;\n    endDate.setHours(endTime);\n    console.log(startDate);\n    console.log(endDate);\n    let start = startDate.getTime();\n    let end = endDate.getTime();\n    var timeSlots = [];\n\n    while (start < end) {\n        timeSlots.push([new Date(start), new Date(start += interval * 60000)]);\n    }\n    return timeSlots;\n}\n\nexport default timeSlot;","const hospitalDetails = {\n    name: 'Medi World Hospital',\n    address: 'East Ramakrishna Nagar, Near ICICI Bank, New Bypass Road, Patna-800027',\n    contact: '8002727800',\n};\n\nexport default hospitalDetails;","import React, { useRef } from 'react';\nimport { Descriptions, Divider } from 'antd';\nimport logo from '../../../assets/images/logo.jpg';\nimport hospitalDetails from '../../../utils/constants';\n\nexport class AppointmentCardPrint extends React.Component {\n    render() {\n        const appointmentDetails = this.props.appointmentDetails;\n\n        return (\n            <>\n                <div id=\"wrapper\" style={{ marginTop: '30px', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                    <div>\n                        <img style={{ width: \"400px\", margin: \"0 auto\" }} src={logo} />\n                        <div style={{ marginLeft: '20px', fontSize: '12px', fontWeight: 'bold' }}>\n                            <p>{hospitalDetails.address}</p>\n                            <p>Contact: {hospitalDetails.contact}</p>\n                        </div>\n                    </div>\n                    <div style={{ width: '100%', height: '2px', background: 'grey', margin: '10px 0px' }}></div>\n                    <div style={{ marginTop: '50px' }}>\n                       <h3 style={{fontWeight: 'bold', fontSize: '30px'}}>Appointment Card</h3>\n                    </div>\n                    <div style={{ marginTop: '50px', width: '100%', padding: '20px' }}>\n                    <div style={{ fontSize: '25px' ,  float: 'left'}}>\n                        <p><b>Patient Name:</b> {appointmentDetails.patientName}</p>\n                        <p><b>Doctor Name:</b> {appointmentDetails.doctorName}</p>\n                        <p><b>Date and Time:</b> {appointmentDetails.dateAndTime}</p>\n                        <p><b>Department: </b>{appointmentDetails.department}</p>\n                    </div>  \n                    </div>\n\n                    <div style={{ marginTop: '50px', width: '100%', padding: '20px' }}>\n                        <div style={{ float: 'right' }}>Director Signature</div>\n\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n","import { Button, Calendar, Card, Col, Divider, notification, Row, Select, Input, Form } from 'antd';\nimport moment from 'moment';\nimport queryString from 'query-string';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useReactToPrint } from 'react-to-print';\nimport useBookAppointment from '../../state/appointment/hooks/useBookAppointment';\nimport useGetAllDoctorByDepartment from '../../state/patientSearch/hooks/useGetAllDoctorByDepartment';\nimport useGetAllDoctors from '../../state/patientSearch/hooks/useGetAllDoctors';\nimport usePatientSearchbyId from '../../state/patientSearch/hooks/usePatientSearchbyId';\nimport { departments } from '../../utils/departmentList';\nimport '../appointment/appointment.css';\nimport PatientDetails from '../patientDetails';\nimport timeSlot from '../../utils/timeSlot';\nimport { AppointmentCardPrint } from './components/appointmentCardPrint';\nconst { Option } = Select;\nconst { Search } = Input;\n\nfunction disabledDate(current) {\n    // Can not select days before today and today\n    return current && current < moment().endOf('day');\n}\n\nconst department = departments.map(department => <Option key={department}>{department}</Option>);\n\nconst Appointment = ({ location, history }) => {\n    let doctorsList = [];\n    let timeSlots = [];\n    let appointmentDetails = {\n        patientName: '',\n        doctorName: '',\n        dateAndTime: '',\n        department: ''\n    };\n    // let selectedDoctor = \"\";\n    const map = new Map();\n    const queryParams = queryString.parse(location.search);\n    const [selectedDepartment, setSelectedDepartment] = useState(\"all\");\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const componentRef = useRef();\n    const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n    const [doctors, isLoading, setRequest] = useGetAllDoctors();\n    const [patientDetails, isLoading2, setPatientSearchById] = usePatientSearchbyId();\n    const [doctorBydepartment, isLoadings, callDoctorByDepartment] = useGetAllDoctorByDepartment();\n    const [status, isLoading1, setBookAppointment] = useBookAppointment();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    useEffect(() => {\n        if (selectedDepartment === \"all\") {\n            setRequest();\n            if (queryParams.patientId != null) {\n                setPatientSearchById(queryParams.patientId);\n            } else {\n                setPatientSearchById(patientDetails.patientId);\n            }\n\n\n        } else {\n            callDoctorByDepartment(selectedDepartment);\n        }\n        if (status) {\n            notification[\"success\"]({\n                message: 'SUCCESS',\n                description: 'Appointment successfully booked for patient with id ' + queryParams.patientId + 'and Doctor ' + selectedDoctor,\n                duration: 3\n            });\n        }\n    }, [selectedDepartment, status]);\n\n    if (selectedDepartment !== \"all\") {\n        if (doctorBydepartment.length > 0) {\n            doctorsList = doctorBydepartment.map(doctor => {\n                map.set(doctor.doctorId, doctor);\n                return <Option key={doctor.doctorId} >{doctor.doctorName}</Option>;\n            });\n        }\n    } else {\n        if (doctors.length > 0) {\n            doctorsList = doctors.map(doctor => {\n                map.set(doctor.doctorId, doctor);\n                return <Option key={doctor.doctorId} >{doctor.doctorName}</Option>\n            });\n        }\n    }\n    function handleChange(value) {\n        setSelectedDepartment(value);\n    }\n    function onDateSelect(value) {\n        setSelectedDate(new Date(value));\n    }\n\n    function handleChangeOfDoctor(value) {\n        // selectedDoctor = value;\n        setSelectedDoctor(value);\n    }\n\n    function bookAppointment() {\n        const body = {\n            \"diseaseDesc\": \"test desc\",\n            \"advise\": \"test\",\n            \"patientId\": patientDetails.patientId,\n            \"patientName\": patientDetails.patientName,\n            \"doctorId\": selectedDoctor,\n            \"appointmentDate\": selectedDate.getTime(),\n            \"height\": 6,\n            \"weight\": 80,\n            \"Bp\": \"120/80\"\n        };\n        if (patientDetails.patientId != null) {\n            setBookAppointment(body);\n        } else {\n            notification[\"error\"]({\n                message: 'Failed',\n                description: 'Please Enter a valid patient Id!',\n                duration: 3\n            });\n        }\n\n    }\n    let MainButton = \"\";\n    let appointmentCard = \"\";\n    if (!status) {\n        MainButton = <Button type=\"primary\" size=\"large\" htmlType=\"submit\">Book Appointment</Button>;\n    } else {\n        console.log(\"dsadsad\" + selectedDoctor);\n        MainButton = <Button type=\"primary\" size=\"large\" onClick={() => {\n            console.log(patientDetails.patientId,);\n            history.push({ pathname: '/home/billing', search: '?patientId='.concat(patientDetails.patientId) + '&doctorName=' + map.get(selectedDoctor).doctorName + '&charges=' + map.get(selectedDoctor).consulationCharge + '&context=consulation' })\n        }}>Go To Billing</Button>;\n        appointmentDetails = {\n            patientName: patientDetails.patientName,\n            doctorName: map.get(selectedDoctor).doctorName,\n            dateAndTime: selectedDate.toDateString(),\n            department: selectedDepartment\n        };\n        appointmentCard = (<Card title=\"Appointment Details\" extra={<a href=\"#\" onClick={handlePrint}>Print</a>} style={{ width: 300 }}>\n            <p>Appointment booked for :</p>\n            <p>{patientDetails.patientName}</p>\n            <p>on {selectedDate.toDateString()}</p>\n            <p>At {selectedDepartment}</p>\n            <p>With Dr. {map.get(selectedDoctor).doctorName}</p>\n        </Card>);\n    }\n\n    timeSlots = timeSlot(new Date(), 2, 4, 15).map(val => <Option key={val} >val</Option>);\n    const onPatientSearch = value => {\n        setPatientSearchById(value);\n    };\n    return (\n        <>\n            <Search\n                placeholder=\"Search Patient By Id\"\n                allowClear\n                enterButton=\"Search\"\n                size=\"large\"\n                style={{ width: '40%' }}\n                onSearch={onPatientSearch}\n            />\n            <br />\n            <PatientDetails patientId={patientDetails.patientId} />\n            <br></br>\n            <Divider>Appointment Booking</Divider>\n            <Form name=\"nest-messages\" onFinish={bookAppointment}>\n                <Row>\n                    <Col span={8}>\n                        <div className=\"site-calendar-demo-card\">\n                            <Calendar fullscreen={false} onSelect={onDateSelect} disabledDate={disabledDate} />\n                        </div>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item name={['user', 'departmentName']}>\n                            <Select\n                                showSearch\n                                defaultValue=\"all\"\n                                onChange={handleChange}\n                                placeholder=\"Select Department\" style={{ width: 300 }}\n                                optionFilterProp=\"children\"\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }>\n                                <Option value=\"all\">All</Option>\n                                {department}\n                            </Select>\n                        </Form.Item>\n                        <br /><br /><br />\n                        <Form.Item name={['user', 'doctorName']} rules={[{ required: true }]}>\n                            <Select\n                                onChange={handleChangeOfDoctor}\n                                showSearch\n                                placeholder=\"Select Doctor\" style={{ width: 300 }}\n                                optionFilterProp=\"children\"\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }>\n                                {doctorsList}\n                            </Select>\n                        </Form.Item>\n\n                        <br /><br /><br />\n                        <Form.Item name={['user', 'timeSlot']}>\n                            <Select placeholder=\"Select Time Slot\" style={{ width: 300 }}>\n                                {timeSlots}\n                                {/* <Option value=\"jack\">11:30 - 11:45</Option>\n                                <Option value=\"jack1\">11:30 - 11:45</Option>\n                                <Option value=\"jack2\">11:30 - 11:45</Option>\n                                <Option value=\"jack3\">11:30 - 11:45</Option>\n                                <Option value=\"jack4\">11:30 - 11:45</Option>\n                                <Option value=\"jack5\">11:30 - 11:45</Option> */}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <div style={{ display: 'none' }}>\n                            <AppointmentCardPrint ref={componentRef} appointmentDetails={appointmentDetails} />\n                        </div>\n                        {appointmentCard}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={12} offset={10}>\n                        {MainButton}\n                    </Col>\n                </Row>\n            </Form>\n        </>);\n};\n\nexport default Appointment;\n","import axios from 'axios';\nimport api from '../../utils/services';\n\nconst rootURI = `${api.url}/HMServiceController/fetchBillDtails`;\nexport const searchBillDetails = (id, filterType) => {\n    let url = '';\n    if (filterType === 'patientId') {\n        url = `${rootURI}?patientId=` + id + '&billId=';\n    } else if (filterType === 'billId') {\n        url = `${rootURI}?billId=` + id + '&patientId=';\n    } else if (filterType === 'receiptId') {\n        url = `${rootURI}?billId=` + id + '&patientId=';\n    }\n    return axios\n        .get(url)\n        .then(res => res.data)\n        .catch(err => {\n            return err.response;\n        });\n};\n\nexport const saveGenerateBill = (body) => {\n    return axios\n        .post(`${api.url}/HMServiceController/generateBill`, body)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};\n","import { useState } from 'react';\nimport { searchBillDetails } from '../queries';\n\nconst useBillSearch = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [patients, setPatients] = useState({});\n\n    const request = async (patientId, filter) => {\n        setIsLoading(true);\n\n        const response = await searchBillDetails(patientId, filter);\n        if (response) {\n            setPatients(response);\n        } else {\n            // const err = [];\n            setPatients(null);\n        }\n        setIsLoading(false);\n    };\n\n    return [patients, isLoading, request];\n};\n\nexport default useBillSearch;\n","import axios from 'axios';\nimport api from '../../utils/services';\n\nexport const savePharmacyMedicine = (body) => {\n    return axios\n        .post(`${api.url}/pharmacyController/saveOrUpdatePharmacyMedicine`, body)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};\n\nexport const saveSupplier = (body) => {\n    return axios\n        .post(`${api.url}/pharmacyController/saveSupplier`, body)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};\n\nexport const savePurchaseOrder = (body) => {\n    return axios\n        .post(`${api.url}/pharmacyController/saveOrUpdatePurchaseOrder`, body)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};\n\nexport const deletePurchaseOrder = (body) => {\n    return axios\n        .delete(`${api.url}/pharmacyController/deletePurchaseOrder`, body)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};\n\nexport const getPurchaseOrderDetails = (purchaseOrderId) => {\n    return axios\n        .get(`${api.url}/pharmacyController/getPurchaseOrderDetails?purchaseOrderId=` + purchaseOrderId)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};\n\nexport const getPurchaseOrderList = () => {\n    return axios\n        .get(`${api.url}/pharmacyController/getPurchaseOrderList`)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};\n\nexport const getSuppliersList = () => {\n    return axios\n        .get(`${api.url}/pharmacyController/getSupplierList`)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};\n\nexport const getPharmacyMedicineList = () => {\n    return axios\n        .get(`${api.url}/pharmacyController/getMedicineList`)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};\n\nexport const getPharmacyMedicineDetail = (medicineId) => {\n    return axios\n        .get(`${api.url}/pharmacyController/getMedicineDetails?medicineId=` + medicineId)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};","import { useState } from 'react';\nimport { getPharmacyMedicineList } from '../queries';\n// import { listProducts } from '../actions';\n\nconst useGetPharmacyMedicines = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [medicines, setMedicineList] = useState([]);\n\n  const request = async () => {\n    setIsLoading(true);\n\n    const response = await getPharmacyMedicineList();\n    if (response) {\n        setMedicineList(response);\n    } else {\n      // const err = [];\n      setMedicineList([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [medicines, isLoading, request];\n};\n\nexport default useGetPharmacyMedicines;","import axios from 'axios';\nimport api from '../../utils/services';\n\nexport const addMedicine = (body) => {\n  return axios\n    .post(`${api.url}/medicine/medicine`, body)\n    .then(res => res.data)\n    .catch(err => {\n      return err;\n    }); \n};\n\nexport const getAllMedicines = () => {\n  return axios\n    .get(`${api.url}/medicine/medicineList`)\n    .then(res => res.data)\n    .catch(err => {\n      return err;\n    });\n};\n\nexport const getAllTests = () => {\n  return axios\n    .get(`${api.url}/test/testList`)\n    .then(res => res.data)\n    .catch(err => {\n      return err\n    });\n};\n\nexport const addTest = (body) => {\n  return axios\n    .post(`${api.url}/test/test`, body)\n    .then(res => res.data)\n    .catch(err => {\n      return err;\n    }); \n};","import { useState } from 'react';\nimport { getAllMedicines, getAllTests } from '../queries';\n\nconst useTestSearch = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [patients, setPatients] = useState([]);\n\n  const request = async () => {\n    setIsLoading(true);\n\n    const response = await getAllTests();\n    if (response) {\n        setPatients(response);\n    } else {\n      // const err = [];\n      setPatients([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [patients, isLoading, request];\n};\n\nexport default useTestSearch;","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, InputNumber, Radio, Divider, Descriptions, Select, Badge, Table, Row, Col, AutoComplete } from 'antd';\nimport useGetPharmacyMedicines from '../../../state/pharmacy/hooks/useGetAllPharmacyMedicines';\nimport useTestSearch from '../../../state/addMedicine/hooks/useSearchTest';\nconst { Option } = Select;\n\nconst AddItem = (props) => {\n    const medicineMap = new Map();\n    const testMap = new Map();\n    let options = [\n        // { value: 'light', label: 'Light' },\n        // { value: 'bamboo', label: 'Bamboo' },\n    ];\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    const [selected, setSelected] = useState(\"medicine\");\n    const [medicines, isLoading, setMedicineSearch] = useGetPharmacyMedicines();\n    const [tests, isLoading1, setTestSearch] = useTestSearch();\n    // const [options, isLoading, setMedicineSearch] = useGetPharmacyMedicines();\n    useEffect(() => {\n        setMedicineSearch();\n    }, []);\n\n    if (selected == \"test\") {\n        options = [...tests.map(test => {\n            testMap.set();\n            return { value: test.testName, label: test.testName };\n        })];\n    } else if (selected == \"medicine\") {\n        if (medicines.length > 0) {\n            \n            medicines.forEach(medicine => {\n                medicineMap.set(medicine.medicineName, medicine);\n                options.push({ value: medicine.medicineName, label: medicine.medicineName });\n            });\n        }\n    } else if (selected == \"consultation\") {\n        if (medicines.length > 0) {\n            medicines.forEach(medicine => {\n                options.push({ value: medicine.medicineName, label: medicine.medicineName });\n            });\n        }\n    }\n\n    function onFinish(value) {\n        let amount = 0;\n        if(selected == \"medicine\") {\n         amount = medicineMap.get(value.user.name).salePrice;\n        } else if (selected == \"test\") {\n\n        }\n        const obj = {\n            itemId: \"\",\n            name : value.user.name,\n            quantity : value.user.quantity,\n            amount: amount\n        }\n        props.onItemAdded(obj);\n    }\n    function onItemTypeSelect(value) {\n        setSelected(value);\n        if (value == \"test\") {\n            setTestSearch();\n        }\n    }\n\n    return (\n        <Form {...layout} name=\"nest-messages\" onFinish={onFinish} >\n            <Form.Item name={['user', 'name']} label=\"Item name\" rules={[{ required: true }]}>\n                <AutoComplete\n                    dropdownClassName=\"certain-category-search-dropdown\"\n                    dropdownMatchSelectWidth={500}\n                    style={{ width: '100%' }}\n                    options={options}\n                >\n                    <Input.Search size=\"default\" placeholder=\"Item name\" />\n                </AutoComplete>\n            </Form.Item>\n            <Form.Item name={['user', 'quantity']} label=\"Quantity\" rules={[{ type: 'number' }]}>\n                <InputNumber />\n            </Form.Item>\n            <Form.Item name={['user', 'itemType']} label=\"Item type\" >\n                <Select onSelect={onItemTypeSelect} defaultValue=\"medicine\" placeholder=\"Item type\">\n                    <Option value=\"medicine\">Medicine</Option>\n                    <Option value=\"test\">Test</Option>\n                    <Option value=\"consulation\">Consulation</Option>\n                </Select>\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Add Item\n                </Button>\n            </Form.Item>\n        </Form>);\n};\nexport default AddItem;","import React, { useRef } from 'react';\nimport '../components/billingPrint.css';\nimport logo from '../../../assets/images/logo.jpg';\nimport hospitalDetails from '../../../utils/constants';\n\nexport class BillPrint extends React.Component {\n    render() {\n        const itemList = this.props.itemList;\n        const billId = this.props.billId;\n        const patientId = this.props.patientId;\n        const patientDetails = this.props.patientDetails;\n        const finalCharges = this.props.finalCharges;\n        const todaysDate = (new Date()).toDateString() + + ' ' + (new Date()).toLocaleTimeString();\n        const itemArray = itemList.map(item => {\n            return (\n                <tr>\n                    <td>{item.name}</td>\n                    <td>{item.quantity}</td>\n                    <td>{item.amount}</td>\n                    <td>{item.gst}</td>\n                    <td>{item.discount}</td>\n                    <td>{item.total}</td>\n                </tr>)\n        });\n\n        return (\n            <>\n                <div id=\"wrapper\" style={{ marginTop: '30px', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                    <div>\n                        <img style={{ width: \"400px\", margin: \"0 auto\" }} src={logo} />\n                        <div style={{ marginLeft: '20px', fontSize: '12px', fontWeight: 'bold' }}>\n                            <p>{hospitalDetails.address}</p>\n                            <p>Contact: {hospitalDetails.contact}</p>\n                        </div>\n                    </div>\n                    <div style={{ width: '100%', height: '2px', background: 'grey', margin: '10px 0px' }}></div>\n                    <table border=\"1\" cellpadding=\"5\" cellspacing=\"5\" width=\"100%\">\n                        <tr>\n                            <th>Name</th>\n                            <th>{patientDetails.patientName}</th>\n                            <td>Age</td>\n                            <td>{patientDetails.age}</td>\n                        </tr>\n                        <tr>\n                            <td>PatientId</td>\n                            <td>{patientId}</td>\n                            <td>BillId</td>\n                            <td>{billId}</td>\n                        </tr>\n                        <tr>\n                            <td>Date</td>\n                            <td>{todaysDate}</td>\n                            <td>Visit type</td>\n                            <td>{patientDetails.visitType}</td>\n                        </tr>\n                    </table>\n                    <br></br>\n                    <table id=\"customers\">\n                        <tr>\n                            <th>Item Name</th>\n                            <th>Quantity</th>\n                            <th>Amount</th>\n                            <th>GST(CGST + SGST)</th>\n                            <th>Discount(%)</th>\n                            <th>Total</th>\n                        </tr>\n                        {itemArray}\n                        <tr>\n                            <td colspan=\"4\"></td>\n                            <td>Total</td>\n                            <td>{finalCharges.totalAmount}</td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"4\"></td>\n                            <td>Discount</td>\n                            <td>{finalCharges.totalDiscount}</td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"4\"></td>\n                            <td>Tax</td>\n                            <td>{finalCharges.totalGST}</td>\n                        </tr>\n                    </table>\n                    <div style={{ marginTop: '50px', width: '100%', padding: '20px' }}>\n                        <div>Cashier Signature</div>\n                        <div style={{ float: 'right' }}>Director Signature</div>\n\n                    </div>\n                </div>\n\n            </>\n\n        );\n    }\n}\n","import React, { useState } from 'react';\nimport { Form, Input, Button, InputNumber, Radio, Divider, Descriptions, Select, Badge, Table, Row, Col } from 'antd';\nconst { Option } = Select;\n\nconst BillSearch = (props) => {\n    const defaultSearch = \"patientId\";\n    const [filterValue, setfilterValue] = useState(defaultSearch);\n\n    function onSearch(value) {\n        props.onSearch(value, filterValue);\n    }\n    return (\n                <Input.Group compact>\n                    <Select defaultValue={defaultSearch} onSelect={setfilterValue}>\n                        <Option value=\"patientId\">Patient Id</Option>\n                        <Option value=\"billId\">Bill Id</Option>\n                        <Option value=\"receiptId\">Receipt Id</Option>\n                    </Select>\n                    <Input.Search onSearch={onSearch} style={{ width: '70%' }} placeholder=\"Search by\" />\n                </Input.Group>);\n};\nexport default BillSearch;\n","import React, { useState } from 'react';\nimport { Form, Input, Button, InputNumber, Radio, Divider, Descriptions, Select, Badge, Table, Row, Col } from 'antd';\nconst { Option } = Select;\n\nconst FinalCharges = (props) => {\n  function onDiscountChange(value) {\n    props.onDiscountChange(value);\n  }\n  return (\n    <Form name=\"final_charges\">\n      <Row gutter={24}>\n        <Col span={8} key={1}>\n          <Form.Item label=\"Total Amount\">\n            <span className=\"ant-form-text\">{props.finalCharges.totalAmount}</span>\n          </Form.Item>\n        </Col>\n        <Col span={8} key={2}>\n          <Form.Item label=\"Total discount(%)\">\n            <span className=\"ant-form-text\">{props.finalCharges.totalDiscount}</span>\n          </Form.Item>\n        </Col>\n        <Col span={8} key={3}>\n          <Form.Item label=\"Total GST\">\n            <span className=\"ant-form-text\">{props.finalCharges.totalGST}</span>\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>);\n};\nexport default FinalCharges;","import { useState } from 'react';\nimport { saveGenerateBill } from '../queries';\n\nconst useSaveGenerateBill = () => {\n  const [responseObj, setResponseObj] = useState({});\n\n  const request = async (body) => {\n    const response = await saveGenerateBill(body);\n    if (response) {\n      if (response.response == \"success\") {\n        setResponseObj(response);\n      }\n    } else {\n      setResponseObj(null);\n    }\n  };\n\n  return [responseObj, request];\n};\n\nexport default useSaveGenerateBill;\n","import { Button, Col, Descriptions, Divider, Form, Input, InputNumber, notification, Radio, Row, Select, Table, Popconfirm, Modal } from 'antd';\nimport queryString from 'query-string';\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport { useReactToPrint } from 'react-to-print';\nimport useBillSearch from '../../state/billing/hooks/useBillSearch';\nimport PatientDetails from '../patientDetails';\nimport AddItem from './components/addItemModal';\nimport { BillPrint } from './components/billPrint';\nimport BillSearch from './components/billSearch';\nimport FinalCharges from './components/finalCharges';\nimport usePatientSearchbyId from '../../state/patientSearch/hooks/usePatientSearchbyId';\nimport useSaveGenerateBill from '../../state/billing/hooks/useGenerateBill';\nimport { saveGenerateBill } from '../../state/billing/queries';\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef();\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async (e) => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n        <div\n          className=\"editable-cell-value-wrap\"\n          style={{\n            paddingRight: 24,\n          }}\n          onClick={toggleEdit}\n        >\n          {children}\n        </div>\n      );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\nconst Billing = ({ location, history }) => {\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n  let columns = [\n    {\n      title: 'Item Name',\n      dataIndex: 'name',\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      editable: \"true\",\n      width: '10%',\n    },\n    {\n      title: 'Amount',\n      dataIndex: 'amount',\n      sorter: {\n        compare: (a, b) => a.amount - b.amount,\n        multiple: 3,\n      },\n    },\n    {\n      title: 'GST(CGST+SGST)',\n      dataIndex: 'gst',\n      sorter: {\n        compare: (a, b) => a.gst - b.gst,\n        multiple: 3,\n      },\n    },\n    {\n      title: 'Discount(%)',\n      dataIndex: 'discount',\n      editable: \"true\",\n      width: '10%',\n      sorter: {\n        compare: (a, b) => a.discount - b.discount,\n        multiple: 2,\n      },\n    },\n    {\n      title: 'Total',\n      dataIndex: 'total',\n      sorter: {\n        compare: (a, b) => a.total - b.total,\n        multiple: 1,\n      },\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) =>\n        <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n          <a>Delete</a>\n        </Popconfirm>\n    }\n  ];\n  columns = columns.map((col) => {\n    if (col.editable == \"false\") {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        editable: col.editable,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        handleSave: handleSave,\n      }),\n    };\n  });\n  function handleSave(row) {\n    const newData = [...data];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    const finalCharges = getFinalCharges([row]);\n    row.total = finalCharges.discountedAmount + finalCharges.totalGST;\n    newData.splice(index, 1, { ...item, ...row });\n    setData(newData);\n    calculateTotalCharges(newData);\n  };\n\n  let showSearch = \"\";\n  const defaultbillDetails = {\n    billId: '',\n    createdAt: (new Date()).toDateString() + ' ' + (new Date()).toLocaleTimeString()\n  };\n\n  const defaultFinalCharges = {\n    totalAmount: 0,\n    totalDiscount: 0,\n    totalGST: 0\n  };\n  const mockData = [{\n    key: '1',\n    name: \"test1\",\n    quantity: 1,\n    amount: 100,\n    gst: 10,\n    discount: 34,\n    total: 100,\n  }, {\n    key: '2',\n    name: \"test2\",\n    quantity: 1,\n    amount: 100,\n    gst: 10,\n    discount: 0,\n    total: 100,\n  }];\n  let generateBillButton = <Col className=\"gutter-row\" span={3}>\n    <Button style={{ width: '90%' }} type=\"primary\" onClick={generateBill}>Generate Bill</Button>\n  </Col>;\n  let printButton = \"\";\n  const [showFilter, setShowFilter] = useState(\"patientId\");\n  const [paymentMode, setPaymentMode] = useState(\"Cash\");\n  const [billResponse, isLoading, setBillSearch] = useBillSearch();\n  const [generateBillStatus, setGenerateBillStatus] = useSaveGenerateBill();\n  const [patient, isLoading1, setRequest] = usePatientSearchbyId();\n  const [isModalVisible, setIsModalVisible] = useState(false);;\n  const [billDetails, setBillDetails] = useState(defaultbillDetails);\n  const [finalCharges, setFinalCharges] = useState(defaultFinalCharges);\n  const [data, setData] = useState([]);\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  const queryParams = queryString.parse(location.search);\n\n  useEffect(() => {\n    calculateTotalCharges(mockData);\n    setData(mockData);\n    if (queryParams.context == 'registration') {\n      const tempData = [\n        {\n          key: '1',\n          name: 'Registration',\n          quantity: 1,\n          amount: 50,\n          gst: 0,\n          discount: 0,\n          total: 50,\n        }];\n      setData(tempData);\n      calculateTotalCharges(tempData);\n      setRequest(queryParams.patientId);\n    } else if (queryParams.context == 'consulation') {\n      const tempData = [\n        {\n          key: '1',\n          name: 'Consultation ' + '(' + (queryParams.doctorName) + ')',\n          quantity: 1,\n          amount: queryParams.charges,\n          gst: 0,\n          discount: 0,\n          total: Number(queryParams.charges) + 0,\n        }];\n      setData(tempData);\n      calculateTotalCharges(tempData);\n      setRequest(queryParams.patientId);\n    } else {\n      showSearch = <BillSearch onSearch={onBillSearch} />;\n    }\n   \n\n    if (generateBillStatus.response == \"success\") {\n      notification[\"success\"]({\n        message: 'SUCCESS',\n        description: 'Bill Generated Successfully with id ' + generateBillStatus.billId,\n        duration: 3\n      });\n      setBillDetails({\n        billId: generateBillStatus.billId,\n        createdAt: (new Date()).toDateString()\n\n      });\n    }\n  }, [generateBillStatus]);\n  if (generateBillStatus.response == \"success\") {\n    generateBillButton = \"\";\n    printButton = <Col className=\"gutter-row\" span={3}>\n      <Button style={{ width: '90%' }} type=\"primary\" onClick={handlePrint}>Print</Button>\n    </Col>;\n  }\n  function getFinalCharges(dataList) {\n    const finalCharges = {\n      totalAmount: 0,\n      totalGST: 0,\n      totalDiscount: 0,\n      discountedAmount: 0\n    }\n\n    dataList.forEach(data => {\n      const discountedAmount = Number.parseInt(data.amount) - ((Number.parseInt(data.discount) / 100) * Number.parseInt(data.amount));\n      finalCharges.totalAmount += Number.parseInt(data.amount);\n      finalCharges.totalDiscount += Number.parseInt(data.discount);\n      finalCharges.discountedAmount += discountedAmount;\n      finalCharges.totalGST += Number.parseInt(data.gst);\n    });\n    return finalCharges;\n  }\n  if (billResponse) {\n    const tempData = [];\n    if (billResponse[\"billDto\"]) {\n      billDetails.billId = billResponse[\"billDto\"][\"billId\"];\n      billDetails.createdAt = new Date(billResponse[\"billDto\"][\"createdAt\"]);\n    }\n    if (billResponse[\"billDto\"] && billResponse[\"medicineList\"]) {\n      const medicineList = billResponse[\"medicineList\"];\n      if (medicineList !== null && medicineList.length > 0) {\n        medicineList.forEach(medicine => {\n          tempData.push({\n            key: '1',\n            name: medicine.medName,\n            quantity: medicine.days,\n            amount: medicine.cost,\n            gst: 10,\n            discount: 0,\n            total: medicine.cost * 1,\n          });\n        });\n      }\n    }\n\n    if (billResponse[\"billDto\"] && billResponse[\"testList\"]) {\n      const testList = billResponse[\"testList\"];\n      if (testList !== null && testList.length > 0) {\n\n        testList.forEach(test => {\n          tempData.push({\n            key: '1',\n            name: test.testId,\n            quantity: 1,\n            amount: test.cost,\n            gst: 10,\n            discount: 0,\n            total: test.cost * 1,\n          });\n        });\n      }\n    }\n    // setData([...data, ...tempData]);\n  }\n\n\n\n  function onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n  }\n\n  function onBillSearch(searchValue, searchFilter) {\n    setBillSearch(searchValue, searchFilter);\n  }\n\n  function onItemAdded(itemFormValue) {\n    const newData = {\n      key: Math.random(),\n      name: itemFormValue.name,\n      quantity: itemFormValue.quantity,\n      amount: itemFormValue.amount,\n      gst: 10,\n      discount: 0,\n      total: itemFormValue.quantity * itemFormValue.amount,\n    }\n    const tempDataList = [...data, newData];\n\n    setData(tempDataList);\n    calculateTotalCharges(tempDataList);\n    setIsModalVisible(false);\n  }\n  function handleDelete(key) {\n    const dataSource = data.filter((item) => item.key !== key);\n    calculateTotalCharges(dataSource)\n    setData(dataSource);\n  };\n\n  function calculateTotalCharges(tempDataList) {\n    const finalCharges = getFinalCharges(tempDataList);\n    console.log(finalCharges);\n    setFinalCharges({\n      totalAmount: finalCharges.discountedAmount + finalCharges.totalGST,\n      totalDiscount: (finalCharges.totalAmount - finalCharges.discountedAmount) / finalCharges.totalAmount * 100,\n      totalGST: finalCharges.totalGST\n    });\n  }\n  function getTotalCharges(itemDetails) {\n    return itemDetails.amount + itemDetails.gst - itemDetails.discount;\n  }\n\n  function onDiscountChange(discountValue) {\n    console.log(\"Discount changed\", discountValue);\n  }\n\n  function paymentMethod(e) {\n    setPaymentMode(e.target.value);\n  }\n\n  function generateBill() {\n    const body = {\n      billId: null,\n      billType: \"\",\n      createdAt: new Date(),\n      paymentStatus: \"paid\",\n      paymentMode: paymentMode,\n      patientId: queryParams.patientId,\n      totalCost: finalCharges.totalAmount,\n      billDetailList: []\n    };\n    data.forEach(item => {\n      const billItem = {\n        id: null,\n        itemName: item.name,\n        itemId: null,\n        billMapId: null,\n        cost: item.total,\n        concessionPercentage: item.discount,\n        mrp: item.amount,\n        concessionType: \"discount\"\n      };\n      body.billDetailList.push(billItem);\n    });\n\n    setGenerateBillStatus(body);\n  }\n\n  return (\n    <>\n      <Modal title=\"Add Item\" visible={isModalVisible} footer={null} onOk={handleOk} onCancel={handleCancel}>\n        <AddItem onItemAdded={onItemAdded} />\n      </Modal>\n      <BillSearch onSearch={onBillSearch} />\n      <PatientDetails patientId={queryParams.patientId} />\n      <div style={{ display: 'none' }}>\n        <BillPrint ref={componentRef} itemList={data} finalCharges={finalCharges} patientDetails={patient} billId={billDetails.billId} patientId={queryParams.patientId} />\n      </div>\n      <Divider>Bill Details</Divider>\n      <Descriptions>\n        <Descriptions.Item label=\"Bill Id\">{billDetails.billId}</Descriptions.Item>\n        {/* <Descriptions.Item label=\"Receipt Id\">{queryParams.receiptId}</Descriptions.Item> */}\n        <Descriptions.Item label=\"Date and time\">{billDetails.createdAt}</Descriptions.Item>\n      </Descriptions>\n      <Button\n        onClick={showModal}\n        type=\"primary\"\n        style={{\n          marginBottom: 16,\n        }}\n      >\n        Add Item\n        </Button>\n      <Table columns={columns} components={components} dataSource={data} onChange={onChange} rowClassName={() => 'editable-row'} />\n\n      <FinalCharges finalCharges={finalCharges} onDiscountChange={onDiscountChange} />\n      <Divider>Payment</Divider>\n      <Radio.Group onChange={paymentMethod} value={paymentMode}>\n        <Radio value=\"Cash\">Cash</Radio>\n        <Radio value=\"Card\">Card</Radio>\n        <Radio value=\"UPI\">UPI</Radio>\n        <Radio value=\"Paytm\">Paytm</Radio>\n      </Radio.Group>\n      <br /><br /><br />\n      <Row gutter={24}>\n        {generateBillButton}\n        {/* <Col className=\"gutter-row\" span={3}>\n          <Button type=\"primary\">Cancel</Button>\n        </Col> */}\n        {printButton}\n\n        <Col className=\"gutter-row\" span={3}>\n          <Button style={{ width: '90%' }} type=\"primary\" onClick={value => history.push({ pathname: '/home/appointment', search: '?patientId='.concat(queryParams.patientId) })}>Go To Appointment</Button>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Billing;","import React, { useEffect } from 'react';\nimport BillSearch from '../billing/components/billSearch';\nimport { Link } from \"react-router-dom\";\nimport { Form, Input, AutoComplete, Badge, Descriptions, Row, Col, Button, Space } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined, UserOutlined, DownloadOutlined, OrderedListOutlined } from '@ant-design/icons';\nconst renderTitle = (title: string) => {\n    return (\n        <span>\n            {title}\n            <a\n                style={{ float: 'right' }}\n                href=\"https://www.google.com/search?q=antd\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                more\n        </a>\n        </span>\n    );\n};\n\nconst renderItem = (title: string, count: number) => {\n    return {\n        value: title,\n        label: (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                }}\n            >\n                {title}\n                <span>\n                    <UserOutlined /> {count}\n                </span>\n            </div>\n        ),\n    };\n};\n\nconst options = [\n    {\n        label: renderTitle('Libraries'),\n        options: [renderItem('AntDesign', 10000), renderItem('AntDesign UI', 10600)],\n    },\n    {\n        label: renderTitle('Solutions'),\n        options: [renderItem('AntDesign UI FAQ', 60100), renderItem('AntDesign FAQ', 30010)],\n    },\n    {\n        label: renderTitle('Articles'),\n        options: [renderItem('AntDesign design language', 100000)],\n    },\n];\n\nconst Canteen = () => {\n    const onFinish = values => {\n        console.log('Received values of form:', values);\n    };\n\n    return (\n        <>\n            <Row>\n                <Col span={6}>\n                    <BillSearch />\n                </Col>\n                <Col span={6}>\n                    <Button type=\"dashed\" icon={<PlusOutlined />}>\n                        New\n                    </Button>\n                    <Button type=\"dashed\" style={{ marginLeft: '5px' }} icon={<OrderedListOutlined />}>\n                        <Link to=\"/home/canteenStock\">View Stock</Link>\n                    </Button>\n                </Col>\n            </Row>\n            <br /><br />\n            <Descriptions title=\"Patient Info\">\n                <Descriptions.Item label=\"Patient Name\">Rishiraj</Descriptions.Item>\n                <Descriptions.Item label=\"Phone\">919829128</Descriptions.Item>\n                <Descriptions.Item label=\"Department\">Ward 1</Descriptions.Item>\n                <Descriptions.Item label=\"Status\" span={3}>\n                    <Badge status=\"warning\" text=\"pending\" />\n                </Descriptions.Item>\n            </Descriptions>\n            <br /><br />\n            <br /><br />\n            <Form name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n                <Form.List name=\"users\">\n                    {(fields, { add, remove }) => {\n                        return (\n                            <div>\n                                {fields.map(field => (\n                                    <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"start\">\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'itemName']}\n                                            fieldKey={[field.fieldKey, 'itemName']}\n                                            rules={[{ required: true, message: 'Missing Item name' }]}\n                                        >\n                                            <AutoComplete\n                                                dropdownClassName=\"certain-category-search-dropdown\"\n                                                dropdownMatchSelectWidth={500}\n                                                style={{ width: 250 }}\n                                                options={options}\n                                            >\n                                                <Input.Search placeholder=\"Search item\" />\n                                            </AutoComplete>\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'price']}\n                                            fieldKey={[field.fieldKey, 'price']}\n                                        >\n                                            <Input placeholder=\"Price\" />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'gst']}\n                                            fieldKey={[field.fieldKey, 'gst']}\n                                        >\n                                            <Input placeholder=\"gst\" />\n                                        </Form.Item>\n                                        <MinusCircleOutlined\n                                            onClick={() => {\n                                                remove(field.name);\n                                            }}\n                                        />\n                                    </Space>\n                                ))}\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"dashed\"\n                                        onClick={() => {\n                                            add();\n                                        }}\n                                        block\n                                    >\n                                        <PlusOutlined /> Add Items\n                                    </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n                {/* <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item> */}\n            </Form>\n            <Descriptions title=\"\">\n                <Descriptions.Item label=\"Total Amount\">100</Descriptions.Item>\n                <Descriptions.Item label=\"Total GST\">15</Descriptions.Item>\n                <Descriptions.Item label=\"Total discount\">0</Descriptions.Item>\n            </Descriptions>\n            <br /><br />\n            <Form.Item>\n                <Row>\n                    <Col span={12} offset={11}>\n                        <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} size='large'>Print</Button>\n                        <Button style={{ marginLeft: '10px' }} type=\"primary\" shape=\"round\" size='large'>Pay Now</Button>\n                        <Button style={{ marginLeft: '10px' }} type=\"primary\" shape=\"round\" size='large'>Add to Bill</Button>\n                    </Col>\n                </Row>\n\n            </Form.Item>\n        </>\n\n    );\n};\nexport default Canteen;\n","import { PlusOutlined } from '@ant-design/icons';\nimport { Button, Divider, Form, Input, InputNumber, Select, Table } from 'antd';\nimport React, { useEffect, useState } from 'react';\n\nconst { Option } = Select;\nconst defaultCategories = ['Meals', 'Drinks', 'Snacks', 'Chinese', 'South Indian'];\nconst columns = [\n    {\n        title: 'Item Name',\n        dataIndex: 'itemName',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.itemName - b.itemName,\n    },\n    {\n        title: 'Price',\n        dataIndex: 'price'\n    },\n    {\n        title: 'Category',\n        dataIndex: 'category',\n        filters: defaultCategories.map(cat => {\n            return {\n                text: cat,\n                value: cat,\n            }\n        }),\n        onFilter: (value, record) => record.category.indexOf(value) === 0,\n        sorter: (a, b) => a.category.length - b.category.length,\n        sortDirections: ['descend'],\n    }\n];\n\nconst CanteenStock = () => {\n    let index = 0;\n    const data = [];\n    const [form] = Form.useForm();\n    const [, forceUpdate] = useState();\n    const [name, setName] = useState(\"\");\n    const [items, setItems] = useState(['Meals', 'Drinks', 'Snacks', 'Chinese', 'South Indian']);\n\n    // To disable submit button at the beginning.\n    useEffect(() => {\n        forceUpdate({});\n    }, []);\n\n    const onFinish = values => {\n        console.log('Finish:', values);\n    };\n    function onNameChange(event) {\n        // console.log(\"sas\", event.target.value);\n        setName(event.target.value);\n    };\n    function addItem() {\n        setName('');\n        setItems([...items, name || `New item ${index++}`]);\n    }\n\n    return (\n        <>\n            <Form form={form} name=\"horizontal_login\" layout=\"inline\" onFinish={onFinish}>\n                <Form.Item\n                    name=\"itemName\"\n                    rules={[{ required: true, message: 'Please enter item name!' }]}\n                >\n                    <Input placeholder=\"Item Name\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"price\"\n                    rules={[{ required: true, message: 'Please enter a price!' }]}\n                >\n                    <InputNumber placeholder=\"Price\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"Category\"\n                >\n                    <Select\n                        style={{ width: 240 }}\n                        placeholder=\"Select category\"\n                        dropdownRender={menu => (\n                            <div>\n                                {menu}\n                                <Divider style={{ margin: '4px 0' }} />\n                                <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                                    <Input style={{ flex: 'auto' }} value={name} onChange={onNameChange} />\n                                    <a\n                                        style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                        onClick={addItem}\n                                    >\n                                        <PlusOutlined /> Add item\n                                    </a>\n                                </div>\n                            </div>\n                        )}\n                    >\n                        {items.map(item => (\n                            <Option key={item}>{item}</Option>\n                        ))}\n                    </Select>\n                </Form.Item>\n                <Form.Item shouldUpdate={true}>\n                    {() => (\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            disabled={\n                                !form.isFieldsTouched(true) ||\n                                form.getFieldsError().filter(({ errors }) => errors.length).length\n                            }\n                        >\n                            Add Item\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <br /><br /><br />\n            <Table columns={columns} dataSource={data} />\n        </>\n    );\n};\n\n\nexport default CanteenStock;\n","import { useState } from 'react';\nimport { getAllPatients } from '../queries';\n// import { listProducts } from '../actions';\n\nconst usePatientSearch = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [patients, setPatients] = useState([]);\n\n  const request = async () => {\n    setIsLoading(true);\n\n    const response = await getAllPatients();\n    if (response) {\n        setPatients(response);\n    } else {\n      // const err = [];\n      setPatients([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [patients, isLoading, request];\n};\n\nexport default usePatientSearch;\n","import { useState } from 'react';\nimport { getAppointmentByDoctorId } from '../queries';\n\nconst useGetAppointmentByDoctorId = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [patients, setPatients] = useState([]);\n\n  const request = async (doctorId) => {\n    setIsLoading(true);\n\n    const response = await getAppointmentByDoctorId(doctorId);\n\n    if (response) {\n        setPatients(response);\n    } else {\n      // const err = [];\n      setPatients([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [patients, isLoading, request];\n};\n\nexport default useGetAppointmentByDoctorId;\n","import { useState } from 'react';\nimport { getAppointmentByPatientId } from '../queries';\n\nconst useGetAppointmentByPatientId = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [patients, setPatients] = useState([]);\n\n  const request = async (patientId) => {\n    setIsLoading(true);\n\n    const response = await getAppointmentByPatientId(patientId);\n\n    if (response) {\n        setPatients(response);\n    } else {\n      // const err = [];\n      setPatients([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [patients, isLoading, request];\n};\n\nexport default useGetAppointmentByPatientId;\n","import React, { useState, useEffect } from 'react';\nimport { Table, Tag, DatePicker, Button, TimePicker, Select, Space, Input } from 'antd';\nimport usePatientSearch from '../../state/patientSearch/hooks/usePatientSearch';\nimport useGetAllDoctors from '../../state/patientSearch/hooks/useGetAllDoctors';\nimport useGetAppointmentByDoctorId from '../../state/appointment/hooks/useGetAppointmentsByDoctorId';\nimport useGetAppointmentByPatientId from '../../state/appointment/hooks/useGetAppointmentByPatientId';\nconst { Option } = Select;\nconst { Search } = Input;\nfunction PickerWithType({ type, onChange }) {\n    if (type === 'time') return <TimePicker onChange={onChange} />;\n    if (type === 'date') return <DatePicker onChange={onChange} />;\n    return <DatePicker picker={type} onChange={onChange} />;\n}\n\nfunction DoctorAppointment({ location, history }) {\n\n    const columns = [\n        {\n            title: 'Patient Name',\n            dataIndex: 'patientName',\n            key: 'patientName',\n            render: text => <span>{text}</span>,\n        },\n        {\n            title: 'Time Slot',\n            dataIndex: 'time',\n            key: 'time',\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: tags => (\n                <>\n                    {tags.map(tag => {\n                        return (\n                            <Tag color=\"green\" key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        );\n                    })}\n                </>\n            ),\n            filters: [\n                {\n                    text: 'Registered',\n                    value: 'registered',\n                },\n                {\n                    text: 'Appointment done',\n                    value: 'done',\n                },\n            ],\n            onFilter: (value, record) => record.status == value,\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Button type=\"primary\" onClick={() => {\n                        history.push({ pathname: '/home/prescription', search: '?patientId=' + record.patientId + '&patientName=' + record.patientName + '&doctorId=' + record.doctorId + '&appointmentId=' + record.appointmentId });\n                    }}>\n                        Proceed\n                </Button>\n                    <Button type=\"primary\" onClick={() => {\n                        history.push({ pathname: '/home/viewPrescription', search: '?patientId=' + record.patientId + '&doctorId=' + record.doctorId + '&appointmentId=' + record.appointmentId });\n                    }}>\n                        View\n                </Button>\n                </Space>\n            ),\n        }\n    ];\n    let doctorsList = [];\n    const [type, setType] = useState('time');\n    const [patientAppointments, isLoading2, setAppointmentByPatientId] = useGetAppointmentByPatientId();\n    // const [selectedDoctor, setSelectedDoctor] = useState(\"initial\");\n    const [filter, setFilter] = useState(\"none\");\n    const [doctors, isLoading, setRequest] = useGetAllDoctors();\n    const [appointments, isLoading1, setAppointmentByDoctorId] = useGetAppointmentByDoctorId();\n    let data = [];\n    useEffect(() => {\n        setRequest();\n    }, []);\n\n    if (doctors.length > 0) {\n        doctorsList = doctors.map(doctor => <Option key={doctor.doctorId} >{doctor.doctorName}</Option>);\n    }\n    console.log(\"asadada\", appointments);\n    if (filter == \"doctor\" && appointments.length > 0) {\n        data = appointments.map(appointment => {\n            return {\n                key: appointment.appointmentId,\n                patientName: appointment.patientName,\n                appointmentId: appointment.appointmentId,\n                time: new Date(appointment.appointmentDate).toDateString(),\n                doctorId: appointment.doctorId,\n                patientId: appointment.patientId,\n                status: (appointment.status ? [appointment.status] : ['registered'])\n            };\n        });\n    }\n    if (filter == \"patient\" && patientAppointments.length > 0) {\n        data = patientAppointments.map(appointment => {\n            return {\n                key: appointment.appointmentId,\n                patientName: appointment.patientName,\n                appointmentId: appointment.appointmentId,\n                time: new Date(appointment.appointmentDate).toDateString(),\n                doctorId: appointment.doctorId,\n                patientId: appointment.patientId,\n                status: (appointment.status ? [appointment.status] : ['registered'])\n            };\n        });\n    }\n\n    function handleChangeOfDoctor(value) {\n        setAppointmentByDoctorId(value);\n        setFilter(\"doctor\");\n    }\n\n    const onPatientSearch = value => {\n        setAppointmentByPatientId(value);\n        setFilter(\"patient\");\n    };\n    return (\n        <>\n            <Space>\n                <Select\n                    onChange={handleChangeOfDoctor}\n                    showSearch\n                    placeholder=\"Select Doctor\" style={{ width: 300 }}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }>\n                    {doctorsList}\n                </Select>\n                <Select value={type} onChange={setType}>\n                    <Option value=\"time\">Time</Option>\n                    <Option value=\"date\">Date</Option>\n                    <Option value=\"week\">Week</Option>\n                    <Option value=\"month\">Month</Option>\n                    <Option value=\"quarter\">Quarter</Option>\n                    <Option value=\"year\">Year</Option>\n                </Select>\n                <PickerWithType type={type} onChange={value => console.log(value)} />\n                <Search\n                    placeholder=\"Search Patient By Id\"\n                    allowClear\n                    enterButton=\"Search\"\n                    size=\"medium\"\n                    style={{ width: '100%', marginLeft: '200px' }}\n                    onSearch={onPatientSearch}\n                />\n            </Space>\n            <br />\n            <Table columns={columns} dataSource={data} />\n        </>\n    );\n}\n\nexport default DoctorAppointment;","import { useState } from 'react';\nimport { addMedicine } from '../queries';\n\nconst useAddMedicine = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState(false);\n\n  const request = async (body) => {\n    setIsLoading(true);\n\n    const response = await addMedicine(body);\n\n    if (response) {\n      if (response.status === \"SUCCESS\") {\n        setStatus(true);\n      }\n      // dispatch(listProducts(response));\n    } else {\n      // const err = [];\n      setStatus(false);\n      // dispatch(listProducts(err));\n    }\n    setIsLoading(false);\n  };\n\n  return [status, isLoading, request];\n};\n\nexport default useAddMedicine;\n","import { useState } from 'react';\nimport { getAllMedicines } from '../queries';\n\nconst useMedicineSearch = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [patients, setPatients] = useState([]);\n\n  const request = async () => {\n    setIsLoading(true);\n\n    const response = await getAllMedicines();\n    if (response) {\n        setPatients(response);\n    } else {\n      // const err = [];\n      setPatients([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [patients, isLoading, request];\n};\n\nexport default useMedicineSearch;","import { UserOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, InputNumber, notification, Table } from 'antd';\nimport React, { useEffect } from 'react';\nimport Spinner from '../../../components/spinner';\nimport useAddMedicine from '../../../state/addMedicine/hooks/useAddMedicine';\nimport useMedicineSearch from '../../../state/addMedicine/hooks/useSearchMedicine';\n\nconst AddMedicine = () => {\n    const data = [];\n    const [form] = Form.useForm();\n    // const [, forceUpdate] = useState();\n    const [status, isLoading, setRequest] = useAddMedicine();\n    const [medicines, isLoadings, setMedicineSearch] = useMedicineSearch();\n    // To disable submit button at the beginning.\n    useEffect(() => {\n        if (status) {\n            notification[\"success\"]({\n                message: 'SUCCESS',\n                description: 'Medicine added successfully',\n                duration: 3\n            });\n            setMedicineSearch();\n        }\n        if (medicines.length === 0) {\n            setMedicineSearch();\n        }\n        // forceUpdate({});\n    }, [status]);\n    console.log(\"medicines list\", medicines);\n    const onFinish = form => {\n        const body = {\n            \"medicineName\": form.name,\n            \"medicineType\": form.type,\n            \"strength\": form.strength,\n            \"price\": form.price,\n        };\n        setRequest(body);\n    };\n    const columns = [\n        {\n            title: 'Medicine Name',\n            dataIndex: 'medicineName',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.medicineName - b.medicineName,\n        },\n        {\n            title: 'Strength',\n            dataIndex: 'strength'\n        },\n        {\n            title: 'Medicine Type',\n            dataIndex: 'medicineType',\n            filters: [\n                {\n                    text: 'Aspirin',\n                    value: 'aspirin',\n                },\n                {\n                    text: 'Painkillers',\n                    value: 'painkiller',\n                },\n            ],\n            onFilter: (value, record) => record.medicineType.indexOf(value) === 0,\n            sorter: (a, b) => a.medicineType.length - b.medicineType.length,\n            sortDirections: ['descend'],\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price'\n        }\n    ];\n    if (medicines.length > 0) {\n        medicines.forEach((medicine, index) => {\n            data.push({\n                key: index,\n                medicineName: medicine.medicineName,\n                price: medicine.price,\n                strength: medicine.strength,\n                medicineType: medicine.medicineType,\n            });\n        });\n    }\n\n    function onChange(pagination, filters, sorter, extra) {\n        console.log('params', pagination, filters, sorter, extra);\n    }\n    return (\n        <>\n            <Spinner show={isLoading} />\n            <Form form={form} name=\"horizontal_login\" layout=\"inline\" onFinish={onFinish}>\n                <Form.Item\n                    name=\"name\"\n                    rules={[{ required: true, message: 'Please medicine name!' }]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Medicine name\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"type\"\n                    rules={[{ required: true, message: 'Please input a type!' }]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Medicine type\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"strength\"\n                    rules={[{ required: true, message: 'Please input strength!' }]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Strength\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"price\"\n                    rules={[{ required: true, message: 'Please input price!' }]}\n                >\n                    <InputNumber />\n                </Form.Item>\n                <Form.Item shouldUpdate={true}>\n                    {() => (\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            disabled={\n                                !form.isFieldsTouched(true) ||\n                                form.getFieldsError().filter(({ errors }) => errors.length).length\n                            }\n                        >\n                            Add Medicine\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <br /><br /><br />\n            <Table columns={columns} dataSource={data} onChange={onChange} />\n        </>\n    );\n};\n\nexport default AddMedicine;","import { useState } from 'react';\nimport { addMedicine, addTest } from '../queries';\n\nconst useAddTest = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState(false);\n\n  const request = async (body) => {\n    setIsLoading(true);\n\n    const response = await addTest(body);\n\n    if (response) {\n      if (response.status === \"SUCCESS\") {\n        setStatus(true);\n      }\n      // dispatch(listProducts(response));\n    } else {\n      // const err = [];\n      setStatus(false);\n      // dispatch(listProducts(err));\n    }\n    setIsLoading(false);\n  };\n\n  return [status, isLoading, request];\n};\n\nexport default useAddTest;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, InputNumber, Table, notification } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport useAddTest from '../../../state/addMedicine/hooks/useAddTest';\nimport Spinner from '../../../components/spinner';\nimport useSearchTest from '../../../state/addMedicine/hooks/useSearchTest';\n\nconst AddTest = () => {\n    const data = [];\n    const [form] = Form.useForm();\n    // const [, forceUpdate] = useState();\n    const [status, isLoading, setRequest] = useAddTest();\n    const [medicines, isLoadings, setMedicineSearch] = useSearchTest();\n    // To disable submit button at the beginning.\n    useEffect(() => {\n        if (status) {\n            notification[\"success\"]({\n                message: 'SUCCESS',\n                description: 'Test added successfully',\n                duration: 3\n            });\n            setMedicineSearch();\n        }\n        if (medicines.length === 0) {\n            setMedicineSearch();\n        }\n        // forceUpdate({});\n    }, [status]);\n    const onFinish = form => {\n        const body = {\n            \"testName\": form.name,\n            \"price\": form.price,\n        };\n        setRequest(body);\n    };\n    const columns = [\n        {\n            title: 'Test Name',\n            dataIndex: 'testName',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.testName - b.testName,\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price'\n        }\n    ];\n    if (medicines.length > 0) {\n        medicines.forEach((medicine, index) => {\n            data.push({\n                key: index,\n                testName: medicine.testName,\n                price: medicine.price\n            });\n        });\n    }\n\n    function onChange(pagination, filters, sorter, extra) {\n        console.log('params', pagination, filters, sorter, extra);\n    }\n    return (\n        <>\n            <Spinner show={isLoading} />\n            <Form form={form} name=\"horizontal_login\" layout=\"inline\" onFinish={onFinish}>\n                <Form.Item\n                    name=\"name\"\n                    rules={[{ required: true, message: 'Please select test name!' }]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Test name\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"price\"\n                    rules={[{ required: true, message: 'Please input price!' }]}\n                >\n                    <InputNumber />\n                </Form.Item>\n                <Form.Item shouldUpdate={true}>\n                    {() => (\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            disabled={\n                                !form.isFieldsTouched(true) ||\n                                form.getFieldsError().filter(({ errors }) => errors.length).length\n                            }\n                        >\n                            Add Test\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <br /><br /><br />\n            <Table columns={columns} dataSource={data} onChange={onChange} />\n        </>\n    );\n};\n\nexport default AddTest;","import { Button, Col, Form, Row, Space, Table, Tag } from 'antd';\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nconst columns = [\n    {\n        title: 'Package Name',\n        dataIndex: 'packageName',\n        key: 'packageName',\n        render: text => <a>{text}</a>,\n    },\n    {\n        title: 'Package End Date',\n        dataIndex: 'packageEndDate',\n        key: 'packageEndDate',\n    },\n    {\n        title: 'Price',\n        dataIndex: 'price',\n        key: 'price',\n    },\n    {\n        title: 'Status',\n        key: 'status',\n        dataIndex: 'status',\n        render: tags => (\n            <>\n                {tags.map(tag => {\n                    return (\n                        <Tag color=\"green\" key={tag}>\n                            {tag.toUpperCase()}\n                        </Tag>\n                    );\n                })}\n            </>\n        ),\n    },\n    {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => (\n            <Space size=\"middle\">\n                <a>view</a>\n                <a>edit</a>\n            </Space>\n        ),\n    },\n];\n\nconst data = [\n    {\n        key: '1',\n        packageName: 'value',\n        packageEndDate: 'value',\n        price: 'value',\n        status: ['Active']\n    },\n    {\n        key: '2',\n        packageName: 'value',\n        packageEndDate: 'value',\n        price: 'value',\n        status: ['Active']\n    },\n    {\n        key: '3',\n        packageName: 'value',\n        packageEndDate: 'value',\n        price: 'value',\n        status: ['Active']\n    },\n];\n\nconst Package = () => {\n    return (\n        <>\n            <Row>\n                <Col span={24} style={{ textAlign: 'right' }}>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            <Link to=\"/home/newPackage\">Create New</Link>\n                        </Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Table columns={columns} dataSource={data} />\n        </>\n    );\n};\n\nexport default Package;\n","import { useState } from 'react';\nimport { getPatientByName } from '../queries';\n\nconst usePatientByName = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [patients, setPatients] = useState([]);\n\n  const request = async (patientName) => {\n    setIsLoading(true);\n\n    const response = await getPatientByName(patientName);\n    if (response) {\n        setPatients(response);\n    } else {\n      // const err = [];\n      setPatients([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [patients, isLoading, request];\n};\n\nexport default usePatientByName;\n","import React, { useState, useEffect } from 'react';\nimport { Table, Tag, Input, Space, Button, Modal, Descriptions, Select } from 'antd';\nimport usePatientSearch from '../../state/patientSearch/hooks/usePatientSearch';\nimport Spinner from '../../components/spinner';\nimport usePatientById from '../../state/patientSearch/hooks/usePatientSearchbyId';\nimport PatientDetails from '../patientDetails';\nimport usePatientByName from '../../state/patientSearch/hooks/usePatientSearchByName';\n\nconst { Search } = Input;\nconst { Option } = Select;\nconst PatientSearch = () => {\n    const [filterValue, setfilterValue] = useState(\"patientName\");\n    const [visible, setVisible] = useState(false);\n    const [name, setName] = useState([]);\n    const [showPatient, setShowPatient] = useState(\"all\");\n    const [patients, isLoading, setRequest] = usePatientSearch();\n    const [patientDetails, isLoading1, setPatientSearchbyId] = usePatientById();\n    const [patientDetailsByName, isLoading2, setPatientSearchbyName] = usePatientByName();\n    let data = [];\n\n    useEffect(() => {\n        if (showPatient === \"all\") {\n            setRequest();\n        }\n    }, [showPatient]);\n\n    function onPatientSearch(searchValue) {\n        console.log(searchValue);\n\n        if (searchValue == '') {\n            setRequest();\n            setShowPatient(\"all\");\n        } else if (filterValue == \"patientId\") {\n            setPatientSearchbyId(searchValue);\n            setShowPatient(\"patientId\");\n        } else if (filterValue == \"patientName\") {\n            setPatientSearchbyName(searchValue);\n            setShowPatient(\"patientName\");\n        }\n\n    }\n    if (showPatient == \"patientId\" && patientDetails != null) {\n        const row = [{\n            key: patientDetails.patientId,\n            name: patientDetails.patientName,\n            age: patientDetails.age,\n            phone: patientDetails.contactNum,\n            address: patientDetails.street,\n            status: ['registered']\n        }];\n        data = row;\n    }\n\n    if (showPatient == \"patientName\" && patientDetailsByName != null) {\n        data = patientDetailsByName.map((patient, index) => {\n            return {\n                key: patient.patientId,\n                name: patient.patientName,\n                age: patient.age,\n                phone: patient.contactNum,\n                address: patient.street,\n                status: ['registered'],\n            };\n        });\n    }\n    if (showPatient === \"all\" && patients.length > 0) {\n        data = patients.map((patient, index) => {\n            return {\n                key: patient.patientId,\n                name: patient.patientName,\n                age: patient.age,\n                phone: patient.contactNum,\n                address: patient.street,\n                status: ['registered'],\n            };\n        });\n    }\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            render: text => <span>{text}</span>,\n            sorter: (a, b) => a.name.length - b.name.length,\n            sortDirections: ['descend', 'ascend'],\n        },\n        {\n            title: 'Age',\n            dataIndex: 'age',\n            key: 'age',\n        },\n        {\n            title: 'Phone',\n            dataIndex: 'phone',\n            key: 'phone',\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: tags => (\n                <>\n                    {tags.map(tag => {\n                        let color = tag.length > 5 ? 'geekblue' : 'green';\n                        if (tag === 'loser') {\n                            color = 'volcano';\n                        }\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        );\n                    })}\n                </>\n            ),\n            filters: [\n                {\n                    text: 'Registered',\n                    value: 'registered',\n                },\n                {\n                    text: 'Discharged',\n                    value: 'discharged',\n                },\n            ],\n            onFilter: (value, record) => record.status == value,\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Button type=\"primary\" onClick={() => {\n                        console.log(\"abhi nhiiiiiiiiiiii\");\n                        setVisible(true);\n                        setName(searches => [record]);\n                    }}>\n                        View records\n                    </Button>\n                </Space>\n            ),\n        },\n    ];\n\n\n    const columnsModal = [\n        { title: 'Appointment ID', dataIndex: 'appointmentid', key: 'appointmentid' },\n        { title: 'Appointment Date', dataIndex: 'appointmentdate', key: 'appointmentid' },\n        {\n            title: 'Action',\n            dataIndex: '',\n            key: 'x',\n            render: () => <span>View</span>,\n        },\n    ];\n\n    const dataModal = [\n        {\n            key: 1,\n            appointmentid: '3723823d',\n            appointmentdate: \"15 Aug\",\n\n            description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.',\n        },\n        {\n            key: 2,\n            appointmentid: '3723823d',\n            appointmentdate: \"15 Aug\",\n\n            description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.',\n        },\n        {\n            key: 3,\n            appointmentid: '3723823d',\n            appointmentdate: \"15 Aug\",\n\n            description: 'This not expandable',\n        },\n        {\n            key: 4,\n            appointmentid: '3723823d',\n            appointmentdate: \"14 Aug\",\n\n            description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\n        },\n    ];\n\n    return (\n        <>\n            <Spinner show={isLoading} />\n            <Input.Group compact>\n                <Select defaultValue={filterValue} onSelect={setfilterValue}>\n                    <Option value=\"patientName\">Patient Name</Option>\n                    <Option value=\"patientId\">Patient Id</Option>\n                </Select>\n                <Input.Search onSearch={onPatientSearch} style={{ width: '70%' }} placeholder=\"Search by\" />\n            </Input.Group>\n            <br /><br />\n            <Table columns={columns} dataSource={data} />\n            <Modal\n                title=\"Patient Details\"\n                centered\n                visible={visible}\n                onOk={() => setVisible(false)}\n                onCancel={() => setVisible(false)}\n                width={1000}\n            >\n                {name.map((record, index) =>\n                    <>\n                        <Descriptions key={index}>\n                            <Descriptions.Item label=\"Name\">{record.name}</Descriptions.Item>\n                            <Descriptions.Item label=\"Phone\">{record.phone}</Descriptions.Item>\n                            <Descriptions.Item label=\"Age\">{record.age}</Descriptions.Item>\n                            <Descriptions.Item label=\"Address\">\n                                {record.address}\n                            </Descriptions.Item>\n                        </Descriptions>\n                        <Table\n                            columns={columnsModal}\n                            expandable={{\n                                expandedRowRender: record => <p style={{ margin: 0 }}>{record.description}</p>,\n                                rowExpandable: record => record.appointmentdate !== '14 Aug',\n                            }}\n                            dataSource={dataModal}\n                        />\n                    </>\n                )}\n            </Modal>\n        </>\n    );\n};\n\nexport default PatientSearch;","import React, { useEffect } from 'react';\n\nconst Pharmacy = () => {\n    return (\n        <>\n        \n        </>\n    );\n};\n\nexport default Pharmacy;\n","import axios from 'axios';\nimport api from '../../utils/services';\n\nexport const savePrescription = (body) => {\n    return axios\n        .post(`${api.url}/doctorService/savePrescription`, body)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};\n\nexport const getPrescriptionByAppointmentId = (appointmentId) => {\n    return axios\n        .get(`${api.url}/doctorService/getPrescriptionDetails?appointmentId=` + appointmentId)\n        .then(res => res.data)\n        .catch(err => {\n            return err;\n        });\n};","import { useState } from 'react';\nimport { savePrescription } from '../queries';\n// import { listProducts } from '../actions';\n\nconst useSavePrescription = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState({});\n\n  const request = async (body) => {\n    setIsLoading(true);\n\n    const response = await savePrescription(body);\n\n    setStatus(response);\n    setIsLoading(false);\n  };\n\n  return [status, isLoading, request];\n};\n\nexport default useSavePrescription;\n","import { PrinterOutlined, MinusCircleOutlined, PlusOutlined, UserOutlined } from '@ant-design/icons';\nimport { AutoComplete, Button, Col, DatePicker, Divider, Form, Input, InputNumber, notification, Row, Select, Space } from 'antd';\nimport queryString from 'query-string';\nimport React, { useEffect, useState } from 'react';\nimport useMedicineSearch from '../../state/addMedicine/hooks/useSearchMedicine';\nimport useSearchTest from '../../state/addMedicine/hooks/useSearchTest';\nimport useSavePrescription from '../../state/prescription/hooks/useSavePrescription';\nimport PatientDetails from '../patientDetails';\nimport '../prescription/prescription.css';\n\nconst { Option } = Select;\n\nconst renderTitle = (title) => {\n    return (\n        <span>\n            {title}\n            <a\n                style={{ float: 'right' }}\n                href=\"https://www.google.com/search?q=antd\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                more\n        </a>\n        </span>\n    );\n};\n\nconst renderItem = (title, count) => {\n    return {\n        value: title,\n        label: (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                }}\n            >\n                {title}\n                <span>\n                    <UserOutlined /> {count}\n                </span>\n            </div>\n        ),\n    };\n};\n\n\n\nconst Prescription = ({ location, history }) => {\n    let options = [];\n    const optionsTests = [];\n    const [submitted, setSubmitted] = useState(false);\n    const [form] = Form.useForm();\n    const [medicineForm] = Form.useForm();\n    const [vitalsForm] = Form.useForm();\n    const [adviceForm] = Form.useForm();\n\n    const [medicines, isLoadings, setMedicineSearch] = useMedicineSearch();\n    const [response, isLoading1, setSavePrescription] = useSavePrescription();\n    const [tests, isLoading, setTestSearch] = useSearchTest();\n    // const [tests, isLoading, setTestSearch] = usePre();\n    const queryParams = queryString.parse(location.search);\n    useEffect(() => {\n        if (response.status == \"SUCCESS\") {\n            notification[\"success\"]({\n                message: 'SUCCESS',\n                description: 'The patient prescription has been generated successfully',\n                duration: 3\n            });\n        } else if (response.status == 500) {\n            notification[\"error\"]({\n                message: 'Error',\n                description: 'There was some error saving the prescription, please check with admin',\n                duration: 3\n            });\n        }\n    }, [response]);\n    const onFinish = values => {\n        console.log('Received values of form:', values);\n        console.log('Dawaiyaan', form.getFieldsValue());\n        console.log('tests:', medicineForm.getFieldsValue());\n        console.log('vitals:', vitalsForm.getFieldsValue());\n        const medicineList = medicineForm.getFieldsValue().users;\n        const testList = form.getFieldsValue().users;\n        const patientVitals = vitalsForm.getFieldsValue();\n        const body = {\n            appointmentDto: {\n                appointmentId: queryParams.appointmentId,\n                patientId: queryParams.patientId,\n                patientName: queryParams.patientName,\n                doctorId: queryParams.doctorId,\n                height: patientVitals.height,\n                weight: patientVitals.weight,\n                Bp: patientVitals.bp,\n                temprature: patientVitals.temparature,\n                advise: adviceForm.getFieldsValue().advice,\n                status: \"done\"\n            },\n            prescribedMedsDtoList: null,\n            prescribedTestingDtoList: null\n        };\n\n        if (medicineList != null && medicineList.length > 0) {\n            body.prescribedMedsDtoList = medicineList.map(medicine => {\n                return { medName: medicine.medicineName, days: medicine.numberOfDays, dosage: medicine.dosage, comment: medicine.comments };\n            });\n        }\n\n        if (testList != null && testList.length > 0) {\n            body.prescribedTestingDtoList = testList.map(test => {\n                return {\n                    testName: test.testName,\n                    dateOfBooking: test.date,\n                    comment: test.comments\n                };\n            });\n        }\n        setSavePrescription(body);\n        setSubmitted(true);\n    };\n    const handleSearch = (value) => {\n        setMedicineSearch();\n    };\n\n    const handleTestSearch = (value) => {\n        setTestSearch();\n    };\n\n    if (tests.length > 0) {\n        tests.forEach(test => {\n            optionsTests.push({ value: test.testName });\n        });\n    }\n\n    if (medicines.length > 0) {\n        var map = new Map();\n\n        medicines.forEach(medicine => {\n            if (map.has(medicine.medicineType)) {\n                map.set(medicine.medicineType, [...map.get(medicine.medicineType), medicine.medicineName]);\n            } else {\n                map.set(medicine.medicineType, [medicine.medicineName])\n            }\n        });\n        console.log(map);\n        for (let [key, value] of map) {\n            console.log(key + \" = \" + value);\n            options.push({\n                label: renderTitle(key),\n                options: value.map(val => renderItem(val, 100)),\n            });\n        }\n    }\n    let formActions = <Button size=\"large\" type=\"primary\">Submit</Button>;\n    if (submitted && response.status != 500) {\n        formActions = (<><Button type=\"primary\" shape=\"round\" onClick={() => {\n            history.push({ pathname: '/home/viewPrescription', search: '?patientId=' + queryParams.patientId + '&doctorId=' + queryParams.doctorId + '&appointmentId=' + queryParams.appointmentId });\n        }} icon={<PrinterOutlined />} size='large'>Print</Button>\n            <Button style={{ marginLeft: '10px' }} type=\"primary\" shape=\"round\" size='large' onClick={value => history.push({ pathname: '/home/doctorAppointment' })}>Go to My Appoinments</Button></>);\n    }\n    return (\n        <>\n            <PatientDetails patientId={queryParams.patientId} />\n            <br></br>\n            <Divider>Patient Vitals</Divider>\n\n            <Form\n                form={vitalsForm}\n            >\n                <Row gutter={24}>\n                    <Col span={6}>\n                        <Form.Item label=\"BP\" name=\"bp\">\n                            <InputNumber name=\"bp\" style={{ width: '90%' }} placeholder=\"Blood pressure\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Temparature\" name=\"temparature\">\n                            <InputNumber name=\"temparature\" style={{ width: '90%' }} placeholder=\"Temp In degrees Celsius\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Height\" name=\"height\">\n                            <InputNumber name=\"height\" style={{ width: '90%' }} placeholder=\"Height in feet\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Weight\" name=\"weight\">\n                            <Input name=\"weight\" style={{ width: '90%' }} placeholder=\"Weight in (kgs)\" />\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n\n            </Form>\n            <Divider>Prescribe Medicines</Divider>\n            {/* <PrescribeMedicine /> */}\n\n            <Form name=\"dynamic_form_nest_item\" form={medicineForm} onFinish={onFinish} autoComplete=\"off\">\n                <Form.List name=\"users\">\n                    {(fields, { add, remove }) => {\n                        return (\n                            <div>\n                                {fields.map((field, index) => (\n                                    <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"start\">\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'medicineName']}\n                                            fieldKey={[field.fieldKey, 'medicineName']}\n                                            rules={[{ required: true, message: 'Missing Medicine name' }]}\n                                        >\n                                            <AutoComplete\n                                                onSearch={handleSearch}\n                                                dropdownClassName=\"certain-category-search-dropdown\"\n                                                dropdownMatchSelectWidth={500}\n                                                style={{ width: 250 }}\n                                                options={options}\n                                            >\n                                                <Input.Search size=\"default\" placeholder=\"Medicine\" />\n                                            </AutoComplete>\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'dosage']}\n                                            fieldKey={[field.fieldKey, 'dosage']}\n                                            rules={[{ required: true, message: 'Missing Dosage' }]}\n                                        >\n                                            <Select\n                                                placeholder=\"Dosage per day (M-A-N)\"\n                                                allowClear>\n                                                <Option value=\"1-0-0\">1-0-0</Option>\n                                                <Option value=\"1-1-0\">1-1-0</Option>\n                                                <Option value=\"1-1-1\">1-1-1</Option>\n                                                <Option value=\"0-0-1\">0-0-1</Option>\n                                            </Select>\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'numberOfDays']}\n                                            fieldKey={[field.fieldKey, 'numberOfDays']}\n                                            rules={[{ required: true, message: 'Missing Number of days' }]}\n                                        >\n                                            <InputNumber />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'comments']}\n                                            fieldKey={[field.fieldKey, 'comments']}\n                                        >\n                                            <Input placeholder=\"Comments\" />\n                                        </Form.Item>\n                                        <MinusCircleOutlined\n                                            onClick={() => {\n                                                remove(field.name);\n                                            }}\n                                        />\n                                    </Space>\n                                ))}\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"dashed\"\n                                        onClick={() => {\n                                            add();\n                                        }}\n                                        block\n                                    >\n                                        <PlusOutlined /> Add Medicines\n                                    </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n\n                {/* <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n        </Button>\n                </Form.Item> */}\n            </Form>\n\n            <br></br>\n            <Divider>Prescribe Tests</Divider>\n            <Form name=\"dynamic_form_nest_item2\" form={form} autoComplete=\"off\">\n                <Form.List name=\"users\">\n                    {(fields, { add, remove }) => {\n                        return (\n                            <div>\n                                {fields.map(field => (\n                                    <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"start\">\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'testName']}\n                                            fieldKey={[field.fieldKey, 'testName']}\n                                            rules={[{ required: true, message: 'Missing test name' }]}\n                                        >\n                                            <AutoComplete\n                                                onSearch={handleTestSearch}\n                                                style={{ width: 200 }}\n                                                options={optionsTests}\n                                                placeholder=\"Type test name\"\n                                                filterOption={(inputValue, option) =>\n                                                    option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                                                }\n                                            />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'date']}\n                                            fieldKey={[field.fieldKey, 'date']}\n                                            rules={[{ required: false }]}\n                                        >\n                                            <DatePicker />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'comments']}\n                                            fieldKey={[field.fieldKey, 'comments']}\n                                        >\n                                            <Input placeholder=\"Comments\" />\n                                        </Form.Item>\n                                        <MinusCircleOutlined\n                                            onClick={() => {\n                                                remove(field.name);\n                                            }}\n                                        />\n                                    </Space>\n                                ))}\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"dashed\"\n                                        onClick={() => {\n                                            add();\n                                        }}\n                                        block\n                                    >\n                                        <PlusOutlined /> Add Tests\n                                   </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n\n            </Form>\n\n            <Form\n                form={adviceForm}\n            >\n                <Row gutter={24}>\n                    <Col span={20}>\n                        <Form.Item name='advice' label=\"Summary\">\n                            <Input.TextArea />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n            <Row>\n                <Col span={12} onClick={onFinish} offset={11}>\n                    {formActions}\n                </Col>\n            </Row>\n        </>);\n};\n\nexport default Prescription;\n","import { useState } from 'react';\nimport { registration } from '../queries';\n// import { listProducts } from '../actions';\n\nconst useRegistration = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [responseObj, setResponseObj] = useState({});\n\n  const request = async (body) => {\n    setIsLoading(true);\n\n    const response = await registration(body);\n\n    if (response) {\n      if (response.recieptId !== null) {\n        setResponseObj(response);\n      }\n      // dispatch(listProducts(response));\n    } else {\n      // const err = [];\n      setResponseObj(null);\n      // dispatch(listProducts(err));\n    }\n    setIsLoading(false);\n  };\n\n  return [responseObj, isLoading, request];\n};\n\nexport default useRegistration;\n","import React, { useEffect } from 'react';\nimport { Form, Input, InputNumber, Button, Select, notification } from 'antd';\nimport useRegistration from '../../state/registration/hooks/useRegistration';\nimport Spinner from '../../components/spinner';\n\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 12 },\n};\n// eslint-disable-next-line\nconst validateMessages = {\n    // eslint-disable-next-line\n    required: '${label} is required!',\n    types: {\n        // eslint-disable-next-line\n        email: '${label} is not validate email!',\n        // eslint-disable-next-line\n        number: '${label} is not a validate number!',\n    },\n    number: {\n        // eslint-disable-next-line\n        range: '${label} must be between ${min} and ${max}',\n    },\n};\n\nconst PhonePrefixSelector = (\n    <Form.Item name=\"prefix\" noStyle>\n        <Select defaultValue=\"91\" style={{ width: 70 }}>\n            <Option value=\"91\">+91</Option>\n            <Option value=\"87\">+87</Option>\n        </Select>\n    </Form.Item>\n);\n\nconst Registration = ({ location, history }) => {\n    const [response, isLoading, setRequest] = useRegistration();\n\n    useEffect(() => {\n        if (response.recieptId !== null && response.recieptId !== undefined) {\n            notification[\"success\"]({\n                message: 'SUCCESS',\n                description: 'The patient has been registered successfully',\n                duration: 3\n            });\n            history.push({ pathname: '/home/billing', search: '?patientId=' + response.patientId + '&receiptId=' + response.recieptId + '&context=registration' });\n        }\n    }, [response, history]);\n\n    const onFinish = formData => {\n\n        const form = formData.user;\n        const body = {\n            \"patientName\": form.name,\n            \"age\": form.age,\n            \"contactNum\": form.phone,\n            \"altContactNum\": form.alternatecontact,\n            \"street\": form.address,\n            \"state\": form.state,\n            \"country\": form.country,\n            \"visitType\": form.visit\n        };\n        setRequest(body);\n    };\n\n    return (\n        <>\n            <Spinner show={isLoading} />\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                <Form.Item name={['user', 'name']} label=\"Name\" rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name={['user', 'gender']} label=\"Gender\" rules={[{ required: true }]}>\n                    <Select\n                        placeholder=\"Select Gender\"\n                        allowClear>\n                        <Option value=\"male\">male</Option>\n                        <Option value=\"female\">female</Option>\n                        <Option value=\"other\">other</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name={['user', 'email']} label=\"Email\" rules={[{ type: 'email' }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name={['user', 'age']} label=\"Age\" rules={[{ type: 'number', min: 0, max: 99 }]}>\n                    <InputNumber />\n                </Form.Item>\n                <Form.Item name={['user', 'phone']} label=\"Phone Number\" rules={[{ required: true, message: 'Please input your phone number!' }]}>\n                    <Input addonBefore={PhonePrefixSelector} style={{ width: '100%' }} />\n                </Form.Item>\n                <Form.Item name={['user', 'alternatecontact']} label=\"Alternate Contact Number\">\n                    <Input addonBefore={PhonePrefixSelector} style={{ width: '100%' }} />\n                </Form.Item>\n                <Form.Item name={['user', 'address']} label=\"Address\">\n                    <Input.TextArea />\n                </Form.Item>\n                <Form.Item name={['user', 'state']} label=\"State\">\n                    <Select\n                        defaultValue=\"bihar\"\n                        placeholder=\"Select State\"\n                        allowClear>\n                        <Option value=\"bihar\">Bihar</Option>\n                        <Option value=\"up\">UP</Option>\n                        <Option value=\"Karnataka\">Karnataka</Option>\n                        <Option value=\"Jharkhand\">Jharkhand</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name={['user', 'country']} label=\"Country\">\n                    <Select\n                        defaultValue=\"india\"\n                        placeholder=\"Select Country\"\n                        allowClear>\n                        <Option value=\"india\">India</Option>\n                        <Option value=\"us\">US</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name={['user', 'visit']} label=\"Visit Type\" >\n                    <Select placeholder=\"Select Visit type\">\n                        <Option value=\"general\">General</Option>\n                        <Option value=\"emergency\">Emergency</Option>\n                        <Option value=\"referral\">Referral</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                    <Button type=\"primary\" size='large' htmlType=\"submit\">\n                        Submit\n        </Button>\n                </Form.Item>\n            </Form>\n        </>\n    );\n};\n\nexport default Registration;\n","import React, { useEffect } from 'react';\nimport { Carousel } from 'antd';\n\nconst contentStyle = {\n    height: '700px',\n    color: '#fff',\n    lineHeight: '500px',\n    textAlign: 'center',\n    background: '#364d79',\n    fontSize: \"32px\"\n};\n\nconst HomeScreen = () => {\n    return (\n        <Carousel autoplay>\n            <div>\n                <h3 style={contentStyle}>Welcome to Healthcare</h3>\n            </div>\n            <div>\n                <h3 style={contentStyle}>\n                    “Wherever the art of Medicine is loved, there is also a love of Humanity. ”</h3>\n            </div>\n            <div>\n                <h3 style={contentStyle}>“As to diseases, make a habit of two things — to help, or at least, to do no harm.”</h3>\n            </div>\n            <div>\n                <h3 style={contentStyle}>“Let food be thy medicine and medicine be thy food.”</h3>\n            </div>\n        </Carousel>\n    );\n};\n\nexport default HomeScreen;\n","import { useState } from 'react';\nimport { savePharmacyMedicine } from '../queries';\n\nconst useSavePharmacyMedicine = () => {\n  const [status, setStatus] = useState(false);\n\n  const request = async (body) => {\n    const response = await savePharmacyMedicine(body);\n\n    if (response === \"success\") {\n      setStatus(true);\n    } \n  };\n\n  return [status, request];\n};\n\nexport default useSavePharmacyMedicine;\n","import { useState } from 'react';\nimport { getPharmacyMedicineDetail } from '../queries';\n\nconst useGetPharmacyMedicineDetail = () => {\n    const [medicines, setMedicineList] = useState(null);\n\n    const request = async (medicineId) => {\n        const response = await getPharmacyMedicineDetail(medicineId);\n        if (response) {\n            setMedicineList(response);\n        } else {\n            // const err = [];\n            setMedicineList(null);\n        }\n    };\n\n    return [medicines, request];\n};\n\nexport default useGetPharmacyMedicineDetail;","import React, { useState, useEffect } from 'react';\nimport { PlusOutlined, OrderedListOutlined, UploadOutlined } from '@ant-design/icons';\nimport { Form, Input, Row, Col, Divider, InputNumber, Button, Upload, Select, notification, DatePicker } from 'antd';\nimport { medicineDistributionUnits } from './utils';\nimport queryString from 'query-string';\nimport useSavePharmacyMedicine from '../../../state/pharmacy/hooks/useSavePharmacyMedicine';\nimport useGetPharmacyMedicineDetail from '../../../state/pharmacy/hooks/useGetMedicinedetail';\nimport { setNestedObjectValues } from 'formik';\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 9 },\n};\n// eslint-disable-next-line\nconst validateMessages = {\n    // eslint-disable-next-line\n    required: '${label} is required!',\n    types: {\n        // eslint-disable-next-line\n        email: '${label} is not validate email!',\n        // eslint-disable-next-line\n        number: '${label} is not a validate number!',\n    },\n    number: {\n        // eslint-disable-next-line\n        range: '${label} must be between ${min} and ${max}',\n    },\n};\n\nconst medicineUnits = medicineDistributionUnits.map(medicineDistributionUnit => <Option key={medicineDistributionUnit}>{medicineDistributionUnit}</Option>);\nconst AddNewMedicine = ({ location, history }) => {\n    let index = 0;\n    const [form] = Form.useForm();\n    const [name, setName] = useState(\"\");\n    const [items, setItems] = useState(['Aspirin', 'Tablets', 'Syrup']);\n    const [status, setRequest] = useSavePharmacyMedicine();\n    const [savedStatus, setSavedStatus] = useState(true);\n    const [medicineDetail, setRequest1] = useGetPharmacyMedicineDetail();\n    const queryParams = queryString.parse(location.search);\n    useEffect(() => {\n        if (queryParams.mode == \"edit\" && queryParams.medicineId != null) {\n            setRequest1(queryParams.medicineId);\n        }\n    }, []);\n    console.log(\"loadedddddddddddddddd\", status);\n    if (savedStatus == false && status == true) {\n        notification[\"success\"]({\n            message: 'SUCCESS',\n            description: 'Medicine added successfully',\n            duration: 3\n        });\n        clearForm();\n        setSavedStatus(true);\n    }\n    if (medicineDetail != null) {\n        form.setFieldsValue({\n            user: {\n                medicineId: medicineDetail.medicineId,\n                medicineName: medicineDetail.medicineName,\n                genericName: medicineDetail.genericName,\n                boxSize: medicineDetail.boxSize,\n                expDate: medicineDetail.expiryDate,\n                medicineShelf: medicineDetail.medicineShelf,\n                details: medicineDetail.details,\n                category: medicineDetail.category,\n                unit: medicineDetail.unit,\n                triggerValue: medicineDetail.triggerValue,\n                image: medicineDetail.image,\n                salePrice: medicineDetail.salePrice,\n                supplierPrice: medicineDetail.suppliersPrice,\n                tax: medicineDetail.tax,\n                supplierName: medicineDetail.supplierName,\n                availability: \"Available\"\n            }\n        });\n    }\n    const onFinish = formData => {\n        const form = formData.user;\n        console.log(form);\n        const body = {\n            medicineName: form.medicineName,\n            genericName: form.genericName,\n            boxSize: form.boxSize,\n            details: form.details,\n            category: form.category,\n            unit: form.unit,\n            triggerValue: form.triggerValue,\n            image: form.image,\n            salePrice: form.salePrice,\n            availability: \"Available\"\n        };\n\n        if (queryParams.mode == \"edit\" && queryParams.medicineId != null) {\n            body[\"medicineId\"] = queryParams.medicineId;\n        }\n        setSavedStatus(false);\n        setRequest(body);\n    };\n    function onNameChange(event) {\n        // console.log(\"sas\", event.target.value);\n        setName(event.target.value);\n    };\n    function addItem() {\n        setName('');\n        setItems([...items, name || `New item ${index++}`]);\n    }\n    function clearForm() {\n        form.setFieldsValue({\n            user: {\n                medicineId: null,\n                medicineName: \"\",\n                genericName: \"\",\n                boxSize: 0,\n                details: \"\",\n                category: \"\",\n                unit: \"\",\n                triggerValue: 0,\n                image: null,\n                salePrice: 0,\n                availability: \"Available\"\n            }\n        });\n    }\n    return (\n        <>\n            <Button onClick={() => {\n                history.push({ pathname: '/home/manageSuppliers' });\n            }} type=\"dashed\" icon={<PlusOutlined />}>Add Supplier</Button>\n            <Button type=\"dashed\" onClick={() => {\n                history.push({ pathname: '/home/manageMedicines' });\n            }} style={{ marginLeft: '15px' }} icon={<OrderedListOutlined />}>Manage Medicine</Button>\n            <Button type=\"dashed\" style={{ marginLeft: '15px' }} icon={<OrderedListOutlined />}>Import Medicine</Button>\n            <br /><br /><br />\n            <Form form={form} {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'medicineName']} label=\"Medicine Name\" rules={[{ required: true }]}>\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'genericName']} label=\"Generic Name\">\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'boxSize']} label=\"Box Size\" rules={[{ type: 'number', min: 0, max: 5000 }]}>\n                            <InputNumber style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    {/* <Col span={12}>\n                        <Form.Item name={['user', 'expiryDate']} label=\"Expiry Date\">\n                            <DatePicker style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col> */}\n                    {/* <Col span={12}>\n                        <Form.Item name={['user', 'medicineShelf']} label=\"Medicine Shelf\">\n                            <Input />\n                        </Form.Item>\n                    </Col> */}\n                    <Col span={12}>\n                        <Form.Item name={['user', 'details']} label=\"Details\">\n                            <TextArea rows={2} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'category']} label=\"Category\">\n                            <Select\n                                style={{ width: '100%' }}\n                                placeholder=\"Select category\"\n                                dropdownRender={menu => (\n                                    <div>\n                                        {menu}\n                                        <Divider style={{ margin: '4px 0' }} />\n                                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                                            <Input style={{ flex: 'auto' }} value={name} onChange={onNameChange} />\n                                            <a\n                                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                                onClick={addItem}\n                                            >\n                                                <PlusOutlined /> Add item\n                                    </a>\n                                        </div>\n                                    </div>\n                                )}\n                            >\n                                {items.map(item => (\n                                    <Option key={item}>{item}</Option>\n                                ))}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'unit']} label=\"Unit\">\n                            <Select\n                                showSearch\n                                placeholder=\"Select Distribution Unit\" style={{ width: '100%' }}\n                                optionFilterProp=\"children\"\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }>\n                                {medicineUnits}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'image']} label=\"Image\">\n                            <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                                <Button icon={<UploadOutlined />}>Click to upload</Button>\n                            </Upload>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'triggerValue']} label=\"Reorder value\" rules={[{ type: 'number', min: 0, max: 5000 }]}>\n                            <InputNumber style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'salePrice']} label=\"Sale Price\" rules={[{ required: true }]}>\n                            <InputNumber style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                {/* <Divider orientation=\"left\">Purchase Details</Divider>\n                <Row gutter={24}>\n                <Col span={12}>\n                        <Form.Item name={['user', 'supplierName']} label=\"Supplier Name\">\n                            <Select\n                                showSearch\n                                placeholder=\"Select Suppliers Name\" style={{ width: '100%' }}\n                                optionFilterProp=\"children\"\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }>\n\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                    <Form.Item name={['user', 'purchaseQuantity']} label=\"Purchase quantity\" rules={[{ type: 'number', min: 0, max: 5000 }]}>\n                            <InputNumber style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'purchaseUnit']} label=\"Purchase Unit\">\n                            <Select\n                                showSearch\n                                placeholder=\"Select Distribution Unit\" style={{ width: '100%' }}\n                                optionFilterProp=\"children\"\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }>\n                                {medicineUnits}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'suppliersPrice']} label=\"Suppliers Price\" rules={[{ required: true }]}>\n                            <InputNumber style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'tax']} label=\"Tax (%)\">\n                            <InputNumber style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                </Row> */}\n                <Row>\n                    <Col span={24} style={{ textAlign: 'right' }}>\n                        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Save and Add another\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n};\n\n\n\nexport default AddNewMedicine;\n","export const medicineDistributionUnits = [\"ampoule\",\n    \"bag\",\n    \"bottle\",\n    \"box\",\n    \"bundle\",\n    \"capsule\",\n    \"case\",\n    \"container\",\n    \"cream\",\n    \"each\",\n    \"gel\",\n    \"nebule\",\n    \"ointment\",\n    \"pack\",\n    \"pair\",\n    \"pallet\",\n    \"patch\",\n    \"pcs\",\n    \"pill\",\n    \"plastic\",\n    \"polyamp\",\n    \"roll\",\n    \"spray\",\n    \"suppository\",\n    \"suspension\",\n    \"set\",\n    \"syrup\",\n    \"tablet\",\n    \"tray\",\n    \"tube\",\n    \"vial\"];","import { Space, Table } from 'antd';\nimport React, { useEffect } from 'react';\nimport useGetAllPharmacyMedicines from '../../../state/pharmacy/hooks/useGetAllPharmacyMedicines';\n\n\n// const data = [\n//     {\n//         key: '1',\n//         name: 'Paraceta',\n//         category: '',\n//         purchasePrice: '',\n//         sellingPrice: '',\n//         genericName: '',\n//         expiryDate: '',\n//         medicineId: '217',\n//         stock: 100\n//     },\n//     {\n//         key: '2',\n//         name: '',\n//         category: '',\n//         purchasePrice: '',\n//         sellingPrice: '',\n//         genericName: '',\n//         expiryDate: '',\n//         medicineId: '217'\n\n//     },\n//     {\n//         key: '3',\n//         name: '',\n//         category: '',\n//         purchasePrice: '',\n//         sellingPrice: '',\n//         genericName: '',\n//         expiryDate: '',\n//         medicineId: '217'\n\n//     },\n// ];\n\nconst ManageMedicines = ({ location, history }) => {\n    let data = [];\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            render: text => <a>{text}</a>,\n        },\n        {\n            title: 'Category',\n            dataIndex: 'category',\n            key: 'category',\n            filters: [\n                {\n                    text: 'Aspirin',\n                    value: 'aspirin',\n                },\n                {\n                    text: 'Painkillers',\n                    value: 'painkiller',\n                }\n            ],\n            onFilter: (value, record) => record.category.indexOf(value) === 0,\n            sorter: (a, b) => a.category.length - b.category.length,\n            sortDirections: ['descend'],\n        },\n        {\n            title: 'Purchase Price',\n            dataIndex: 'purchasePrice',\n            key: 'purchasePrice',\n        },\n        {\n            title: 'Selling Price',\n            dataIndex: 'sellingPrice',\n            key: 'sellingPrice',\n        },\n        {\n            title: 'Generic name',\n            dataIndex: 'genericName',\n            key: 'genericName',\n        },\n        {\n            title: 'Expiry date',\n            dataIndex: 'expiryDate',\n            key: 'expiryDate',\n        },\n        {\n            title: 'Stock',\n            dataIndex: 'stock',\n            key: 'stock',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <a onClick={() => {\n                        history.push({ pathname: '/home/newPurchaseOrder', search: '?mode=prefetch' + '&medicineName=' + record.name });\n                    }}>Place Order</a>\n                    <a>Stock</a>\n                    <a onClick={() => {\n                        history.push({ pathname: '/home/addNewMedicine', search: '?mode=edit' + '&medicineId=' + record.medicineId });\n                    }}>Edit</a>\n                    <a>Delete</a>\n                </Space>\n            ),\n        },\n    ];\n    const [medicines, isLoading, setMedicineSearch] = useGetAllPharmacyMedicines();\n    useEffect(() => {\n        setMedicineSearch();\n    }, []);\n\n    if (medicines.length > 0) {\n        const tempData = [];\n        medicines.forEach((medicine, index) => {\n            tempData.push({\n                key: index,\n                name: medicine.medicineName,\n                medicineId: medicine.medicineId,\n                category: medicine.category,\n                purchasePrice: medicine.supplierPrice,\n                sellingPrice: medicine.salePrice,\n                genericName: medicine.genericName,\n                expiryDate: medicine.expDate,\n            });\n        });\n        data = [...tempData];\n    }\n    return (\n        <>\n            <Table columns={columns} dataSource={data} />\n        </>\n    );\n};\n\nexport default ManageMedicines;","import { useState } from 'react';\nimport { getPurchaseOrderList } from '../queries';\n\nconst UseGetAllPurchaseOrder = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [medicines, setMedicineList] = useState([]);\n\n  const request = async () => {\n    setIsLoading(true);\n\n    const response = await getPurchaseOrderList();\n    if (response) {\n        setMedicineList(response);\n    } else {\n      setMedicineList([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [medicines, isLoading, request];\n};\n\nexport default UseGetAllPurchaseOrder;","import { useState } from 'react';\nimport { deletePurchaseOrder } from '../queries';\n\nconst useDeletePurchaseOrder = () => {\n  const [status, setStatus] = useState(false);\n\n  const request = async (body) => {\n    const response = await deletePurchaseOrder(body);\n\n    if (response) {\n      if (response.status === \"SUCCESS\") {\n        setStatus(true);\n      }\n    } else {\n      setStatus(false);\n    }\n  };\n\n  return [status, request];\n};\n\nexport default useDeletePurchaseOrder;\n","\nimport React, { useEffect, useState } from 'react';\n\nimport { Table, Tag, Space, notification } from 'antd';\nimport UseGetAllPurchaseOrder from '../../../state/pharmacy/hooks/UseGetAllPurchaseOrders';\nimport useDeletePurchaseOrder from '../../../state/pharmacy/hooks/useDeletePurchaseOrder';\n\n// const data = [\n//     {\n//         key: '1',\n//         orderDate: '',\n//         deliveryDate: '',\n//         supplier: '',\n//         store: '',\n//         totalAmount: '',\n//         status: ['paid']\n//     },\n//     {\n//         key: '2',\n//         orderDate: '',\n//         deliveryDate: '',\n//         supplier: '',\n//         store: '',\n//         totalAmount: '',\n//         status: ['paid']\n\n//     },\n//     {\n//         key: '3',\n//         orderDate: '',\n//         deliveryDate: '',\n//         supplier: '',\n//         store: '',\n//         totalAmount: '',\n//         status: ['paid']\n\n//     },\n// ];\n\nconst PurchaseOrder = ({ location, history }) => {\n    let data = [];\n    const columns = [\n        {\n            title: 'Invoice No.',\n            dataIndex: 'invoiceNumber',\n            key: 'orderDate',\n            render: text => <a>{text}</a>,\n        },\n        {\n            title: 'Order Date',\n            dataIndex: 'orderDate',\n            key: 'orderDate',\n            render: text => <a>{text}</a>,\n        },\n        {\n            title: 'Delivery Date',\n            dataIndex: 'deliveryDate',\n            key: 'deliveryDate',\n        },\n        {\n            title: 'Supplier',\n            dataIndex: 'supplier',\n            key: 'supplier',\n        },\n        {\n            title: 'Store',\n            dataIndex: 'store',\n            key: 'store',\n        },\n        {\n            title: 'Total Amount',\n            dataIndex: 'totalAmount',\n            key: 'totalAmount',\n        },\n        {\n            title: 'Status',\n            key: 'status',\n            dataIndex: 'status',\n            render: tags => (\n                <>\n                    {tags.map(tag => {\n                        return (\n                            <Tag color=\"green\" key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        );\n                    })}\n                </>\n            ),\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <a onClick={() => {\n                        history.push({ pathname: '/home/newPurchaseOrder', search: '?mode=edit' + '&purchaseOrderId=' + record.purchaseOrderId });\n                    }}>View</a>\n                    <a onClick={() => deletePurchaseOrder(record)}>Cancel</a>\n                    {/* <a onClick={() => {\n                        history.push({ pathname: '/home/newPurchaseOrder', search: '?patientId=' + record.patientId + '&doctorId=' + record.doctorId + '&appointmentId=' + record.appointmentId });\n                    }}>edit</a> */}\n                </Space>\n            ),\n        },\n    ];\n    const [purchaseOrders, isLoading, setGetAllPurchaseOrder] = UseGetAllPurchaseOrder();\n    const [status, setDeletePurchaseOrder] = useDeletePurchaseOrder();\n    useEffect(() => {\n        if (status) {\n            notification[\"success\"]({\n                message: 'SUCCESS',\n                description: 'Purchase order created successfully',\n                duration: 3\n            });\n        }\n        setGetAllPurchaseOrder();\n    }, []);\n\n    function deletePurchaseOrder(record) {\n        const body = {\n            purchaseOrderId: record.purchaseOrderId,\n            supplierName: null,\n            orderDate: null,\n            storeName: null,\n            // totalAmount: null,\n            deliveryDate: null,\n            rol: null,\n            productDetails: null,\n        };\n        setDeletePurchaseOrder(body);\n    }\n    if (purchaseOrders.length > 0) {\n        data = purchaseOrders.map((order, index) => {\n            return {\n                key: index,\n                purchaseOrderId: order.purchaseOrderId,\n                orderDate: (new Date(order.orderDate)).toDateString(),\n                deliveryDate: order.deliveryDate,\n                supplier: order.supplierName,\n                store: order.storeName,\n                // totalAmount: order.totalAmount,\n                status: ['order placed']\n            };\n        });\n    }\n    return (\n        <>\n            <Table columns={columns} dataSource={data} />\n        </>\n    );\n};\n\nexport default PurchaseOrder;\n","import { useState } from 'react';\nimport { getSuppliersList } from '../queries';\n\nconst useGetAllSuppliers = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [medicines, setMedicineList] = useState([]);\n\n  const request = async () => {\n    setIsLoading(true);\n\n    const response = await getSuppliersList();\n    if (response) {\n        setMedicineList(response);\n    } else {\n      // const err = [];\n      setMedicineList([]);\n    }\n    setIsLoading(false);\n  };\n\n  return [medicines, isLoading, request];\n};\n\nexport default useGetAllSuppliers;","import { useState } from 'react';\nimport { savePurchaseOrder } from '../queries';\n\nconst useSavePurchaseOrder = () => {\n  const [status, setStatus] = useState(false);\n\n  const request = async (body) => {\n    const response = await savePurchaseOrder(body);\n\n    if (response) {\n      if (response.status === \"SUCCESS\") {\n        setStatus(true);\n      }\n    } else {\n      setStatus(false);\n    }\n  };\n\n  return [status, request];\n};\n\nexport default useSavePurchaseOrder;\n","import { useState } from 'react';\nimport { getPurchaseOrderDetails } from '../queries';\n\nconst useGetPurchaseOrderDetails = () => {\n    const [medicines, setMedicineList] = useState(null);\n\n    const request = async (medicineId) => {\n        const response = await getPurchaseOrderDetails(medicineId);\n        if (response) {\n            setMedicineList(response);\n        } else {\n            // const err = [];\n            setMedicineList(null);\n        }\n    };\n\n    return [medicines, request];\n};\n\nexport default useGetPurchaseOrderDetails;","import { MinusCircleOutlined, OrderedListOutlined, PlusOutlined } from '@ant-design/icons';\nimport { AutoComplete, Button, Col, DatePicker, Divider, Form, Input, InputNumber, notification, Row, Select, Space, Switch } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport moment from 'moment';\nimport useGetAllSuppliers from '../../../state/pharmacy/hooks/useGetAllSupplier';\nimport useGetAllPharmacyMedicines from '../../../state/pharmacy/hooks/useGetAllPharmacyMedicines';\nimport useSavePurchaseOrder from '../../../state/pharmacy/hooks/useSavePurchaseOrder';\nimport useGetPurchaseOrderDetails from '../../../state/pharmacy/hooks/useGetPurchaseOrderDetails';\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 9 },\n};\n// eslint-disable-next-line\nconst validateMessages = {\n    // eslint-disable-next-line\n    required: '${label} is required!',\n    types: {\n        // eslint-disable-next-line\n        email: '${label} is not validate email!',\n        // eslint-disable-next-line\n        number: '${label} is not a validate number!',\n    },\n    number: {\n        // eslint-disable-next-line\n        range: '${label} must be between ${min} and ${max}',\n    },\n};\n\nconst NewPurchaseOrder = ({ location, history }) => {\n    const medicineMap = new Map();\n    let options = [];\n    const supplierOptions = [\n        // { value: 'light', label: 'Light' },\n        // { value: 'bamboo', label: 'Bamboo' },\n    ];\n    let index = 0;\n    const [purchaseDetailsForm] = Form.useForm();\n    const [productListForm] = Form.useForm();\n    const [name, setName] = useState(\"\");\n    const [items, setItems] = useState(['ABC pharma', 'Medimex store']);\n    const [suppliers, isLoadings, setSupplierSearch] = useGetAllSuppliers();\n    const queryParams = queryString.parse(location.search);\n    const [medicines, isLoading, setMedicineSearch] = useGetAllPharmacyMedicines();\n    const [status, setSavePurchaseOrder] = useSavePurchaseOrder();\n    const [orderDetail, setGetPurchaseOrderDetails] = useGetPurchaseOrderDetails();\n    // const [purchaseOrderList, isLoading1, setPurchaseOrderListFetch] = UseGetAllPurchaseOrder();\n    useEffect(() => {\n        setMedicineSearch();\n        setSupplierSearch();\n        if (status) {\n            notification[\"success\"]({\n                message: 'SUCCESS',\n                description: 'Purchase order created successfully',\n                duration: 3\n            });\n        }\n        if (queryParams.mode == \"edit\" && queryParams.purchaseOrderId != null) {\n            setGetPurchaseOrderDetails(queryParams.purchaseOrderId);\n        }\n    }, []);\n\n\n    if (orderDetail != null) {\n        console.log(orderDetail);\n        purchaseDetailsForm.setFieldsValue({\n            user: {\n                supplierName: orderDetail.supplierName,\n                // orderDate: moment(orderDetail.orderDate).toDate,\n                storeName: orderDetail.storeName,\n                // deliveryDate: orderDetail.deliveryDate,\n                rol: orderDetail.rol\n            }\n        });\n    }\n    if (suppliers.length > 0) {\n        suppliers.forEach(supplier => {\n            supplierOptions.push({ value: supplier.supplierName, label: supplier.supplierName });\n        });\n    }\n    if (medicines.length > 0) {\n        medicines.forEach(medicine => {\n            options.push({ value: medicine.medicineName, label: medicine.medicineName });\n            medicineMap.set(medicine.medicineName, medicine);\n        });\n    }\n    if (queryParams.mode == \"prefetch\") {\n\n        productListForm.setFieldsValue({\n            users: [{\n                productName: queryParams.medicineName,\n                quantity: 1,\n                unit: \"\",\n                purchaseCost: \"\",\n                batchNumber: \"\",\n                expDate: \"\",\n                discount: \"\",\n                tax: \"\"\n            }]\n        });\n    }\n    const onFinish = formData => {\n        const purchaseDetails = purchaseDetailsForm.getFieldsValue().user;\n\n        const body = {\n            purchaseOrderId: queryParams.purchaseOrderId,\n            supplierName: purchaseDetails.supplierName,\n            orderDate: purchaseDetails.orderDate,\n            storeName: purchaseDetails.storeName,\n            // totalAmount: formData.user.totalAmount,\n            deliveryDate: purchaseDetails.deliveryDate,\n            rol: purchaseDetails.rol,\n            productDetails: [],\n        };\n        const productList = productListForm.getFieldsValue().users;\n        if (productList != null && productList.length > 0) {\n            productList.forEach(product => {\n                const medicine = medicineMap.get(product.productName);\n                body.productDetails.push({\n                    productId: null,\n                    purchaseOrderId: queryParams.purchaseOrderId,\n                    medicineId: medicine.medicineId,\n                    productName: product.productName,\n                    batchNumber: product.batchNumber,\n                    quantity: product.quantity,\n                    unit: product.unit,\n                    purchaseCost: product.purchaseCost,\n                    discount: product.discount,\n                    tax: product.tax\n                });\n            });\n        }\n        setSavePurchaseOrder(body);\n    };\n    function onNameChange(event) {\n        // console.log(\"sas\", event.target.value);\n        setName(event.target.value);\n    };\n    function addItem() {\n        setName('');\n        setItems([...items, name || `New item ${index++}`]);\n    }\n\n    const onSearchProduct = (value) => {\n        // setMedicineSearch();\n    }\n\n    const onSearchSupplier = (value) => {\n        // setSupplierSearch();\n    }\n\n    return (\n        <>\n            <Button onClick={() => {\n                history.push({ pathname: '/home/purchaseOrderList' });\n            }} type=\"dashed\" style={{ marginLeft: '15px' }} icon={<OrderedListOutlined />}>Purchase list</Button>\n            <Button onClick={() => {\n                history.push({ pathname: '/home/manageMedicines' });\n            }} type=\"dashed\" style={{ marginLeft: '15px' }} icon={<OrderedListOutlined />}>Medicine list</Button>\n            <br /><br /><br />\n            <Form form={purchaseDetailsForm}  {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'rol']} label=\"ROL\">\n                            <Switch />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'paid']} label=\"Status\">\n                            <Select\n                                placeholder=\"Status\"\n                                allowClear>\n                                <Option value=\"orderPlaced\">Order Placed</Option>\n                                <Option value=\"delivered\">Delivered</Option>\n                                <Option value=\"cancelled\">Cancelled</Option>\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'supplierName']} label=\"Suppliers Name\" rules={[{ required: true }]}>\n                            <AutoComplete\n                                onSearch={onSearchSupplier}\n                                dropdownClassName=\"certain-category-search-dropdown\"\n                                dropdownMatchSelectWidth={500}\n                                style={{ width: '100%' }}\n                                options={supplierOptions}\n                            >\n                                <Input.Search size=\"default\" placeholder=\"Supplier name\" />\n                            </AutoComplete>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'deliveryDate']} label=\"Delivery Date\">\n                            <DatePicker style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'invoiceN']} label=\"Invoice Number\">\n                            <Input style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'orderDate']} label=\"Order Date\">\n                            <DatePicker style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'storeName']} label=\"Store Name\">\n                            <Select\n                                style={{ width: '100%' }}\n                                placeholder=\"Select Store\"\n                                dropdownRender={menu => (\n                                    <div>\n                                        {menu}\n                                        <Divider style={{ margin: '4px 0' }} />\n                                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                                            <Input style={{ flex: 'auto' }} value={name} onChange={onNameChange} />\n                                            <a\n                                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                                onClick={addItem}\n                                            >\n                                                <PlusOutlined /> Add item\n                                    </a>\n                                        </div>\n                                    </div>\n                                )}\n                            >\n                                {items.map(item => (\n                                    <Option key={item}>{item}</Option>\n                                ))}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    {/* <Col span={12}>\n                        <Form.Item name={['user', 'salesStartDate']} label=\"Sales Start Date\">\n                            <DatePicker style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'salesEndDate']} label=\"Sales End Date\">\n                            <DatePicker style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col> */}\n                </Row>\n            </Form>\n\n            <Form form={productListForm} name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n                <Form.List name=\"users\">\n                    {(fields, { add, remove }) => {\n                        return (\n                            <div>\n                                {fields.map(field => (\n                                    <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"start\">\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'productName']}\n                                            fieldKey={[field.fieldKey, 'productName']}\n                                            rules={[{ required: true, message: 'Missing Product Name!' }]}\n                                        >\n                                            <AutoComplete\n                                                onSearch={onSearchProduct}\n                                                dropdownClassName=\"certain-category-search-dropdown\"\n                                                dropdownMatchSelectWidth={500}\n                                                style={{ width: 250 }}\n                                                options={options}\n                                            >\n                                                <Input.Search size=\"default\" placeholder=\"Product name\" />\n                                            </AutoComplete>\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'batchNumber']}\n                                            fieldKey={[field.fieldKey, 'batchNumber']}\n                                        >\n                                            <Input style={{ minWidth: 150 }} placeholder=\"Batch No.\" />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'quantity']}\n                                            fieldKey={[field.fieldKey, 'quantity']}\n                                        >\n                                            <InputNumber style={{ minWidth: 125 }} placeholder=\"Quantity\" />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'unit']}\n                                            fieldKey={[field.fieldKey, 'unit']}\n                                        >\n                                            <Select\n                                                placeholder=\"Unit\"\n                                                allowClear>\n                                                <Option value=\"1-0-0\">bottle</Option>\n                                                <Option value=\"1-1-0\">box</Option>\n                                            </Select>\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'purchaseCost']}\n                                            fieldKey={[field.fieldKey, 'purchaseCost']}\n                                        >\n                                            <InputNumber style={{ minWidth: 150 }} placeholder=\"Purchase Cost\" />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'expiryDate']}\n                                            fieldKey={[field.fieldKey, 'expiryDate']}\n                                        >\n                                            <DatePicker />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'discount']}\n                                            fieldKey={[field.fieldKey, 'discount']}\n                                        >\n                                            <InputNumber style={{ minWidth: 125 }} placeholder=\"discount\" />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'tax']}\n                                            fieldKey={[field.fieldKey, 'tax']}\n                                        >\n                                            <InputNumber style={{ minWidth: 125 }} placeholder=\"tax\" />\n                                        </Form.Item>\n                                        <MinusCircleOutlined\n                                            onClick={() => {\n                                                remove(field.name);\n                                            }}\n                                        />\n                                    </Space>\n                                ))}\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"dashed\"\n                                        onClick={() => {\n                                            add();\n                                        }}\n                                        block\n                                    >\n                                        <PlusOutlined /> Add Product\n                </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n                <Row gutter={24}>\n                    <Col span={6}>\n                        <Form.Item name={['user', 'totalGST']} label=\"Total GST\">\n                            <InputNumber style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item name={['user', 'totalDiscount']} label=\"Total Discount\">\n                            <InputNumber style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item name={['user', 'totalAmount']} label=\"Total Amount\">\n                            <InputNumber style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={24} style={{ textAlign: 'right' }}>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Save\n                            </Button>\n                            <Button style={{ marginLeft: '15px' }} type=\"primary\">\n                                Print\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n            </Form>\n        </>\n    );\n};\n\n\n\nexport default NewPurchaseOrder;\n","import { MinusCircleOutlined, OrderedListOutlined, PlusOutlined } from '@ant-design/icons';\nimport { AutoComplete, Button, Col, DatePicker, Divider, Form, Input, InputNumber, Row, Select, Space, Switch } from 'antd';\nimport React, { useState } from 'react';\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 9 },\n};\n// eslint-disable-next-line\nconst validateMessages = {\n    // eslint-disable-next-line\n    required: '${label} is required!',\n    types: {\n        // eslint-disable-next-line\n        email: '${label} is not validate email!',\n        // eslint-disable-next-line\n        number: '${label} is not a validate number!',\n    },\n    number: {\n        // eslint-disable-next-line\n        range: '${label} must be between ${min} and ${max}',\n    },\n};\n\nconst IndentPreparation = () => {\n    let options = [];\n    let index = 0;\n    const [name, setName] = useState(\"\");\n    const [items, setItems] = useState(['ABC pharma', 'Medimex store']);\n\n    const onFinish = formData => {\n        const form = formData.user;\n        const body = {\n            \"empId\": \"test123\",\n            \"doctorName\": form.name,\n            \"department\": form.department,\n            \"experience\": form.experience,\n            \"speciality\": form.speciality,\n            \"highestQualification\": form.highestQualification,\n            \"consulationCharge\": form.consulationCharge,\n            \"designation\": form.designation\n        }\n    };\n    function onNameChange(event) {\n        // console.log(\"sas\", event.target.value);\n        setName(event.target.value);\n    };\n    function addItem() {\n        setName('');\n        setItems([...items, name || `New item ${index++}`]);\n    }\n\n    const onSearchProduct = (value) => {\n\n    }\n\n    return (\n        <>\n            {/* <Button type=\"dashed\" style={{ marginLeft: '15px' }} icon={<OrderedListOutlined />}>Purchase list</Button>\n            <Button type=\"dashed\" style={{ marginLeft: '15px' }} icon={<OrderedListOutlined />}>Medicine list</Button> */}\n            <br /><br /><br />\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'patientId']} label=\"Patient Search\" rules={[{ required: true }]}>\n                            <AutoComplete\n                                dropdownClassName=\"certain-category-search-dropdown\"\n                                dropdownMatchSelectWidth={500}\n                                style={{ width: '100%' }}\n                            >\n                                <Input.Search size=\"default\" placeholder=\"Reg. No\" />\n                            </AutoComplete>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'indentDate']} label=\"Indent Date\">\n                            <DatePicker style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'patientName']} label=\"Patient Name\">\n                            <Input placeholder=\"Patient Name\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'consultantName']} label=\"Consultant Name\">\n                            <Input placeholder=\"Consultant Name\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'mobileNumber']} label=\"Mobile\">\n                            <Input placeholder=\"Mobile Number\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'comments']} label=\"Comments\">\n                            <Input.TextArea />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'address']} label=\"Address\">\n                            <Input.TextArea />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n\n            <Form name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n                <Form.List name=\"users\">\n                    {(fields, { add, remove }) => {\n                        return (\n                            <div>\n                                {fields.map(field => (\n                                    <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"start\">\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'productName']}\n                                            fieldKey={[field.fieldKey, 'productName']}\n                                            rules={[{ required: true, message: 'Missing Product Name!' }]}\n                                        >\n                                            <AutoComplete\n                                                onSearch={onSearchProduct}\n                                                dropdownClassName=\"certain-category-search-dropdown\"\n                                                dropdownMatchSelectWidth={500}\n                                                style={{ width: 250 }}\n                                                options={options}\n                                            >\n                                                <Input.Search size=\"default\" placeholder=\"Product name\" />\n                                            </AutoComplete>\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'quantity']}\n                                            fieldKey={[field.fieldKey, 'quantity']}\n                                        >\n                                            <InputNumber style={{ minWidth: 175 }} placeholder=\"Quantity\" />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'uom']}\n                                            fieldKey={[field.fieldKey, 'uom']}\n                                        >\n                                            <Input style={{ minWidth: 125 }} placeholder=\"UOM\" />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'mrp']}\n                                            fieldKey={[field.fieldKey, 'mrp']}\n                                        >\n                                            <InputNumber style={{ minWidth: 175 }} placeholder=\"MRP\" />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'stockQuantity']}\n                                            fieldKey={[field.fieldKey, 'stockQuantity']}\n                                        >\n                                            <InputNumber style={{ minWidth: 175 }} placeholder=\"Stock Quantity\" />\n                                        </Form.Item>\n                                        <MinusCircleOutlined\n                                            onClick={() => {\n                                                remove(field.name);\n                                            }}\n                                        />\n                                    </Space>\n                                ))}\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"dashed\"\n                                        onClick={() => {\n                                            add();\n                                        }}\n                                        block\n                                    >\n                                        <PlusOutlined /> Add Product\n                </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n                <Row gutter={24}>\n                    <Col span={6}>\n                        <Form.Item name={['user', 'totalAmount']} label=\"Total Amount\">\n                            <InputNumber style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'right' }}>\n                        <Form.Item htmlType=\"submit\">\n                            <Button type=\"primary\">\n                                Bill\n                            </Button>\n                            <Button type=\"primary\" style={{ marginLeft: '15px' }} >\n                                Add New\n                            </Button>\n                            <Button style={{ marginLeft: '15px' }} type=\"primary\">\n                                Print\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n            </Form>\n        </>\n    );\n};\n\n\nexport default IndentPreparation;","import { useState } from 'react';\nimport { saveSupplier } from '../queries';\n\nconst useAddSupplier = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState(false);\n\n  const request = async (body) => {\n    setIsLoading(true);\n    const response = await saveSupplier(body);\n\n    if (response) {\n      if (response.status === \"SUCCESS\") {\n        setStatus(true);\n      }\n      // dispatch(listProducts(response));\n    } else {\n      // const err = [];\n      setStatus(false);\n      // dispatch(listProducts(err));\n    }\n    setIsLoading(false);\n  };\n\n  return [status, isLoading, request];\n};\n\nexport default useAddSupplier;\n","import { UserOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, InputNumber, notification, Table, Space } from 'antd';\nimport React, { useEffect } from 'react';\nimport Spinner from '../../../components/spinner';\nimport useAddMedicine from '../../../state/addMedicine/hooks/useAddMedicine';\nimport useMedicineSearch from '../../../state/addMedicine/hooks/useSearchMedicine';\nimport useAddSupplier from '../../../state/pharmacy/hooks/useAddSupplier';\nimport useGetAllSuppliers from '../../../state/pharmacy/hooks/useGetAllSupplier';\n\nconst ManageSupplier = () => {\n    const data = [];\n    const [form] = Form.useForm();\n    // const [, forceUpdate] = useState();\n    const [status, isLoading, setRequest] = useAddSupplier();\n    const [suppliers, isLoadings, setMedicineSearch] = useGetAllSuppliers();\n    // To disable submit button at the beginning.\n    useEffect(() => {\n        if (status) {\n            notification[\"success\"]({\n                message: 'SUCCESS',\n                description: 'Supplier added successfully',\n                duration: 3\n            });\n            setMedicineSearch();\n        }\n        if (suppliers.length === 0) {\n            setMedicineSearch();\n        }\n        // forceUpdate({});\n    }, [status]);\n    const onFinish = formData => {\n        const body = {\n            \"supplierName\": formData.name,\n            \"email\": formData.email,\n            \"phoneNumber\": formData.phone,\n            \"address\": formData.address,\n        };\n        setRequest(body);\n        form.setFieldsValue({\n            \"name\": \"\",\n            \"email\": \"\",\n            \"phone\": \"\",\n            \"address\": \"\",\n        });\n        \n    };\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'supplierName',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.medicineName - b.medicineName,\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email'\n        },\n        {\n            title: 'Phone number',\n            dataIndex: 'phoneNumber'\n        },\n        {\n            title: 'Address',\n            dataIndex: 'address'\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <a onClick={()=> editSupplier(record)}>Edit</a>\n                    <a>Delete</a>\n                </Space>\n            ),\n        },\n    ];\n\n    function editSupplier(record) {\n        form.setFieldsValue({\n            \"name\": record.supplierName,\n            \"email\": record.email,\n            \"phone\": record.phoneNumber,\n            \"address\": record.address,\n        });\n    }\n\n    if (suppliers.length > 0) {\n        suppliers.forEach((supplier, index) => {\n            data.push({\n                key: index,\n                supplierId: supplier.supplierId,\n                supplierName: supplier.supplierName,\n                email: supplier.email,\n                phoneNumber: supplier.phoneNumber,\n                address: supplier.address,\n            });\n        });\n    }\n\n    function onChange(pagination, filters, sorter, extra) {\n        console.log('params', pagination, filters, sorter, extra);\n    }\n    return (\n        <>\n            <Spinner show={isLoading} />\n            <Form form={form} name=\"horizontal_login\" layout=\"inline\" onFinish={onFinish}>\n                <Form.Item\n                    name=\"name\"\n                    rules={[{ required: true, message: 'Please add supplier name!' }]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Supplier name\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"email\"\n                    rules={[{ required: false, message: 'Please input a type!' }]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"phone\"\n                    rules={[{ required: false, message: 'Please input contact!' }]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Contact\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"address\"\n                    rules={[{ required: false, message: 'Please add supplier name!' }]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Address\" />\n                </Form.Item>\n                <Form.Item shouldUpdate={true}>\n                    {() => (\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            disabled={\n                                !form.isFieldsTouched(true) ||\n                                form.getFieldsError().filter(({ errors }) => errors.length).length\n                            }\n                        >\n                            Add Supplier\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <br /><br /><br />\n            <Table columns={columns} dataSource={data} onChange={onChange} />\n        </>\n    );\n};\n\nexport default ManageSupplier;","import React, { useEffect, useState } from 'react';\n\nimport { Table, Tag, Space } from 'antd';\n\nconst columns = [\n    {\n        title: 'Patient Reg No',\n        dataIndex: 'regNo',\n        key: 'regNo',\n        render: text => <a>{text}</a>,\n    },\n    {\n        title: 'Patient Name',\n        dataIndex: 'patientName',\n        key: 'patientName',\n    },\n    {\n        title: 'Indent Date and Time',\n        dataIndex: 'indentDate',\n        key: 'indentDate',\n    },\n    {\n        title: 'Submitted By',\n        dataIndex: 'submittedBy',\n        key: 'submittedBy',\n    },\n    {\n        title: 'Status',\n        key: 'status',\n        dataIndex: 'status',\n        render: tags => (\n            <>\n                {tags.map(tag => {\n                    return (\n                        <Tag color=\"green\" key={tag}>\n                            {tag.toUpperCase()}\n                        </Tag>\n                    );\n                })}\n            </>\n        ),\n    },\n    {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => (\n            <Space size=\"middle\">\n                <a>view</a>\n                <a>edit</a>\n            </Space>\n        ),\n    },\n];\n\nconst data = [\n    {\n        key: '1',\n        orderDate: '',\n        deliveryDate: '',\n        supplier: '',\n        store: '',\n        totalAmount: '',\n        status: ['paid']\n    },\n    {\n        key: '2',\n        orderDate: '',\n        deliveryDate: '',\n        supplier: '',\n        store: '',\n        totalAmount: '',\n        status: ['paid']\n\n    },\n    {\n        key: '3',\n        orderDate: '',\n        deliveryDate: '',\n        supplier: '',\n        store: '',\n        totalAmount: '',\n        status: ['paid']\n\n    },\n];\n\nconst IndentList = () => {\n    return (\n        <>\n            <Table columns={columns} dataSource={data} />\n        </>\n    );\n};\n\nexport default IndentList;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Row, Col, Divider, InputNumber, Button, Upload, Select, notification, DatePicker } from 'antd';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nconst layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 9 },\n};\nconst Certificates = () => {\n    const [value, setValue] = useState('');\n\n    const onFinish = formData => {\n        const form = formData.user;\n    };\n\n    return (\n        <>\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish}>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'name']} label=\"Name\">\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'guardianName']} label=\"Guardian Name\">\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'relation']} label=\"Relation\">\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'dateAndTime']} label=\"Date and time\">\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n            <ReactQuill theme=\"snow\" value={value} onChange={setValue} />\n\n            <Row style={{ textAlign: 'right', marginTop: 30 }}>\n                <Col span={24} style={{ textAlign: 'right' }}>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Generate\n                            </Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Certificates;\n","import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { AutoComplete, Button, Col, DatePicker, Form, Input, Switch, InputNumber, Row, Select, Space } from 'antd';\nimport React, { useState } from 'react';\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 9 },\n};\n// eslint-disable-next-line\nconst validateMessages = {\n    // eslint-disable-next-line\n    required: '${label} is required!',\n    types: {\n        // eslint-disable-next-line\n        email: '${label} is not validate email!',\n        // eslint-disable-next-line\n        number: '${label} is not a validate number!',\n    },\n    number: {\n        // eslint-disable-next-line\n        range: '${label} must be between ${min} and ${max}',\n    },\n};\n\nconst NewPackage = () => {\n    let options = [];\n    const onFinish = formData => {\n        const form = formData.user;\n    };\n\n    const onSearchProduct = (value) => {\n\n    }\n    return (\n        <>\n            <Button type=\"dashed\" icon={<PlusOutlined />}>All Packages</Button>\n            {/* <Button type=\"dashed\" style={{ marginLeft: '15px' }} icon={<OrderedListOutlined />}>Manage Medicine</Button>\n            <Button type=\"dashed\" style={{ marginLeft: '15px' }} icon={<OrderedListOutlined />}>Import Medicine</Button> */}\n            <br /><br /><br />\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'packageName']} label=\"Package Name\" rules={[{ required: true }]}>\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'packageEndDate']} label=\"Package End Date\">\n                            <DatePicker style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'packagePrice']} label=\"Package Price\" rules={[{ required: true, type: 'number', min: 0, max: 5000 }]}>\n                            <InputNumber style={{ width: '100%' }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item name={['user', 'status']} label=\"Status\" >\n                            <Switch />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n\n            <Form name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n                <Form.List name=\"users\">\n                    {(fields, { add, remove }) => {\n                        return (\n                            <div>\n                                {fields.map(field => (\n                                    <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"start\">\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'productName']}\n                                            fieldKey={[field.fieldKey, 'productName']}\n                                            rules={[{ required: true, message: 'Missing Product Name!' }]}\n                                        >\n                                            <AutoComplete\n                                                onSearch={onSearchProduct}\n                                                dropdownClassName=\"certain-category-search-dropdown\"\n                                                dropdownMatchSelectWidth={500}\n                                                style={{ width: 250 }}\n                                                options={options}\n                                            >\n                                                <Input.Search size=\"default\" placeholder=\"Product name\" />\n                                            </AutoComplete>\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'quantity']}\n                                            fieldKey={[field.fieldKey, 'quantity']}\n                                        >\n                                            <InputNumber style={{ minWidth: 200 }} placeholder=\"quantity\" />\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            name={[field.name, 'price']}\n                                            fieldKey={[field.fieldKey, 'price']}\n                                        >\n                                            <InputNumber style={{ minWidth: 200 }} placeholder=\"price\" />\n                                        </Form.Item>\n                                        <MinusCircleOutlined\n                                            onClick={() => {\n                                                remove(field.name);\n                                            }}\n                                        />\n                                    </Space>\n                                ))}\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"dashed\"\n                                        onClick={() => {\n                                            add();\n                                        }}\n                                        block\n                                    >\n                                        <PlusOutlined /> Add Items\n                                    </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'right' }}>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Save\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n            </Form>\n        </>\n    );\n};\n\n\n\nexport default NewPackage;\n","import React, { useEffect } from 'react';\n\nconst InProgress = () => {\n    return (\n        <>\n        <h1 style={{fontSize: '56px'}}>The Page is in Progress ...</h1>\n        </>\n    );\n};\n\nexport default InProgress;\n","import { useState } from 'react';\nimport { getPrescriptionByAppointmentId } from '../queries';\n\nconst useGetPrescriptionByAppointmentId = () => {\n    const [medicines, setMedicineList] = useState(null);\n\n    const request = async (appointmentId) => {\n        const response = await getPrescriptionByAppointmentId(appointmentId);\n        if (response) {\n            setMedicineList(response);\n        } else {\n            // const err = [];\n            setMedicineList(null);\n        }\n    };\n\n    return [medicines, request];\n};\n\nexport default useGetPrescriptionByAppointmentId;","import React, { useRef } from 'react';\nimport logo from '../../../assets/images/logo.jpg';\nimport hospitalDetails from '../../../utils/constants';\nimport './printPrescription.css';\nexport class PrintPrescription extends React.Component {\n    render() {\n        const itemList = this.props.itemList;\n        const appointmentId = this.props.appointmentId;\n        const patientId = this.props.patientId;\n        const patientDetails = this.props.patientDetails;\n        const patientVitals = this.props.patientVitals;\n        const todaysDate = (new Date()).toDateString() + + ' ' + (new Date()).toLocaleTimeString();\n        let medicineTable = \"\";\n        let testTable = \"\";\n        if (this.props.medicineList != null && this.props.medicineList.length > 0) {\n            const medicineList = this.props.medicineList.map(item => {\n                return (\n                    <tr>\n                        <td>{item.medicineName}</td>\n                        <td>{item.dosage}</td>\n                        <td>{item.days}</td>\n                        <td>{item.comment}</td>\n                    </tr>)\n            });\n            medicineTable = <div style={{ width: '100%' }}>\n                <h3 class=\"heading\" >Prescribed medicines</h3>\n                <table class=\"itemTable\" >\n                    <tr>\n                        <th>Medicine Name</th>\n                        <th>Dosage</th>\n                        <th>Days</th>\n                        <th>Comment</th>\n                    </tr>\n                    {medicineList}\n                </table>\n            </div>\n        }\n        if (this.props.testList != null && this.props.testList.length > 0) {\n            const testList = this.props.testList.map(item => {\n                return (\n                    <tr>\n                        <td>{item.testName}</td>\n                        <td>{item.dateOfBooking}</td>\n                        <td>{item.dateOfResult}</td>\n                        <td>{item.reportDesc}</td>\n                        <td>{item.testDesc}</td>\n                    </tr>)\n            });\n            testTable = <div style={{ width: '100%' }}>\n                <h3 class=\"heading\" >Prescribed tests</h3>\n                <table class=\"itemTable\">\n                    <tr>\n                        <th>Test Name</th>\n                        <th>Test Date</th>\n                        <th>Report Date</th>\n                        <th>Doctor comment</th>\n                        <th>Report summary</th>\n                    </tr>\n                    {testList}\n                </table>\n            </div>\n\n        }\n\n        return (\n            <>\n                <div id=\"wrapper\" style={{ marginTop: '30px', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                    <div>\n                        <img style={{ width: \"400px\", margin: \"0 auto\" }} src={logo} />\n                        <div style={{ marginLeft: '20px', fontSize: '12px', fontWeight: 'bold' }}>\n                            <p>{hospitalDetails.address}</p>\n                            <p>Contact: {hospitalDetails.contact}</p>\n                        </div>\n                    </div>\n                    <div style={{ width: '100%', height: '2px', background: 'grey', margin: '10px 0px' }}></div>\n                    <h3 class=\"heading\" >Patient Info</h3>\n                    <table border=\"1\" cellpadding=\"5\" cellspacing=\"5\" width=\"100%\">\n                        <tr>\n                            <th>Name</th>\n                            <th>{patientDetails.patientName}</th>\n                            <td>Age</td>\n                            <td>{patientDetails.age}</td>\n                        </tr>\n                        <tr>\n                            <td>PatientId</td>\n                            <td>{patientId}</td>\n                            <td>AppointmentId</td>\n                            <td>{appointmentId}</td>\n                        </tr>\n                        <tr>\n                            <td>Date</td>\n                            <td>{todaysDate}</td>\n                            <td>Visit type</td>\n                            <td>{patientDetails.visitType}</td>\n                        </tr>\n                    </table>\n                    <br></br>\n                    <div style={{ width: '100%', height: '2px', background: 'grey', margin: '10px 0px' }}></div>\n                    <h3 class=\"heading\" >Patient Vitals</h3>\n                    <table border=\"1\" cellpadding=\"5\" cellspacing=\"5\" width=\"100%\">\n                        <tr>\n                            <th>Height : {patientVitals.height}</th>\n                            <td>Weight : {patientVitals.weight}</td>\n                            <td>Bp : {patientVitals.Bp}</td>\n                        </tr>\n\n                        <tr>\n                            <td>Temperature : {patientVitals.temperature}</td>\n                            <td>Disease description : {patientVitals.diseaseDesc}</td>\n                        </tr>\n                        <tr>\n                            {/* <td>Visit type</td>\n                            <td>{patientDetails.visitType}</td> */}\n                        </tr>\n                    </table>\n                    <br></br>\n                    <div style={{ width: '100%', height: '2px', background: 'grey', margin: '10px 0px' }}></div>\n                    {medicineTable}\n                    {testTable}\n                    <div style={{ width: '100%', height: '2px', background: 'grey', margin: '10px 0px' }}></div>\n                    <table border=\"1\" cellpadding=\"5\" cellspacing=\"5\" width=\"100%\">\n                        <tr>\n                            <th>Appointment summary : {patientVitals.advise}</th>\n                        </tr>\n                    </table>\n                    <div style={{ marginTop: '50px', width: '100%', padding: '20px' }}>\n                        {/* <div>Cashier Signature</div> */}\n                        <div style={{ float: 'right' }}>Doctor's Signature</div>\n\n                    </div>\n                </div>\n\n            </>\n\n        );\n    }\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Table, Descriptions, Button } from 'antd';\nimport { useReactToPrint } from 'react-to-print';\nimport useGetPrescriptionByAppointmentId from '../../../state/prescription/hooks/useGetPrescriptionByAppointmentId';\nimport queryString from 'query-string';\nimport usePatientById from '../../../state/patientSearch/hooks/usePatientSearchbyId';\nimport PatientDetails from '../../patientDetails';\nimport { PrinterOutlined } from '@ant-design/icons';\nimport { PrintPrescription } from '../printPrescription';\nconst medicinecolumns = [\n    {\n        title: 'Medicine Name',\n        dataIndex: 'medicineName',\n    },\n    {\n        title: 'Dosage',\n        dataIndex: 'dosage',\n    },\n    {\n        title: 'Days',\n        dataIndex: 'days',\n    },\n    {\n        title: 'Comment',\n        dataIndex: 'comment',\n    },\n];\n\nconst testcolumns = [\n    {\n        title: 'Test Name',\n        dataIndex: 'testName',\n    },\n    {\n        title: 'Test Date',\n        dataIndex: 'dateOfBooking',\n    },\n    {\n        title: 'Report Date',\n        dataIndex: 'dateOfResult',\n    },\n    {\n        title: 'Doctor comment',\n        dataIndex: 'testDesc',\n\n    },\n    {\n        title: 'Report Summary',\n        dataIndex: 'reportDesc',\n\n    }\n];\n\n\nconst ViewPrescription = ({ location, history }) => {\n    const medicineData = [];\n    const testData = [];\n\n    let appointmentDetails = {\n        appointmentId: '',\n        diseaseDesc: '',\n        advise: '',\n        patientId: '',\n        patientName: '',\n        doctorId: '',\n        height: '',\n        weight: '',\n        Bp: '',\n        createdAt: '',\n        appointmentDate: '',\n        timeSlot: '',\n        status: '',\n        temperature: ''\n    };\n\n    const queryParams = queryString.parse(location.search);\n    const [prescriptionDetails, setPrescriptionDetails] = useGetPrescriptionByAppointmentId();\n    const [patientDetails, isLoading, setPatientSearchById] = usePatientById(queryParams.patientId);\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    useEffect(() => {\n        setPrescriptionDetails(queryParams.appointmentId);\n        setPatientSearchById(queryParams.patientId);\n    }, []);\n\n    if (prescriptionDetails != null) {\n        console.log(prescriptionDetails);\n        if (prescriptionDetails.appointmentDto != null) {\n            const appointmentDto = prescriptionDetails.appointmentDto;\n            console.log('le bhgat', appointmentDto);\n            appointmentDetails = {\n                appointmentId: appointmentDto.appointmentId,\n                diseaseDesc: appointmentDto.diseaseDesc,\n                advise: appointmentDto.advise,\n                patientId: appointmentDto.patientId,\n                patientName: appointmentDto.patientName,\n                doctorId: appointmentDto.doctorId,\n                height: appointmentDto.height,\n                weight: appointmentDto.weight,\n                Bp: appointmentDto.Bp,\n                createdAt: appointmentDto.createdAt,\n                appointmentDate: appointmentDto.appointmentDate,\n                timeSlot: appointmentDto.timeSlot,\n                status: appointmentDto.status,\n            }\n        }\n\n        if (prescriptionDetails.prescribedMedsDtoList != null) {\n            prescriptionDetails.prescribedMedsDtoList.forEach((medicine, index) => {\n                medicineData.push({\n                    key: medicine.medName + index,\n                    medicineName: medicine.medName,\n                    dosage: medicine.dosage,\n                    days: medicine.days,\n                    comment: medicine.comment\n\n                });\n            });\n        }\n        if (prescriptionDetails.prescribedTestingDtoList != null) {\n            prescriptionDetails.prescribedTestingDtoList.forEach((test, index) => {\n                testData.push({\n                    key: test + index,\n                    testName: test.testDesc,\n                    dateOfBooking: test.dateOfBooking,\n                    dateOfResult: test.dateOfResult,\n                    reportDesc: test.reportDesc,\n                    testDesc: test.comment,\n                });\n            });\n        }\n    }\n    return (\n        <>\n            <Button type=\"primary\" style={{ float: \"right\" }} shape=\"round\" icon={<PrinterOutlined />} size=\"default\" onClick={handlePrint}>\n                Print\n        </Button>\n            <div style={{ display: 'none' }}>\n                <PrintPrescription ref={componentRef} patientVitals={appointmentDetails} appointmentId={appointmentDetails.appointmentId} patientId={queryParams.patientId} medicineList={medicineData} testList={testData} patientDetails={patientDetails} />\n            </div>\n            <h4>Patient Info</h4>\n            <br />\n            <Descriptions title=\"\" layout=\"Horizontal\">\n                <Descriptions.Item label=\"Name\">{patientDetails.patientName} </Descriptions.Item>\n                <Descriptions.Item label=\"Age\">{patientDetails.age}</Descriptions.Item>\n                <Descriptions.Item label=\"AppointmentId\">{appointmentDetails.appointmentId}</Descriptions.Item>\n                <Descriptions.Item label=\"Visit Type\">{patientDetails.visitType}</Descriptions.Item>\n            </Descriptions>\n            <br />\n            <hr />\n            <h4>Patient Vitals</h4>\n            <br />\n            <Descriptions title=\"\" layout=\"Horizontal\">\n                <Descriptions.Item label=\"Height\">{appointmentDetails.height}</Descriptions.Item>\n                <Descriptions.Item label=\"Weight\">{appointmentDetails.weight}</Descriptions.Item>\n                <Descriptions.Item label=\"BP\">{appointmentDetails.Bp}</Descriptions.Item>\n                <Descriptions.Item label=\"Temperature\">{appointmentDetails.temperature}</Descriptions.Item>\n                <Descriptions.Item label=\"Disease description\">{appointmentDetails.diseaseDesc}</Descriptions.Item>\n\n            </Descriptions>\n            <br />\n            <hr />\n            <h4>Prescribed Medicines</h4>\n            <Table columns={medicinecolumns} dataSource={medicineData} size=\"middle\" />\n            <hr />\n            <h4>Prescribed Tests</h4>\n            <Table columns={testcolumns} dataSource={testData} size=\"middle\" />\n            <hr />\n            <Descriptions title=\"\" layout=\"Horizontal\">\n                <Descriptions.Item label=\"Appointment Summary\">{appointmentDetails.advise}</Descriptions.Item>\n            </Descriptions>\n        </>\n\n    );\n};\n\nexport default ViewPrescription;","import { MedicineBoxOutlined, MenuFoldOutlined, MenuUnfoldOutlined, UploadOutlined, UserOutlined, VideoCameraOutlined } from '@ant-design/icons';\nimport { Layout, Menu } from 'antd';\nimport React, { useState } from 'react';\nimport { Link, Route } from \"react-router-dom\";\nimport AddDoctor from '../admin/addDoctor';\nimport Appointment from '../appointment';\nimport Billing from '../billing';\nimport Canteen from '../canteen';\nimport CanteenStock from '../canteen/canteenStock';\nimport DoctorAppointment from '../doctorAppointment';\nimport '../home/home.css';\nimport AddMedicine from '../medicine/addMedicine';\nimport AddTest from '../medicine/addTest';\nimport PackageManagement from '../package';\nimport PatientSearch from '../patientSearch';\nimport Pharmacy from '../pharmacy';\nimport Prescription from '../prescription';\nimport Registration from '../registration';\nimport HomeScreen from './homescreen';\nimport AddNewMedicine from '../pharmacy/addNewMedicine';\nimport ManageMedicines from '../pharmacy/manageMedicine';\nimport PurchaseOrder from '../pharmacy/purchaseOrderList';\nimport NewPurchaseOrder from '../pharmacy/newPurchaseOrder';\nimport IndentPreparation from '../pharmacy/indentPreparations';\nimport ManageSupplier from '../pharmacy/manageSupplier';\nimport IndentList from '../pharmacy/indentPreparations/indentList';\nimport Certificates from '../certificates';\nimport Package from '../package';\nimport NewPackage from '../package/newPackage';\nimport InProgress from '../inProgress';\nimport viewPrescription from '../prescription/viewPrescription';\nimport ViewPrescription from '../prescription/viewPrescription';\nimport { useStateValue } from '../../state';\n\nconst { Header, Sider, Content, Footer } = Layout;\nconst { SubMenu } = Menu;\n\nconst Home = ({ location, history, match }) => {\n  const path = match.path;\n  const [{ auth }, dispatch] = useStateValue();\n  const [collapsed, setCollapsed] = useState(false);\n  const [itemSelected, setItemSelected] = useState(\"\");\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n    setItemSelected(\"\");\n  };\n\n  const handleClick = e => {\n    setItemSelected(e.key);\n  };\n\n  return (\n    <Layout>\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        <div className=\"logo\" />\n        <Menu onSelect={handleClick} theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n          <SubMenu key=\"Patient\" icon={<UserOutlined />} title=\"Patient\">\n            <Menu.Item key=\"Patient Registration\"><Link to={`${path}/registration`}>Registration</Link></Menu.Item>\n            <Menu.Item key=\"Search Patients\"><Link to={`${path}/patientSearch`}>Search Patients</Link></Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"doctor\" icon={<UserOutlined />} title=\"Doctor\">\n            <Menu.Item key=\"Doctor Appointment\"><Link to={`${path}/doctorAppointment`}>Appointments</Link></Menu.Item>\n            {/* <Menu.Item key=\"Search Patients\"><Link to={`${path}/patientSearch`}>Search Patients</Link></Menu.Item> */}\n          </SubMenu>\n          <SubMenu key=\"Admin\" icon={<UserOutlined />} title=\"Admin\">\n            <Menu.Item key=\"Add Doctors\"><Link to={`${path}/addDoctor`}>Add Doctors</Link></Menu.Item>\n            <Menu.Item key=\"Add Medicines\"><Link to={`${path}/addMedicine`}>Add Medicines</Link></Menu.Item>\n            <Menu.Item key=\"Add Test\"><Link to={`${path}/addTest`}>Add Tests</Link></Menu.Item>\n            <Menu.Item key=\"Service Catalogue\"><Link to={`${path}/inProgress`}>Service Catalogue</Link></Menu.Item>\n            {/* <Menu.Item key=\"Add Departments\">Add Departments</Menu.Item>\n              <Menu.Item key=\"Add Employees\">Add Employees</Menu.Item>\n              <Menu.Item key=\"Add Services\">Add Services</Menu.Item> */}\n          </SubMenu>\n          <SubMenu key=\"Pharmacy Management\" icon={<MedicineBoxOutlined />} title=\"Pharmacy\">\n            {/* <Menu.Item key=\"Indent Preparation\"><Link to={`${path}/indentPreparation`}>Indent Preparation</Link></Menu.Item> */}\n            {/* <Menu.Item key=\"Indent List\"><Link to={`${path}/indentList`}>Indent List</Link></Menu.Item> */}\n            <Menu.Item key=\"Add New Medicine\"><Link to={`${path}/addNewMedicine`}>New Medicine</Link></Menu.Item>\n            <Menu.Item key=\"Purchase Order List\"><Link to={`${path}/purchaseOrderList`}>Purchase List</Link></Menu.Item>\n            <Menu.Item key=\"New Purchase Order\"><Link to={`${path}/newPurchaseOrder`}>New Purchase Order</Link></Menu.Item>\n            <Menu.Item key=\"Manage Medicines\"><Link to={`${path}/manageMedicines`}>Manage Medicine</Link></Menu.Item>\n            <Menu.Item key=\"Manage Suppliers\"><Link to={`${path}/manageSuppliers`}>Manage Suppliers</Link></Menu.Item>\n          </SubMenu>\n          <Menu.Item key=\"Billing\" icon={<UploadOutlined />}>\n            <Link to={`${path}/billing`}>Billing</Link>\n          </Menu.Item>\n          <Menu.Item key=\"Appointment\" icon={<UploadOutlined />}>\n            <Link to={`${path}/appointment`}>Appointment</Link>\n          </Menu.Item>\n          {/* <Menu.Item key=\"Prescription\" icon={<UploadOutlined />}>\n            <Link to={`${path}/prescription`}>Prescription</Link>\n          </Menu.Item> */}\n          <SubMenu key=\"Upcoming Features\" icon={<UserOutlined />} title=\"Upcoming\">\n            <Menu.Item key=\"Certificates\" icon={<UploadOutlined />}>\n              <Link to={`${path}/certificates`}>Certificates</Link>\n            </Menu.Item>\n            <Menu.Item key=\"Package Management\" icon={<UploadOutlined />}>\n              <Link to={`${path}/package`}>Packages</Link>\n            </Menu.Item>\n            <Menu.Item key=\"Canteen\" icon={<UploadOutlined />}>\n              <Link to={`${path}/canteen`}>Canteen</Link>\n            </Menu.Item>\n            <Menu.Item key=\"Pharmacy\" icon={<VideoCameraOutlined />}>\n              <Link to={`${path}/pharmacy`}>Pharmacy</Link>\n            </Menu.Item>\n            <Menu.Item key=\"Reimbursements\" icon={<UploadOutlined />}>\n              Reimbursements\n            </Menu.Item>\n            <Menu.Item key=\"Insurance\" icon={<UploadOutlined />}>\n              Insurance\n            </Menu.Item>\n            <Menu.Item key=\"Certificate creation\" icon={<UploadOutlined />}>\n              Certificate creation\n            </Menu.Item>\n            <Menu.Item key=\"Referrals\" icon={<UploadOutlined />}>\n              Referrals\n            </Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n            className: 'trigger',\n            onClick: toggle,\n          })}\n          {itemSelected}\n        </Header>\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: '24px 16px',\n            padding: 24,\n            minHeight: 280,\n            overflow: 'auto',\n            height: '100vh',\n          }}\n        >\n          <Route exact path=\"/home\" component={HomeScreen} />\n          <Route path={`${path}/billing`} component={Billing} />\n          <Route path={`${path}/registration`} component={Registration} />\n          <Route path={`${path}/patientSearch`} component={PatientSearch} />\n          <Route path={`${path}/addDoctor`} component={AddDoctor} />\n          <Route path={`${path}/appointment`} component={Appointment} />\n          <Route path={`${path}/doctorAppointment`} component={DoctorAppointment} />\n          <Route path={`${path}/prescription`} component={Prescription} />\n          <Route path={`${path}/addMedicine`} component={AddMedicine} />\n          <Route path={`${path}/addTest`} component={AddTest} />\n          <Route path={`${path}/packages`} component={PackageManagement} />\n          <Route path={`${path}/canteen`} component={Canteen} />\n          <Route path={`${path}/canteenStock`} component={CanteenStock} />\n          <Route path={`${path}/pharmacy`} component={Pharmacy} />\n          <Route path={`${path}/addNewMedicine`} component={AddNewMedicine} />\n          <Route path={`${path}/manageMedicines`} component={ManageMedicines} />\n          <Route path={`${path}/purchaseOrderList`} component={PurchaseOrder} />\n          <Route path={`${path}/newPurchaseOrder`} component={NewPurchaseOrder} />\n          <Route path={`${path}/indentPreparation`} component={IndentPreparation} />\n          <Route path={`${path}/indentList`} component={IndentList} />\n          <Route path={`${path}/certificates`} component={Certificates} />\n          <Route path={`${path}/package`} component={Package} />\n          <Route path={`${path}/newPackage`} component={NewPackage} />\n          <Route path={`${path}/manageSuppliers`} component={ManageSupplier} />\n          <Route path={`${path}/inProgress`} component={InProgress} />\n          <Route path={`${path}/viewPrescription`} component={ViewPrescription} />\n\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>BayMax ©2021</Footer>\n      </Layout>\n    </Layout>\n  );\n\n}\n\n\nexport default Home;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { StateProvider } from '../state';\nimport { INITIAL_STATE as AUTH_INITIAL_STATE } from '../state/auth/reducers';\nimport { INITIAL_STATE as PRODUCT_INITIAL_STATE } from '../state/product/reducers';\nimport reducers from '../state/reducers';\nimport BaseStyles from './base-styles';\nimport PrivateRoute from './private-route';\nimport Content from '../components/content';\nimport Header from '../components/header';\nimport Login from '../views/login';\nimport Home from '../views/home';\n\nconst Root = props => {\n  const initialState = {\n    auth: AUTH_INITIAL_STATE,\n    product: PRODUCT_INITIAL_STATE,\n  };\n  return (\n    <StateProvider initialState={initialState} reducer={reducers}>\n      <BaseStyles />\n      <Router>\n        <>\n          <Header />\n          <Content>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              {/* <PrivateRoute path=\"/billing\" component={Billing} /> */}\n              <Route path=\"/home\" component={Home} />\n            </Switch>\n          </Content>\n        </>\n      </Router>\n    </StateProvider>\n  );\n};\n\nexport default Root;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Root from './routes';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nrender(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/logo.e8f986ac.jpg\";"],"sourceRoot":""}